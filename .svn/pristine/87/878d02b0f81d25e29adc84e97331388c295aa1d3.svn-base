<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
    <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
    <title></title>
    <style>
        textarea {
        resize: none;
        }

    [v-cloak] {
        display: none;
    }
    </style>
</head>
<body id="root" v-cloak>
    <div class="OpenContainer">
        <form class="layui-form">
            <div class="layui-form-item">
                <label class="layui-form-label">表单名称：</label>
                <div class="layui-input-block">
                    <input type="text" name="FormName" lay-verify="required" autocomplete="off" class="layui-input" v-model="SubmitCustomForm.FormName">
                </div>
            </div>

            <div class="layui-form-item">
                <label class="layui-form-label">表单分组：</label>
                <div class="layui-input-block">
                    <remote-sel v-bind:setting="FormTypeSetting" layverify="required" v-bind:value.sync="SubmitCustomForm.FormTypeID" initial="off"></remote-sel>
                </div>
            </div>

            <div class="layui-form-item">
                <label class="layui-form-label">分配方式：</label>
                <div class="layui-input-block">
                    <remote-rad v-bind:setting="FormAllotSetting" layverify="required" v-bind:value.sync="SubmitCustomForm.FormAllot" initial="off"></remote-rad>
                </div>
            </div>

            <div class="layui-form-item" v-show="!isShowCustomer">
                <label class="layui-form-label">客服人员：</label>
                <div class="layui-input-block">
                    <remote-sel2 v-bind:setting="CustomerSetting" laytips="请选择客服人员" layverify="required" v-bind:value.sync="CustomerList" initial="off"></remote-sel2>
                </div>
            </div>

            <div class="layui-form-item">
                <label class="layui-form-label">报名信息：</label>
                <div class="layui-input-block">
                    <remote-rad v-bind:setting="FormSetting" v-bind:value.sync="SubmitCustomForm.FormType" initial="off"></remote-rad>
                </div>
            </div>

            <div class="layui-form-item" v-if="LayoutConfigList.length>0">
                <div class="layui-input-block">
                    <span v-data:self="elementItem" v-bind:index="elementIndex" v-for="(elementIndex,elementItem) in LayoutConfigList">
                        <span v-if="elementItem.Editable == 2">
                            <input type="checkbox" lay-skin="primary" title="{{elementItem.ShowName}}" name="{{elementItem.ID}}" checked="" disabled="" lay-filter="ssss">
                        </span>
                        <span v-else>
                            <input type="checkbox" lay-skin="primary" title="{{elementItem.ShowName}}" name="{{elementItem.ID}}" lay-filter="ssss">
                        </span>
                    </span>
                </div>
            </div>

            <div class="layui-form-item "><!--layui-hide-->
                <div class="layui-input-block">
                    <input class="layui-btn" type="button" @click="addField" value="保存设置" />
                </div>
            </div>
        </form>
    </div>
</body>
</html>

<script src="https://bbsresources.oss-cn-hangzhou.aliyuncs.com/js/modules/vue/vue.min.js"></script>
<script src="https://bbsresources.oss-cn-hangzhou.aliyuncs.com/js/modules/layer/layui.js"></script>
<link href="https://bbsresources.oss-cn-hangzhou.aliyuncs.com/js/modules/layer/css/layui.css" rel="stylesheet" />
<script src="https://bbsresources.oss-cn-hangzhou.aliyuncs.com/js/require_config.js"></script>

<link href="https://bbsresources.oss-cn-hangzhou.aliyuncs.com/js/modules/layer/css/select2.min.css" rel="stylesheet" />
<style>
.select2-container--default.select2-container--focus .select2-selection--multiple {
    border-color: #C9C9C9 !important;
}

.select2-container--default .select2-selection--multiple {
    border: 1px solid #e6e6e6 !important;
    line-height: 27px;
}
</style>
<script>
    require_js_file(["table", "form", "jquery", "tableExt", "select2"],
        function (fnr) {
            var table = layui.table;
            var form = layui.form;
            var tableExt = layui.tableExt;
            var $ = layui.$;
            var TransferOptions = [];
            
            window.rootApp = new Vue({
                el: "#root",
                data: {
                    LayoutConfigList: [],
                    CustomerList:[],
                    SubmitCustomForm: {
                        FormName: '',
                        FormTypeID: 0,
                        FormAllot:0,
                        FormType:1,
                        CustomerData: [],
                        FieldData: [],
                    },
                    FormAllotSetting: {
                        tags: { name: "FormAllot" },
                        options: [
                        { key: "0", value: "随机分配 " },
                        { key: "1", value: "循环分配" }
                        ]
                    },
                    TotalFieldData: [],
                    CustomerSetting: {
                        search: true,
                        options: [],
                        fields: { root: 'Data', key: 'ID', value: 'Name' },
                        remote: { url: "/service/crm/Form/GetCustomerlist", options: { method: 'get' } },
                        sel2Opts: {
                            width: "100%",
                            multiple: true
                        }
                    },
                    FormSetting: {
                        tags: { name: "FormType" },
                        options: [
                        { key: "1", value: "客户" },
                        { key: "2", value: "线索" }
                        ]
                    },
                    FormTypeSetting: {
                        search: true,
                        options: TransferOptions,
                        fields: { root: "Data", key: 'ID', value: 'TypeName' },
                        remote: { url: '/service/crm/Form/GetFormTypeGroupList' }
                    },
                    isShowCustomer: true,
                },
                watch: {
                    "SubmitCustomForm.FormType": function (val) {
                        var self = this;
                        self.reload(val);
                    },
                    "CustomerList": function (val) {
                        var self = this;
                        self.SubmitCustomForm.CustomerData = [];
                        self.CustomerList.map(function (val, index) {
                            self.SubmitCustomForm.CustomerData.push({ Customer_ID: val});
                        });
                    },
                },
                ready: function () {
                    var self = this;
                    self.reload(self.SubmitCustomForm.FormType);
                    if (!!fnr.getQueryString('ID')) {
                        self.GetFormDetailInfo();
                        self.isShowCustomer = true;
                    } else {
                        self.isShowCustomer = false;
                    }
                },
                methods: {
                    //修改表单
                    GetFormDetailInfo: function () {
                        var self = this;
                        $.get('/service/crm/Form/GetFormDetailInfo', { ID: fnr.getQueryString('ID') }, function (res) {
                            console.log(res);
                            if (res.SuccessResponse) {
                                if (res.Data) {
                                    self.SubmitCustomForm.FormName = res.Data.FormName;
                                    self.SubmitCustomForm.FormTypeID = res.Data.FormTypeID;
                                    self.SubmitCustomForm.FormAllot = res.Data.FormAllot;
                                    self.SubmitCustomForm.FormType = res.Data.FormType;
                                    if (res.Data.CustomerData) {
                                        res.Data.CustomerData.map(function (ind, val) {
                                            self.CustomerList.push(ind.Customer_ID);
                                        });
                                    }
                                    if (res.Data.FieldData) {
                                        self.TotalFieldData = res.Data.FieldData;
                                        setTimeout(function () {
                                            var checkboxData = $('input:checkbox');
                                            res.Data.FieldData.map(function (ind, val) {
                                                checkboxData.map(function (_ind, _val) {
                                                    if (ind.Field_ID == _val.name) {
                                                        if (!_val.checked) {
                                                            _val.checked = true;
                                                        }
                                                    }
                                                });
                                            });
                                            self.$nextTick(function () {
                                                form.render("checkbox");
                                            });
                                        },500);
                                    }
                                } else {
                                    layer.msg('')
                                }
                            }
                        });
                    },

                    //添加表单
                    reload: function (val) {
                        var self = this;
                        self.LayoutConfigList = [];
                        $.get("/service/public/CustomSettings/GetLayoutConfig",{ BusType: val, Other: 1 },function (resp) {
                                if (resp.SuccessResponse) {
                                    resp.Data.map(function (val, index) {
                                        val.Childs.map(function (_val, _index) {
                                            self.LayoutConfigList.push(_val);
                                        })
                                    });
                                    self.$nextTick(function () {
                                        setTimeout(function () {
                                            var reloadCustomForm = $('input:checkbox');
                                            self.TotalFieldData.map(function (ind, val) {
                                                reloadCustomForm.map(function (_ind, _val) {
                                                    if (ind.Field_ID == _val.name) {
                                                        if (!_val.checked) {
                                                            _val.checked = true;
                                                        }
                                                    }
                                                });
                                            });
                                            form.render("checkbox");
                                        }, 500);
                                    })
                                }
                            },"json");
                    },
                    getCheckedList: function () {
                        var self = this;
                        $('input:checkbox:checked').map(function (index, val) {
                            self.SubmitCustomForm.FieldData.push({ Field_ID: val.name });
                        });
                    },
                    //确认添加
                    addField: function (e) {
                        var self = this;
                        if (!layui.form.checkInput(e)) {
                            return false;
                        }
                        self.getCheckedList();
                        if (!!fnr.getQueryString('ID')) {
                            var modifyData = {};
                            modifyData['FormName'] = self.SubmitCustomForm.FormName;
                            modifyData['FormTypeID'] = self.SubmitCustomForm.FormTypeID;
                            modifyData['FormAllot'] = self.SubmitCustomForm.FormAllot;
                            modifyData['FormType'] = self.SubmitCustomForm.FormType;
                            modifyData['FieldData'] = self.SubmitCustomForm.FieldData;
                            var obj = $.extend(modifyData, { ID: fnr.getQueryString('ID') });
                            $.ajax({
                                url: '/service/crm/Form/UpdateFormSignUp',
                                type: 'post',
                                data: obj,
                                success: function (res) {
                                    if (res.SuccessResponse) {
                                        fnr.callDialog('refresh', { status: res.SuccessResponse, Message: res.Message });
                                        fnr.closeDialog();
                                    } else {
                                        layer.msg(res.Message);
                                    }
                                }
                            });
                        } else {
                            $.ajax({
                                url: '/service/crm/Form/AddFormSignUp',
                                type: 'post',
                                data: self.SubmitCustomForm,
                                dataType: 'json',
                                success: function (res) {
                                    if (res.SuccessResponse) {
                                        fnr.callDialog('refresh', { status: res.SuccessResponse, Message: res.Message });
                                        fnr.closeDialog();
                                    } else {
                                        layer.msg(res.Message);
                                    }
                                }
                            });
                        }
                    },
                }
            });
        });
</script>

