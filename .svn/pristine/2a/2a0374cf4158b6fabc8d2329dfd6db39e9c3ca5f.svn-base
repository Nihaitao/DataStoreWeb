<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
    <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
    <title>所有客户</title>
    <style>
        div.layui-table-cell {
            height: 30px;
        }
    </style>
</head>
<body id="root">
    <div class="mainContainer">
        <blockquote class="layui-elem-quote">
            <div class="layui-form">
                <div class="layui-input-inline">
                    <remote-sel class="" v-bind:setting="searchKeySetting" laytips="跟进阶段" v-bind:value.sync="queryFormData.PhaseType_ID" initial="off"></remote-sel>
                </div> 
                <div class="layui-input-inline">
                    <remote-sel v-bind:setting="statusSetting" laytips="来源" v-bind:value.sync="queryFormData.Source_ID"
                                initial="off"></remote-sel>
                </div>
                <div class="layui-input-inline">
                    <input placeholder="名称/手机号" type="text" name="ModelValue" class="layui-input" v-model="queryFormData.ModelValue">
                </div>
                <button class="layui-btn layui-btn-primary" lay-submit lay-filter="btn" @click="doSearch">查询</button>
            </div>
        </blockquote>

        <div>
            <button class="layui-btn layui-btn-primary layui-btn-small" v-bind:class="{'layui-btn-disabled':releaseClient.length<=0}" v-bind:disabled="releaseClient.length<=0" @click="DistributionClient">转移</button>
            <button class="layui-btn layui-btn-primary layui-btn-small" v-bind:class="{'layui-btn-disabled':releaseClient.length<=0}" v-bind:disabled="releaseClient.length<=0" @click="clientRe">释放客户</button> 
            <!--<button class="layui-btn layui-btn-primary layui-btn-small" @click="transferClient">转移客户</button>-->
            <button class="layui-btn layui-btn-primary layui-btn-small" v-bind:class="{'layui-btn-disabled':deleteCs.length<=0}" v-bind:disabled="deleteCs.length<=0" @click="deleteClients">批量删除</button>
        </div>

        <!--操作模板-->
        <table id="listTable" lay-filter="listTable"></table>
    </div>
</body>
</html>
<link href="https://bbsresources.oss-cn-hangzhou.aliyuncs.com/js/modules/layer/css/layui.css" rel="stylesheet" />
<script src="https://bbsresources.oss-cn-hangzhou.aliyuncs.com/js/modules/vue/vue.min.js"></script>
<script src="https://bbsresources.oss-cn-hangzhou.aliyuncs.com/js/modules/layer/layui.js"></script>
<script src="https://bbsresources.oss-cn-hangzhou.aliyuncs.com/js/require_config.js"></script>

<script>
    require_js_file(['table', 'form', 'jquery', 'tableExt'],
        function (fnr) {
            var table = layui.table;
            var form = layui.form;
            var tableExt = layui.tableExt;
            var $ = layui.$;

            function trim(str) {
                return str.replace(/(^\s*)|(\s*$)/g, "");
            }


            //表格基本配置参数
            var tableColsConfig =
                [
                    { fixed: true, checkbox: true},
                    { fixed: true, field: 'ID', title: 'ID', width: 80, sort: true },
                    {
                        title: '名称', width: 260, sort: true, templet: function () {
                            var array = new Array();
                            if (this.Merge == 2) {
                                array.push("<span  style='display: inline-block; width: 100%;white-space: nowrap; text-overflow: ellipsis;overflow: hidden;'><a href='javascript:;' lay-event='detail1' title=" + (this.Name) + ">" + (this.Name) + "</a>&emsp;<a lay-event='Merge' style='color:red;'>(可合并)</a></span>");
                            } else {
                                array.push("<a href='javascript:;' lay-event='detail1' style='display: inline-block; width: 100%;white-space: nowrap; text-overflow: ellipsis;overflow: hidden;' title=" + (this.Name) + ">" + (this.Name) + "</a>");
                            }
                            
                            return "<div>" + array.join("") + "</div>";
                        }
                    },
                    {
                        field: 'ImportanceName', title: '重要程度', width: 150, sort: true
                    },
                    { field: 'SourceName', title: '来源', width: 120, sort: true },
                    { field: 'PhaseTypeName', title: '跟进阶段', width: 120, sort: true },
                    { field: 'SysGroupPath', title: '全局分组', width: 120, sort: true },
                    { field: 'AccountName', title: '所有者', width: 120, sort: true },
                    {
                        title: '时间', width: 160, sort: true, templet: function () {
                            var array = new Array();
                            array.push("<span>" + fnr.format(this.AddTime, "yyyy-MM-dd HH:mm") + "</span>");
                            return "<div>" + array.join("") + "</div>";
                        }
                    },
                    { field: 'Content', title: '最新跟进记录', width: 300 },
                    {
                        fixed: 'right',
                        title: '操作',
                        width: 200,
                        toolbar: function () {
                            var array = new Array();
                            if (this.IsAssign != 1) {
                                array.push("<button href='javascript:;' class='layui-btn layui-btn-small layui-btn-normal' lay-event='detail2'>添加跟进</button><button type='button' class='layui-btn layui-btn-small' lay-event='modifyClient'>修改</button><button type='button' class='layui-btn layui-btn-danger layui-btn-small' lay-event='deleteClient'>删除</button>");
                                return "<div>" + array.join("") + "</div>";
                            } else {
                                array.push("");
                                return "<div>" + array.join("") + "</div>";
                            }
                        }
                    }
                ];

            //搜索条件
            var rootApp = new Vue({
                el: '#root',
                data: {
                    //搜索选择框 --- 跟进阶段
                    searchKeySetting: {
                        search: true,
                        options: [],
                        fields: { root: 'Data', key: 'ID', value: 'Description' },
                        remote: { url: '/service/public/HDictionary/GetHDictionaryList', data: { Valid: 1, ColumnName: 'PhaseType_ID' } }
                    },
                    //搜索选择框 --- 来源
                    statusSetting: {
                        search: true,
                        options: [],
                        fields: { root: 'Data', key: 'ID', value: 'Description' },
                        remote: { url: '/service/public/HDictionary/GetHDictionaryList', data: { Valid: 1, ColumnName: 'Source_ID' } }
                    },
                    //搜索选择的参数列表
                    queryFormData: {
                        PhaseType_ID: 0,
                        Source_ID: 0,
                        ModelValue: ''
                    },
                    //释放客户的参数列表
                    releaseClient: [],
                    //批量删除参数列表
                    deleteCs: []
                },
                methods: {
                    //按条件查询
                    doSearch: function () {
                        var self = this;
                        self.queryFormData.ModelValue = trim(self.queryFormData.ModelValue);
                        listTable.reload({
                            where: this.queryFormData
                        })
                    },

                    //添加联系记录
                    followStatus: function (data) {
                        fnr.openDialog({
                            title: '添加联系记录',
                            area: ['710px', '500px'],
                            content: ['/Html/Client/Contact/Add.html?ID=' + data.ID + "&PhaseType_ID=" + data.PhaseType_ID,'no'],
                            btn: ['确认添加'],
                            events: {
                                refresh: function (data) {
                                    if (data.status) {
                                        layer.msg(data.msg);
                                        listTable.reload();
                                    } else {
                                        layer.msg(data.msg);
                                    }
                                }
                            }
                        });
                    },

                    //客户信息
                    clientMsg: function (data) {
                        fnr.openDialog({
                            title: '客户信息',
                            area: ['1000px', (parent.document.documentElement || parent.document.body).clientHeight - 140 + "px"],
                            content: ['Info.html?ID=' + data.ID + "&PhaseType_ID=" + data.PhaseType_ID],
                            events: {
                                add: function () {
                                    listTable.refresh();
                                }
                            }
                        });
                    },

                    //修改客户信息
                    modifyC: function (data) {
                        fnr.openDialog({
                            title: '修改客户信息',
                            area: ['1000px', (parent.document.documentElement || parent.document.body).clientHeight - 140 + "px"],
                            content: ['Modify.html?ID=' + data.ID],
                            btn: ['确认修改'],
                            events: {
                                refresh: function (data) {
                                    if (data.status) {
                                        layer.msg(data.msg);
                                        listTable.reload();
                                    } else {
                                        layer.msg(data.msg);
                                    }
                                }
                            }
                        });
                    },

                    //分配客户
                    DistributionClient: function () {
                        var self = this;
                        fnr.openDialog({
                            title: '分配客户',
                            area: ['400px', '400px'],
                            content: ['Distribution.html?Other=' + self.releaseClient.join(',')],
                            btn: ['确认分配'],
                            events: {
                                refresh: function (data) {
                                    if (data.status) {
                                        layer.msg(data.msg);
                                        listTable.refresh();
                                    } else {
                                        layer.msg(data.msg);
                                    }
                                }
                            }
                        });
                    },

                    //释放客户
                    clientRe: function () {
                        var releaseC = this.releaseClient.join(',')
                        layer.confirm('确定释放吗？', function () {
                            $.ajax({
                                url: "/service/crm/Client/ReleaseClient",
                                data: { Other: releaseC },
                                type: 'POST',
                                dataType: 'json',
                                success: function (data) {
                                    if (data.SuccessResponse) {
                                        layer.msg(data.Message);
                                        listTable.reload();
                                    } else {
                                        layer.msg(data.Message);
                                    }
                                  
                                }
                            });
                        })
                    },
                    MergeStatus: function (data) {
                        fnr.openDialog({
                            title: '合并客户',
                            area: ['1000px', (parent.document.documentElement || parent.document.body).clientHeight - 140 + "px"],
                            content: ['/Html/Client/Client/MergeClient.html?Phone=' + data.Phone],
                        })
                    },
                    //批量删除
                    deleteClients: function () {
                        var deleteC = rootApp.deleteCs.join(',');
                        layer.confirm('确定删除吗，删除后将不可恢复', function () {
                            $.ajax({
                                url: '/service/crm/Client/DeleteClient',
                                type: 'POST',
                                data: { Other: deleteC },
                                dataType: 'json',
                                success: function (data) {
                                    if (data.SuccessResponse) {
                                        layer.msg(data.Message);
                                        listTable.reload();
                                    } else {
                                        layer.msg(data.Message);
                                    }                                   
                                }
                            });
                        })
                    }
                }
            });

            //绑定列表
            var listTable = table.render({
                elem: '#listTable',
                even: true, //开启隔行背景
                page: true, //页分
                height: 'full-140',
                id: 'listTable',
                cols: [tableColsConfig],
                url: "/service/crm/Client/GetAllClient",
            });

            //获取选中的行相关数据
            table.on('checkbox(listTable)', function (obj) {
                var checkStatus = table.checkStatus('listTable');
                rootApp.releaseClient = [];
                rootApp.deleteCs = [];

                $.each(checkStatus.data, function (k, v) {
                    if (v.IsAssign != 1) {
                        rootApp.releaseClient.push(v.ID);
                        rootApp.deleteCs.push(v.ID);
                    }
                });
            });
            
            //监听工具栏事件
            tableExt.addEvent("tool(listTable)",
                {
                    "detail1": function (data, obj) {
                        rootApp.clientMsg(data);
                    },
                    "detail2": function (data, obj, e) {
                        rootApp.followStatus(data);
                    },
                    "Merge": function (data, obj) {
                        rootApp.MergeStatus(data);
                    },
                    //删除一行
                    "deleteClient": function (data, obj) {
                        layer.confirm('确定删除吗，删除后将不可恢复', function (index) {
                            $.ajax({
                                url: '/service/crm/Client/DeleteClient',
                                type: 'POST',
                                data: { Other: data.ID },
                                dataType: 'json',
                                success: function (data) {
                                    if (data.SuccessResponse) {
                                        obj.del();
                                        layer.close(index);
                                        layer.msg(data.Message);
                                    }
                                    else {
                                        layer.msg(data.Message);
                                    }
                                }
                            });
                        })
                    },
                    //修改客户信息
                    "modifyClient": function (data, obj) {
                        rootApp.modifyC(data);
                    }
                });
        });
</script>