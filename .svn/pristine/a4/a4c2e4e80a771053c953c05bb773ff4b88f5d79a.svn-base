<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
    <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
    <title>订单开课列表</title>
    <style>
       .layui-table{
           white-space:nowrap;
       }
       .cols{
           padding:0!important;
       }
        .cols>div{
            height:30px;
            line-height:30px;
            text-align:center;
            padding:5px;
            border-bottom:1px solid #ddd
        }
        .cols>div:last-child{
            border:none;
        }
        [v-cloak]{
            display:none;
        }
        .tableContent{
            width:100%;
            overflow-x:auto;
        }
    </style>
</head>
<body id="root">
    <div class="mainContainer">
        <!--操作模板-->
        <div>
            <button class="layui-btn layui-btn-small layui-btn-primary" @click="OpenCourse">继续开课</button>
        </div>
        <table id="listTable" lay-filter="listTable"></table>
        <div class="tableContent">
            <table class="layui-table" v-cloak>

                <thead>
                    <tr>
                        <th>订单编号</th>
                        <th>支付总额</th>
                        <th>支付状态</th>
                        <th>支付方式</th>
                        <th>支付时间</th>
                        <th>购买数量</th>
                        <th>网课名称</th>
                        <th>网课金额</th>
                        <th>网课优惠金额</th>
                        <th>总课时</th>
                        <th>授课方式</th>
                        <th>操作</th>
                    </tr>
                </thead>
                <tbdoy>
                    <tr v-if="!item.OrderState" v-for="item in data">
                        <td>{{item.OrderNo}}</td>
                        <td>￥{{item.Price}}</td>
                        <td>{{item.PayStatus==1?"支付成功":"支付失败"}}</td>
                        <td>{{item.PayType==1?"线上支付":"线下支付"}}</td>
                        <td>{{item.PayTime | format "yyyy-MM-dd HH:mm"}}</td>
                        <td>{{item.OrderDetailList.length}}</td>
                        <td class="cols">
                            <div v-if="!itemx.IsDelete" v-for="itemx in item.OrderDetailList">
                                {{itemx.Name}}
                            </div>
                        </td>
                        <td class="cols">
                            <div v-if="!itemx.IsDelete" v-for="itemx in item.OrderDetailList">
                                ￥{{itemx.Price}}
                            </div>
                        </td>
                        <td class="cols">
                            <div v-if="!itemx.IsDelete" v-for="itemx in item.OrderDetailList">
                                ￥{{itemx.PreferentialPrice}}
                            </div>
                        </td>
                        <td class="cols">
                            <div v-if="!itemx.IsDelete" v-for="itemx in item.OrderDetailList">
                                {{itemx.TotalHours}}
                            </div>
                        </td>
                        <td class="cols">
                            <div v-if="!itemx.IsDelete" v-for="itemx in item.OrderDetailList">
                                {{itemx.TeachingMethod==1?"录播":itemx.TeachingMethod==2?"直播":"面授"}}
                            </div>
                        </td>
                        <td class="cols">
                            <div v-if="!itemx.IsDelete" v-for="itemx in item.OrderDetailList">
                                <button v-bind:data-value="itemx.ID" @click="deleteCourse(itemx)" class="layui-btn layui-btn-mini">删除</button>
                            </div>
                        </td>
                    </tr>
                </tbdoy>
            </table>
        </div>
       
     </div>
</body>
</html>
<link href="//bbsresources.oss-cn-hangzhou.aliyuncs.com/js/modules/layer/css/layui.css" rel="stylesheet" />
<script src="//bbsresources.oss-cn-hangzhou.aliyuncs.com/js/modules/vue/vue.min.js"></script>
<script src="//bbsresources.oss-cn-hangzhou.aliyuncs.com/js/modules/layer/layui.js"></script>
<script src="//bbsresources.oss-cn-hangzhou.aliyuncs.com/js/require_config.js"></script>
<script>
    require_js_file(['table', 'form', 'jquery', 'tableExt', 'laydate'],
    function (fnr) {
        var table = layui.table;
        var form = layui.form;
        var tableExt = layui.tableExt;
        var $ = layui.$;
        var laydate = layui.laydate;
        var rootApp = new Vue({
            el: '#root',
            data: {
                StuId: "",
                data:'',
            },
            ready: function () {
                this.getTabelData();
            },
            mounted: {
               
               
            },

            methods: {
                deleteCourse: function (data) {
                    _this = this;
                    layer.confirm("确认要删除么", function (index) {
                        $.post('/service/datastore/Order/DeleteOrderCourse', { orderDetailId: data.ID }, function (res) {
                            if (res.SuccessResponse) {
                                layer.close(index);
                                layer.msg('删除成功')
                                _this.getTabelData();
                                
                            } else {
                                layer.close(index);
                                layer.msg("删除失败")
                            }
                        })
                    })
                },
                getTabelData: function () {
                    _this = this;
                    this.StuId = fnr.getQueryString("StuID");
                    $.get("/service/datastore/Order/GetOrderDetailListByStuId", { StuId: this.StuId }, function (res) {
                        if (res.SuccessResponse) {
                            _this.data = res.Data;
                        } else {
                            layer.msg("网络请求失败")
                        }
                    })
                },
                OpenCourse: function () {
                    _this = this;
                    fnr.openDialog({
                        title: '选择课程',
                        area: ['1000px', (parent.document.documentElement || parent.document.body).clientHeight - 140 + "px"],
                        content: ['./Course.html?StuID=' + _this.StuId], //这里content是一个URL，如果你不想让iframe出现滚动条，你还可以content: ['http://sentsin.com', 'no']
                        btn: ['支付'],
                       
                        events: {
                            refresh: function (data) {
                                if (data) {
                                    _this.getTabelData();
                                    layer.msg("开课成功")
                                } else {
                                    layer.msg("开课失败")
                                }

                            }
                        },
                    });
                }
            },
            filters: {
                format: function (time, format) {
                    if (time == undefined) {
                        return '';
                    }
                    var finalTime;
                    if (typeof (time) == 'string') {
                        time = time.replace("T", " ");
                        time = time.replace("Z", " ");
                        var timeIOS = time.replace(/\-/g, "/");
                        finalTime = new Date(timeIOS);
                    } else {
                        finalTime = time;
                    }

                    var t = new Date(finalTime);
                    var tf = function (i) { return (i < 10 ? '0' : '') + i };
                    return format.replace(/yyyy|MM|dd|HH|mm|ss/g,
                        function (a) {
                            switch (a) {
                                case 'yyyy':
                                    return tf(t.getFullYear());
                                    break;
                                case 'MM':
                                    return tf(t.getMonth() + 1);
                                    break;
                                case 'mm':
                                    return tf(t.getMinutes());
                                    break;
                                case 'dd':
                                    return tf(t.getDate());
                                    break;
                                case 'HH':
                                    return tf(t.getHours());
                                    break;
                                case 'ss':
                                    return tf(t.getSeconds());
                                    break;
                            }
                        });
                }
            },
        });
        //绑定列表
        //var listTable = table.render({
        //    elem: '#listTable',
        //    even: true, //开启隔行背景
        //    page: false, //页分
        //    id: 'listTable',
        //    cols: [
        //        [
        //            { field: 'OrderNo', title: '订单编号', width: 180 },
        //            { field: 'PayPrice', title: '支付总额', width: 100 },
        //            {
        //                field: 'PayStatus', title: '支付状态', sort: true, width: 120, templet: function () {
        //                    return "<div>" + (this.PayStatus == 1 ? "支付成功" : "未支付") + "</div>";
        //                }
        //            },
        //            {
        //                field: 'PayType', title: '支付方式', sort: true, width: 120, templet: function () {
        //                    return "<div>" + (this.PayType == 1 ? "线上支付" : "线下支付") + "</div>";
        //                }
        //            },
        //            {
        //                field: 'PayTime', title: '支付时间', sort: true, width: 180, templet: function () {
        //                    return fnr.format(this.PayTime, "yyyy-MM-dd HH:mm:ss")
        //                }
        //            },
        //            { field: 'PayCount', title: '购买数量', width: 100 },
        //             {
        //                 rowspan: 2, title: '授课方式', sort: true, width: 120, field: 'PayCount'
        //             },
        //            {
        //                fixed: 'right',
        //                title: '操作',
        //                width: 120,
        //                toolbar: function () {
        //                    var array = new Array();
        //                    array.push("<button class=\"layui-btn layui-btn-small\" lay-event='lookstudent'>查看</button>");
        //                    return "<div>" + array.join("") + "</div>";
        //                }
        //            }
        //        ]
        //    ],
        //    url: '/service/Order/GetOrderDetailListByStuId?StuID=' + fnr.getQueryString("StuID")
        //});

        //监听工具栏事件
        //tableExt.addEvent("tool(listTable)",
        //    {
        //        //查看明细
        //        "lookstudent": function (data) {
        //            fnr.openDialog({
        //                title: '查看订单明细',
        //                area: ['1000px', "600px"],
        //                content: ['/Html/Educational/Order/Detail.html?orderId=' + data.ID], //这里content是一个URL，如果你不想让iframe出现滚动条，你还可以content: ['http://sentsin.com', 'no']
                       
        //            });
        //        }
        //    });
    });

</script>
