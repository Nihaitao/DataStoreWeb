<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
    <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
    <title>我的客户</title>
    <style>
        .addTable .price-input { display: inline-block; width: 70px; }
        input[type=number] { -moz-appearance: textfield; }
        input[type=number]::-webkit-inner-spin-button,
        input[type=number]::-webkit-outer-spin-button { -webkit-appearance: none; margin: 0; }
    </style>
</head>
<body id="root">
    <div class="mainContainer">
        <table id="listTable" lay-filter="listTable"></table>
        <table class="layui-table addTable">
            <thead>
                <tr>
                    <th>序号</th>
                    <th>&nbsp;</th>
                    <th>产品名称</th>
                    <th>产品标号</th>
                    <th>标准单价</th>
                    <th>销售单位</th>
                    <th>产品分类</th>
                    <th>售价</th>
                    <th>数量</th>
                    <th>总价</th>
                    <th>备注</th>
                </tr>
            </thead>
            <tbody>
                <tr v-for="(index,item) in tableData">
                    <td>{{index+1}}</td>
                    <td @click="del(index)" style="cursor:pointer"><i class="layui-icon">&#xe640;</i></td>
                    <td>{{item.Name}}</td>
                    <td>{{item.ProductNumber}}</td>
                    <td>{{item.NormalPrice}}</td>
                    <td>{{item.SaleUnit}}</td>
                    <td>{{item.ProductTypeName}}</td>
                    <td>¥ <input type="number" class="layui-input price-input" v-model="item.standard_unit_price" number @keydown="DownData('dot',$event)" @blur="initData(item.standard_unit_price)" /></td>
                    <td><input type="number" class="layui-input price-input" v-model="item.unit_number" number v-number @keydown="DownData(null,$event)" /></td>
                    <td>¥ <input type="number" class="layui-input price-input" v-model="item.countPrice" disabled /></td>
                    <td><input type="text" class="layui-input remark-input" v-model="item.Remark"></td>
                </tr>
                <tr v-if="tableData.length>0">
                    <td>{{tableData.length+1}}</td>
                    <td @click="delAll(index)" style="cursor:pointer"><i class="layui-icon">&#xe640;</i></td>
                    <td>&nbsp;</td>
                    <td>&nbsp;</td>
                    <td>&nbsp;</td>
                    <td>&nbsp;</td>
                    <td>&nbsp;</td>
                    <td>&nbsp;</td>
                    <td>{{allCount}}</td>
                    <td>¥ {{allPrice}}</td>
                    <td>&nbsp;</td>
                </tr>
            </tbody>
        </table>
        <button class="layui-hide" @click="tijiao" lay-submit></button>
    </div>
</body>
</html>
<link href="https://bbsresources.oss-cn-hangzhou.aliyuncs.com/js/modules/layer/css/layui.css" rel="stylesheet" />
<script src="https://bbsresources.oss-cn-hangzhou.aliyuncs.com/js/modules/vue/vue.min.js"></script>
<script src="https://bbsresources.oss-cn-hangzhou.aliyuncs.com/js/modules/layer/layui.js"></script>
<script src="https://bbsresources.oss-cn-hangzhou.aliyuncs.com/js/require_config.js"></script>

<script>
    require_js_file(['table', 'form', 'jquery', 'tableExt', 'laydate', 'layer'],
        function (fnr) {
            var table = layui.table;
            var form = layui.form;
            var tableExt = layui.tableExt;
            var $ = layui.$;
            var layer = layui.layer;
            function trim(str) {
                return str.replace(/(^\s*)|(\s*$)/g, "");
            }
            //表格基本配置参数
            var tableColsConfig =
                [

                    { fixed: true, checkbox: true },
                        {
                            title: '产品名称', width: 150, sort: true, templet: function () {
                                var array = new Array();
                                array.push("<a href='javascript:;' lay-event='detail1' style='color:#1e9fff;display: inline-block; width: 100%;white-space: nowrap; text-overflow: ellipsis;overflow: hidden;' title=" + (this.Name) + ">" + (this.Name) + "</a>");
                                return "<div>" + array.join("") + "</div>";
                            }
                        },
                        { field: 'ProductNumber', title: '产品标号', width: 200, sort: true },
                        { field: 'NormalPrice', title: '标准单价', width: 200, sort: true },
                        { field: 'SaleUnit', title: '销售单位', width: 200, sort: true },
                        { field: 'ProductTypeName', title: '产品分类', width: 300, sort: true },

                ];


            //搜索条件
            vm = new Vue({
                el: '#root',
                data: {
                    //搜索选择的参数列表
                    queryFormData: {

                    },
                    tableData: '',
                    releaseClient: [],
                    allCount: '',
                    allPrice: ''

                },
                ready: function () {
                    var Other = fnr.getQueryString('Other');
                    this.GetProductModelList(Other)
                },
                watch: {
                    tableData: {
                        handler: function (val, oldval) {
                            this.tableData.map(function (item) {
                                item.countPrice = item.standard_unit_price * item.unit_number;
                            })
                            this.allCount = this.tableData.reduce(function (previousValue, currentValue, currentIndex, arr) { return previousValue + Number(currentValue.unit_number) }, 0);
                            this.allPrice = this.tableData.reduce(function (previousValue, currentValue, currentIndex, arr) { return previousValue + Number(currentValue.countPrice) }, 0);
                        },
                        deep: true
                    }
                },
                methods: {
                    initData: function (val) {
                        if (!/(^[1-9](\d+)?(\.\d{1,2})?$)|(^(0){1}$)|(^\d\.\d{1,2}?$)/.test(val)) {
                            var reg = new RegExp(val, 'g');
                            val = val.replace(reg, 100);
                        }
                    },
                    DownData: function (dot, $event) {
                        if (dot) {
                            this.OnlyNumberDot($event)
                        } else {
                            this.OnlyNumber($event)
                        }
                    },
                    //屏蔽除数字外的按键
                    OnlyNumber: function ($event) {
                        var k = $event.keyCode;
                        if ((k <= 57 && k >= 48) || (k <= 105 && k >= 96) || k == 8 || k == 46 || k == 37 || k == 39) {
                            return true
                        } else {
                            $event.preventDefault()
                            return false;
                        }
                    },
                    //屏蔽除数字和小数点外的按键
                    OnlyNumberDot: function ($event) {
                        var k = $event.keyCode;
                        if ((k <= 57 && k >= 48) || (k <= 105 && k >= 96) || k == 8 || k == 46 || k == 37 || k == 39 || k == 110) {
                            return true
                        } else {
                            $event.preventDefault()
                            return false;
                        }
                    },
                    handlerInput: function (e) {
                        e.target.value = e.target.value.replace(/[^\d]/g, '');
                    },
                    GetProductModelList: function (Other) {
                        var that = this;
                        $.get('/service/crm/Product/GetProductModelList',
                        { 'Other': Other }, function (res) {
                            if (res.SuccessResponse) {
                                var item = res.Data;
                                item.map(function (item) {
                                    item.standard_unit_price = item.NormalPrice;
                                    item.unit_number = 1;
                                    item.countPrice = item.standard_unit_price * item.unit_number;
                                    item.Remark = '';
                                })
                                that.tableData = res.Data;
                                that.allCount = res.Data.reduce(function (previousValue, currentValue, currentIndex, arr) { return previousValue + currentValue.unit_number }, 0);
                                that.allPrice = res.Data.reduce(function (previousValue, currentValue, currentIndex, arr) { return previousValue + currentValue.countPrice }, 0);
                            }
                        })
                    },
                    del: function (index) {
                        this.tableData.splice(index, 1)
                    },
                    delAll: function (index) {
                        this.tableData.splice(0, this.tableData.length)
                    },
                    tijiao: function () {
                        //模拟异步提交
                        $.post('/service/crm/Product/GetProductModelList', {
                            data: this.tableData
                        }, function (res) {
                            if (res.SuccessResponse) {
                                fnr.callDialog('refresh')
                                fnr.closeDialog()
                            }else{
                                layer.msg('提交失败，请重试')
                            }
                        })
                    },
                }
            });

            //绑定列表
            //var listTable = table.render({
            //    elem: '#listTable',
            //    even: true, //开启隔行背景
            //    page: false, //页分,
            //    height: 'full-140',
            //    id: 'listTable',
            //    cols: [tableColsConfig],
            //    url: "/service/crm/Product/GetProductModelList?Other=" + fnr.getQueryString('Other')
            //});
            //获取选中的行相关数据
            table.on('checkbox(listTable)', function (obj) {
                var checkStatus = table.checkStatus('listTable');
                rootApp.releaseClient = [];
                $.each(checkStatus.data, function (k, v) {
                    if (v.IsAssign != 1) {
                        rootApp.releaseClient.push(v.ID);
                    }
                });
            });



            //监听工具栏事件
            tableExt.addEvent("tool(listTable)",
                {

                });
        });
</script>