<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Aliyun.OSS.Fakes</name>
    </assembly>
    <members>
        <member name="T:Aliyun.OSS.Common.Authentication.Fakes.ShimDefaultCredentials">
            <summary>Aliyun.OSS.Common.Authentication.DefaultCredentials 的填充码类型</summary>
        </member>
        <member name="M:Aliyun.OSS.Common.Authentication.Fakes.ShimDefaultCredentials.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Aliyun.OSS.Common.Authentication.Fakes.ShimDefaultCredentials.#ctor(Aliyun.OSS.Common.Authentication.DefaultCredentials)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Aliyun.OSS.Common.Authentication.Fakes.ShimDefaultCredentials.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Aliyun.OSS.Common.Authentication.Fakes.ShimDefaultCredentials.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:Aliyun.OSS.Common.Authentication.Fakes.ShimDefaultCredentials.Bind(Aliyun.OSS.Common.Authentication.ICredentials)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:Aliyun.OSS.Common.Authentication.Fakes.ShimDefaultCredentials.AccessKeyIdGet">
            <summary>设置 DefaultCredentials.get_AccessKeyId() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Common.Authentication.Fakes.ShimDefaultCredentials.AccessKeyIdSetString">
            <summary>设置 DefaultCredentials.set_AccessKeyId(String value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Common.Authentication.Fakes.ShimDefaultCredentials.AccessKeySecretGet">
            <summary>设置 DefaultCredentials.get_AccessKeySecret() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Common.Authentication.Fakes.ShimDefaultCredentials.AccessKeySecretSetString">
            <summary>设置 DefaultCredentials.set_AccessKeySecret(String value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Common.Authentication.Fakes.ShimDefaultCredentials.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Aliyun.OSS.Common.Authentication.Fakes.ShimDefaultCredentials.ConstructorStringStringString">
            <summary>设置 DefaultCredentials.DefaultCredentials(String accessKeyId, String accessKeySecret, String securityToken) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Common.Authentication.Fakes.ShimDefaultCredentials.SecurityTokenGet">
            <summary>设置 DefaultCredentials.get_SecurityToken() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Common.Authentication.Fakes.ShimDefaultCredentials.SecurityTokenSetString">
            <summary>设置 DefaultCredentials.set_SecurityToken(String value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Common.Authentication.Fakes.ShimDefaultCredentials.UseTokenGet">
            <summary>设置 DefaultCredentials.get_UseToken() 的 填充码</summary>
        </member>
        <member name="T:Aliyun.OSS.Common.Authentication.Fakes.ShimDefaultCredentials.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Common.Authentication.Fakes.ShimDefaultCredentials.AllInstances.AccessKeyIdGet">
            <summary>设置 DefaultCredentials.get_AccessKeyId() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Common.Authentication.Fakes.ShimDefaultCredentials.AllInstances.AccessKeyIdSetString">
            <summary>设置 DefaultCredentials.set_AccessKeyId(String value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Common.Authentication.Fakes.ShimDefaultCredentials.AllInstances.AccessKeySecretGet">
            <summary>设置 DefaultCredentials.get_AccessKeySecret() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Common.Authentication.Fakes.ShimDefaultCredentials.AllInstances.AccessKeySecretSetString">
            <summary>设置 DefaultCredentials.set_AccessKeySecret(String value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Common.Authentication.Fakes.ShimDefaultCredentials.AllInstances.SecurityTokenGet">
            <summary>设置 DefaultCredentials.get_SecurityToken() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Common.Authentication.Fakes.ShimDefaultCredentials.AllInstances.SecurityTokenSetString">
            <summary>设置 DefaultCredentials.set_SecurityToken(String value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Common.Authentication.Fakes.ShimDefaultCredentials.AllInstances.UseTokenGet">
            <summary>设置 DefaultCredentials.get_UseToken() 的 填充码</summary>
        </member>
        <member name="T:Aliyun.OSS.Common.Authentication.Fakes.ShimDefaultCredentialsProvider">
            <summary>Aliyun.OSS.Common.Authentication.DefaultCredentialsProvider 的填充码类型</summary>
        </member>
        <member name="M:Aliyun.OSS.Common.Authentication.Fakes.ShimDefaultCredentialsProvider.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Aliyun.OSS.Common.Authentication.Fakes.ShimDefaultCredentialsProvider.#ctor(Aliyun.OSS.Common.Authentication.DefaultCredentialsProvider)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Aliyun.OSS.Common.Authentication.Fakes.ShimDefaultCredentialsProvider.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Aliyun.OSS.Common.Authentication.Fakes.ShimDefaultCredentialsProvider.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:Aliyun.OSS.Common.Authentication.Fakes.ShimDefaultCredentialsProvider.Bind(Aliyun.OSS.Common.Authentication.ICredentialsProvider)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:Aliyun.OSS.Common.Authentication.Fakes.ShimDefaultCredentialsProvider.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Aliyun.OSS.Common.Authentication.Fakes.ShimDefaultCredentialsProvider.ConstructorICredentials">
            <summary>设置 DefaultCredentialsProvider.DefaultCredentialsProvider(ICredentials creds) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Common.Authentication.Fakes.ShimDefaultCredentialsProvider.GetCredentials">
            <summary>设置 DefaultCredentialsProvider.GetCredentials() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Common.Authentication.Fakes.ShimDefaultCredentialsProvider.SetCredentialsICredentials">
            <summary>设置 DefaultCredentialsProvider.SetCredentials(ICredentials creds) 的 填充码</summary>
        </member>
        <member name="T:Aliyun.OSS.Common.Authentication.Fakes.ShimDefaultCredentialsProvider.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Common.Authentication.Fakes.ShimDefaultCredentialsProvider.AllInstances.GetCredentials">
            <summary>设置 DefaultCredentialsProvider.GetCredentials() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Common.Authentication.Fakes.ShimDefaultCredentialsProvider.AllInstances.SetCredentialsICredentials">
            <summary>设置 DefaultCredentialsProvider.SetCredentials(ICredentials creds) 的 填充码</summary>
        </member>
        <member name="T:Aliyun.OSS.Common.Authentication.Fakes.StubDefaultCredentials">
            <summary>Aliyun.OSS.Common.Authentication.DefaultCredentials 的存根类型</summary>
        </member>
        <member name="M:Aliyun.OSS.Common.Authentication.Fakes.StubDefaultCredentials.#ctor(System.String,System.String,System.String)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Aliyun.OSS.Common.Authentication.Fakes.StubDefaultCredentials.InitializeStub">
            <summary>初始化 type StubDefaultCredentials 的新实例</summary>
        </member>
        <member name="P:Aliyun.OSS.Common.Authentication.Fakes.StubDefaultCredentials.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Aliyun.OSS.Common.Authentication.Fakes.StubDefaultCredentials.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Aliyun.OSS.Common.Authentication.Fakes.StubDefaultCredentials.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Aliyun.OSS.Common.Authentication.Fakes.StubDefaultCredentialsProvider">
            <summary>Aliyun.OSS.Common.Authentication.DefaultCredentialsProvider 的存根类型</summary>
        </member>
        <member name="M:Aliyun.OSS.Common.Authentication.Fakes.StubDefaultCredentialsProvider.#ctor(Aliyun.OSS.Common.Authentication.ICredentials)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Aliyun.OSS.Common.Authentication.Fakes.StubDefaultCredentialsProvider.InitializeStub">
            <summary>初始化 type StubDefaultCredentialsProvider 的新实例</summary>
        </member>
        <member name="P:Aliyun.OSS.Common.Authentication.Fakes.StubDefaultCredentialsProvider.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Aliyun.OSS.Common.Authentication.Fakes.StubDefaultCredentialsProvider.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Aliyun.OSS.Common.Authentication.Fakes.StubDefaultCredentialsProvider.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Aliyun.OSS.Common.Authentication.Fakes.StubICredentials">
            <summary>Aliyun.OSS.Common.Authentication.ICredentials 的存根类型</summary>
        </member>
        <member name="M:Aliyun.OSS.Common.Authentication.Fakes.StubICredentials.#ctor">
            <summary>初始化 type StubICredentials 的新实例</summary>
        </member>
        <member name="F:Aliyun.OSS.Common.Authentication.Fakes.StubICredentials.AccessKeyIdGet">
            <summary>设置 ICredentials.get_AccessKeyId() 的 stub</summary>
        </member>
        <member name="F:Aliyun.OSS.Common.Authentication.Fakes.StubICredentials.AccessKeySecretGet">
            <summary>设置 ICredentials.get_AccessKeySecret() 的 stub</summary>
        </member>
        <member name="F:Aliyun.OSS.Common.Authentication.Fakes.StubICredentials.SecurityTokenGet">
            <summary>设置 ICredentials.get_SecurityToken() 的 stub</summary>
        </member>
        <member name="F:Aliyun.OSS.Common.Authentication.Fakes.StubICredentials.UseTokenGet">
            <summary>设置 ICredentials.get_UseToken() 的 stub</summary>
        </member>
        <member name="P:Aliyun.OSS.Common.Authentication.Fakes.StubICredentials.aoss::Aliyun#OSS#Common#Authentication#ICredentials#AccessKeyId">
            <summary>设置 ICredentials.get_AccessKeyId() 的 stub</summary>
        </member>
        <member name="P:Aliyun.OSS.Common.Authentication.Fakes.StubICredentials.aoss::Aliyun#OSS#Common#Authentication#ICredentials#AccessKeySecret">
            <summary>设置 ICredentials.get_AccessKeySecret() 的 stub</summary>
        </member>
        <member name="P:Aliyun.OSS.Common.Authentication.Fakes.StubICredentials.aoss::Aliyun#OSS#Common#Authentication#ICredentials#SecurityToken">
            <summary>设置 ICredentials.get_SecurityToken() 的 stub</summary>
        </member>
        <member name="P:Aliyun.OSS.Common.Authentication.Fakes.StubICredentials.aoss::Aliyun#OSS#Common#Authentication#ICredentials#UseToken">
            <summary>设置 ICredentials.get_UseToken() 的 stub</summary>
        </member>
        <member name="T:Aliyun.OSS.Common.Authentication.Fakes.StubICredentialsProvider">
            <summary>Aliyun.OSS.Common.Authentication.ICredentialsProvider 的存根类型</summary>
        </member>
        <member name="M:Aliyun.OSS.Common.Authentication.Fakes.StubICredentialsProvider.#ctor">
            <summary>初始化 type StubICredentialsProvider 的新实例</summary>
        </member>
        <member name="M:Aliyun.OSS.Common.Authentication.Fakes.StubICredentialsProvider.aoss::Aliyun#OSS#Common#Authentication#ICredentialsProvider#GetCredentials">
            <summary>设置 ICredentialsProvider.GetCredentials() 的 存根</summary>
        </member>
        <member name="M:Aliyun.OSS.Common.Authentication.Fakes.StubICredentialsProvider.aoss::Aliyun#OSS#Common#Authentication#ICredentialsProvider#SetCredentials(Aliyun.OSS.Common.Authentication.ICredentials)">
            <summary>设置 ICredentialsProvider.SetCredentials(ICredentials creds) 的 存根</summary>
        </member>
        <member name="F:Aliyun.OSS.Common.Authentication.Fakes.StubICredentialsProvider.GetCredentials">
            <summary>设置 ICredentialsProvider.GetCredentials() 的 stub</summary>
        </member>
        <member name="F:Aliyun.OSS.Common.Authentication.Fakes.StubICredentialsProvider.SetCredentialsICredentials">
            <summary>设置 ICredentialsProvider.SetCredentials(ICredentials creds) 的 stub</summary>
        </member>
        <member name="T:Aliyun.OSS.Common.Fakes.ShimClientConfiguration">
            <summary>Aliyun.OSS.Common.ClientConfiguration 的填充码类型</summary>
        </member>
        <member name="M:Aliyun.OSS.Common.Fakes.ShimClientConfiguration.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Aliyun.OSS.Common.Fakes.ShimClientConfiguration.#ctor(Aliyun.OSS.Common.ClientConfiguration)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Aliyun.OSS.Common.Fakes.ShimClientConfiguration.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Aliyun.OSS.Common.Fakes.ShimClientConfiguration.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Aliyun.OSS.Common.Fakes.ShimClientConfiguration.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Aliyun.OSS.Common.Fakes.ShimClientConfiguration.ConnectionTimeoutGet">
            <summary>设置 ClientConfiguration.get_ConnectionTimeout() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Common.Fakes.ShimClientConfiguration.ConnectionTimeoutSetInt32">
            <summary>设置 ClientConfiguration.set_ConnectionTimeout(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Common.Fakes.ShimClientConfiguration.Constructor">
            <summary>设置 ClientConfiguration.ClientConfiguration() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Common.Fakes.ShimClientConfiguration.EnalbeMD5CheckGet">
            <summary>设置 ClientConfiguration.get_EnalbeMD5Check() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Common.Fakes.ShimClientConfiguration.EnalbeMD5CheckSetBoolean">
            <summary>设置 ClientConfiguration.set_EnalbeMD5Check(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Common.Fakes.ShimClientConfiguration.GetDefaultUserAgent">
            <summary>设置 ClientConfiguration.GetDefaultUserAgent() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Common.Fakes.ShimClientConfiguration.IsCnameGet">
            <summary>设置 ClientConfiguration.get_IsCname() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Common.Fakes.ShimClientConfiguration.IsCnameSetBoolean">
            <summary>设置 ClientConfiguration.set_IsCname(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Common.Fakes.ShimClientConfiguration.MaxErrorRetryGet">
            <summary>设置 ClientConfiguration.get_MaxErrorRetry() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Common.Fakes.ShimClientConfiguration.MaxErrorRetrySetInt32">
            <summary>设置 ClientConfiguration.set_MaxErrorRetry(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Common.Fakes.ShimClientConfiguration.ProgressUpdateIntervalGet">
            <summary>设置 ClientConfiguration.get_ProgressUpdateInterval() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Common.Fakes.ShimClientConfiguration.ProgressUpdateIntervalSetInt64">
            <summary>设置 ClientConfiguration.set_ProgressUpdateInterval(Int64 value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Common.Fakes.ShimClientConfiguration.ProtocolGet">
            <summary>设置 ClientConfiguration.get_Protocol() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Common.Fakes.ShimClientConfiguration.ProtocolSetProtocol">
            <summary>设置 ClientConfiguration.set_Protocol(Protocol value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Common.Fakes.ShimClientConfiguration.ProxyDomainGet">
            <summary>设置 ClientConfiguration.get_ProxyDomain() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Common.Fakes.ShimClientConfiguration.ProxyDomainSetString">
            <summary>设置 ClientConfiguration.set_ProxyDomain(String value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Common.Fakes.ShimClientConfiguration.ProxyHostGet">
            <summary>设置 ClientConfiguration.get_ProxyHost() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Common.Fakes.ShimClientConfiguration.ProxyHostSetString">
            <summary>设置 ClientConfiguration.set_ProxyHost(String value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Common.Fakes.ShimClientConfiguration.ProxyPasswordGet">
            <summary>设置 ClientConfiguration.get_ProxyPassword() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Common.Fakes.ShimClientConfiguration.ProxyPasswordSetString">
            <summary>设置 ClientConfiguration.set_ProxyPassword(String value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Common.Fakes.ShimClientConfiguration.ProxyPortGet">
            <summary>设置 ClientConfiguration.get_ProxyPort() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Common.Fakes.ShimClientConfiguration.ProxyPortSetInt32">
            <summary>设置 ClientConfiguration.set_ProxyPort(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Common.Fakes.ShimClientConfiguration.ProxyUserNameGet">
            <summary>设置 ClientConfiguration.get_ProxyUserName() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Common.Fakes.ShimClientConfiguration.ProxyUserNameSetString">
            <summary>设置 ClientConfiguration.set_ProxyUserName(String value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Common.Fakes.ShimClientConfiguration.SetCustomEpochTicksInt64">
            <summary>设置 ClientConfiguration.SetCustomEpochTicks(Int64 epochTicks) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Common.Fakes.ShimClientConfiguration.StaticConstructor">
            <summary>设置 ClientConfiguration.ClientConfiguration() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Common.Fakes.ShimClientConfiguration.TickOffsetGet">
            <summary>设置 ClientConfiguration.get_TickOffset() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Common.Fakes.ShimClientConfiguration.TickOffsetSetInt64">
            <summary>设置 ClientConfiguration.set_TickOffset(Int64 value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Common.Fakes.ShimClientConfiguration.UserAgentGet">
            <summary>设置 ClientConfiguration.get_UserAgent() 的 填充码</summary>
        </member>
        <member name="T:Aliyun.OSS.Common.Fakes.ShimClientConfiguration.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Common.Fakes.ShimClientConfiguration.AllInstances.ConnectionTimeoutGet">
            <summary>设置 ClientConfiguration.get_ConnectionTimeout() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Common.Fakes.ShimClientConfiguration.AllInstances.ConnectionTimeoutSetInt32">
            <summary>设置 ClientConfiguration.set_ConnectionTimeout(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Common.Fakes.ShimClientConfiguration.AllInstances.EnalbeMD5CheckGet">
            <summary>设置 ClientConfiguration.get_EnalbeMD5Check() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Common.Fakes.ShimClientConfiguration.AllInstances.EnalbeMD5CheckSetBoolean">
            <summary>设置 ClientConfiguration.set_EnalbeMD5Check(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Common.Fakes.ShimClientConfiguration.AllInstances.IsCnameGet">
            <summary>设置 ClientConfiguration.get_IsCname() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Common.Fakes.ShimClientConfiguration.AllInstances.IsCnameSetBoolean">
            <summary>设置 ClientConfiguration.set_IsCname(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Common.Fakes.ShimClientConfiguration.AllInstances.MaxErrorRetryGet">
            <summary>设置 ClientConfiguration.get_MaxErrorRetry() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Common.Fakes.ShimClientConfiguration.AllInstances.MaxErrorRetrySetInt32">
            <summary>设置 ClientConfiguration.set_MaxErrorRetry(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Common.Fakes.ShimClientConfiguration.AllInstances.ProgressUpdateIntervalGet">
            <summary>设置 ClientConfiguration.get_ProgressUpdateInterval() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Common.Fakes.ShimClientConfiguration.AllInstances.ProgressUpdateIntervalSetInt64">
            <summary>设置 ClientConfiguration.set_ProgressUpdateInterval(Int64 value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Common.Fakes.ShimClientConfiguration.AllInstances.ProtocolGet">
            <summary>设置 ClientConfiguration.get_Protocol() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Common.Fakes.ShimClientConfiguration.AllInstances.ProtocolSetProtocol">
            <summary>设置 ClientConfiguration.set_Protocol(Protocol value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Common.Fakes.ShimClientConfiguration.AllInstances.ProxyDomainGet">
            <summary>设置 ClientConfiguration.get_ProxyDomain() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Common.Fakes.ShimClientConfiguration.AllInstances.ProxyDomainSetString">
            <summary>设置 ClientConfiguration.set_ProxyDomain(String value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Common.Fakes.ShimClientConfiguration.AllInstances.ProxyHostGet">
            <summary>设置 ClientConfiguration.get_ProxyHost() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Common.Fakes.ShimClientConfiguration.AllInstances.ProxyHostSetString">
            <summary>设置 ClientConfiguration.set_ProxyHost(String value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Common.Fakes.ShimClientConfiguration.AllInstances.ProxyPasswordGet">
            <summary>设置 ClientConfiguration.get_ProxyPassword() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Common.Fakes.ShimClientConfiguration.AllInstances.ProxyPasswordSetString">
            <summary>设置 ClientConfiguration.set_ProxyPassword(String value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Common.Fakes.ShimClientConfiguration.AllInstances.ProxyPortGet">
            <summary>设置 ClientConfiguration.get_ProxyPort() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Common.Fakes.ShimClientConfiguration.AllInstances.ProxyPortSetInt32">
            <summary>设置 ClientConfiguration.set_ProxyPort(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Common.Fakes.ShimClientConfiguration.AllInstances.ProxyUserNameGet">
            <summary>设置 ClientConfiguration.get_ProxyUserName() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Common.Fakes.ShimClientConfiguration.AllInstances.ProxyUserNameSetString">
            <summary>设置 ClientConfiguration.set_ProxyUserName(String value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Common.Fakes.ShimClientConfiguration.AllInstances.SetCustomEpochTicksInt64">
            <summary>设置 ClientConfiguration.SetCustomEpochTicks(Int64 epochTicks) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Common.Fakes.ShimClientConfiguration.AllInstances.TickOffsetGet">
            <summary>设置 ClientConfiguration.get_TickOffset() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Common.Fakes.ShimClientConfiguration.AllInstances.TickOffsetSetInt64">
            <summary>设置 ClientConfiguration.set_TickOffset(Int64 value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Common.Fakes.ShimClientConfiguration.AllInstances.UserAgentGet">
            <summary>设置 ClientConfiguration.get_UserAgent() 的 填充码</summary>
        </member>
        <member name="T:Aliyun.OSS.Common.Fakes.ShimClientException">
            <summary>Aliyun.OSS.Common.ClientException 的填充码类型</summary>
        </member>
        <member name="M:Aliyun.OSS.Common.Fakes.ShimClientException.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Aliyun.OSS.Common.Fakes.ShimClientException.#ctor(Aliyun.OSS.Common.ClientException)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Aliyun.OSS.Common.Fakes.ShimClientException.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Aliyun.OSS.Common.Fakes.ShimClientException.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:Aliyun.OSS.Common.Fakes.ShimClientException.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:Aliyun.OSS.Common.Fakes.ShimClientException.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Aliyun.OSS.Common.Fakes.ShimClientException.ConstructorSerializationInfoStreamingContext">
            <summary>设置 ClientException.ClientException(SerializationInfo info, StreamingContext context) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Common.Fakes.ShimClientException.ConstructorString">
            <summary>设置 ClientException.ClientException(String message) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Common.Fakes.ShimClientException.ConstructorStringException">
            <summary>设置 ClientException.ClientException(String message, Exception innerException) 的 填充码</summary>
        </member>
        <member name="T:Aliyun.OSS.Common.Fakes.ShimClientException.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:Aliyun.OSS.Common.Fakes.ShimOssErrorCode">
            <summary>Aliyun.OSS.Common.OssErrorCode 的填充码类型</summary>
        </member>
        <member name="M:Aliyun.OSS.Common.Fakes.ShimOssErrorCode.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Aliyun.OSS.Common.Fakes.ShimOssErrorCode.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Aliyun.OSS.Common.Fakes.ShimOssErrorCode.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Aliyun.OSS.Common.Fakes.ShimOssErrorCode.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="T:Aliyun.OSS.Common.Fakes.ShimOssException">
            <summary>Aliyun.OSS.Common.OssException 的填充码类型</summary>
        </member>
        <member name="M:Aliyun.OSS.Common.Fakes.ShimOssException.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Aliyun.OSS.Common.Fakes.ShimOssException.#ctor(Aliyun.OSS.Common.OssException)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Aliyun.OSS.Common.Fakes.ShimOssException.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Aliyun.OSS.Common.Fakes.ShimOssException.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:Aliyun.OSS.Common.Fakes.ShimOssException.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:Aliyun.OSS.Common.Fakes.ShimOssException.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Aliyun.OSS.Common.Fakes.ShimOssException.Constructor">
            <summary>设置 OssException.OssException() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Common.Fakes.ShimOssException.ConstructorSerializationInfoStreamingContext">
            <summary>设置 OssException.OssException(SerializationInfo info, StreamingContext context) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Common.Fakes.ShimOssException.ConstructorString">
            <summary>设置 OssException.OssException(String message) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Common.Fakes.ShimOssException.ConstructorStringException">
            <summary>设置 OssException.OssException(String message, Exception innerException) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Common.Fakes.ShimOssException.GetObjectDataSerializationInfoStreamingContext">
            <summary>设置 OssException.GetObjectData(SerializationInfo info, StreamingContext context) 的 填充码</summary>
        </member>
        <member name="T:Aliyun.OSS.Common.Fakes.ShimOssException.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Common.Fakes.ShimOssException.AllInstances.GetObjectDataSerializationInfoStreamingContext">
            <summary>设置 OssException.GetObjectData(SerializationInfo info, StreamingContext context) 的 填充码</summary>
        </member>
        <member name="T:Aliyun.OSS.Common.Fakes.ShimServiceException">
            <summary>Aliyun.OSS.Common.ServiceException 的填充码类型</summary>
        </member>
        <member name="M:Aliyun.OSS.Common.Fakes.ShimServiceException.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Aliyun.OSS.Common.Fakes.ShimServiceException.#ctor(Aliyun.OSS.Common.ServiceException)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Aliyun.OSS.Common.Fakes.ShimServiceException.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Aliyun.OSS.Common.Fakes.ShimServiceException.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:Aliyun.OSS.Common.Fakes.ShimServiceException.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:Aliyun.OSS.Common.Fakes.ShimServiceException.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Aliyun.OSS.Common.Fakes.ShimServiceException.Constructor">
            <summary>设置 ServiceException.ServiceException() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Common.Fakes.ShimServiceException.ConstructorSerializationInfoStreamingContext">
            <summary>设置 ServiceException.ServiceException(SerializationInfo info, StreamingContext context) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Common.Fakes.ShimServiceException.ConstructorString">
            <summary>设置 ServiceException.ServiceException(String message) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Common.Fakes.ShimServiceException.ConstructorStringException">
            <summary>设置 ServiceException.ServiceException(String message, Exception innerException) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Common.Fakes.ShimServiceException.ErrorCodeGet">
            <summary>设置 ServiceException.get_ErrorCode() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Common.Fakes.ShimServiceException.ErrorCodeSetString">
            <summary>设置 ServiceException.set_ErrorCode(String value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Common.Fakes.ShimServiceException.GetObjectDataSerializationInfoStreamingContext">
            <summary>设置 ServiceException.GetObjectData(SerializationInfo info, StreamingContext context) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Common.Fakes.ShimServiceException.HostIdGet">
            <summary>设置 ServiceException.get_HostId() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Common.Fakes.ShimServiceException.HostIdSetString">
            <summary>设置 ServiceException.set_HostId(String value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Common.Fakes.ShimServiceException.RequestIdGet">
            <summary>设置 ServiceException.get_RequestId() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Common.Fakes.ShimServiceException.RequestIdSetString">
            <summary>设置 ServiceException.set_RequestId(String value) 的 填充码</summary>
        </member>
        <member name="T:Aliyun.OSS.Common.Fakes.ShimServiceException.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Common.Fakes.ShimServiceException.AllInstances.ErrorCodeGet">
            <summary>设置 ServiceException.get_ErrorCode() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Common.Fakes.ShimServiceException.AllInstances.ErrorCodeSetString">
            <summary>设置 ServiceException.set_ErrorCode(String value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Common.Fakes.ShimServiceException.AllInstances.GetObjectDataSerializationInfoStreamingContext">
            <summary>设置 ServiceException.GetObjectData(SerializationInfo info, StreamingContext context) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Common.Fakes.ShimServiceException.AllInstances.HostIdGet">
            <summary>设置 ServiceException.get_HostId() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Common.Fakes.ShimServiceException.AllInstances.HostIdSetString">
            <summary>设置 ServiceException.set_HostId(String value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Common.Fakes.ShimServiceException.AllInstances.RequestIdGet">
            <summary>设置 ServiceException.get_RequestId() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Common.Fakes.ShimServiceException.AllInstances.RequestIdSetString">
            <summary>设置 ServiceException.set_RequestId(String value) 的 填充码</summary>
        </member>
        <member name="T:Aliyun.OSS.Common.Fakes.StubClientConfiguration">
            <summary>Aliyun.OSS.Common.ClientConfiguration 的存根类型</summary>
        </member>
        <member name="M:Aliyun.OSS.Common.Fakes.StubClientConfiguration.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Aliyun.OSS.Common.Fakes.StubClientConfiguration.InitializeStub">
            <summary>初始化 type StubClientConfiguration 的新实例</summary>
        </member>
        <member name="P:Aliyun.OSS.Common.Fakes.StubClientConfiguration.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Aliyun.OSS.Common.Fakes.StubClientConfiguration.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Aliyun.OSS.Common.Fakes.StubClientConfiguration.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Aliyun.OSS.Common.Fakes.StubClientException">
            <summary>Aliyun.OSS.Common.ClientException 的存根类型</summary>
        </member>
        <member name="M:Aliyun.OSS.Common.Fakes.StubClientException.#ctor(System.String)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Aliyun.OSS.Common.Fakes.StubClientException.#ctor(System.String,System.Exception)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Aliyun.OSS.Common.Fakes.StubClientException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Aliyun.OSS.Common.Fakes.StubClientException.AttachBackingFieldToHelpLink">
            <summary>附加委托以将 StubClientException.HelpLink 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:Aliyun.OSS.Common.Fakes.StubClientException.AttachBackingFieldToSource">
            <summary>附加委托以将 StubClientException.Source 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="F:Aliyun.OSS.Common.Fakes.StubClientException.DataGet">
            <summary>设置 Exception.get_Data() 的 stub</summary>
        </member>
        <member name="M:Aliyun.OSS.Common.Fakes.StubClientException.GetBaseException">
            <summary>设置 Exception.GetBaseException() 的 存根</summary>
        </member>
        <member name="F:Aliyun.OSS.Common.Fakes.StubClientException.GetBaseException01">
            <summary>设置 Exception.GetBaseException() 的 stub</summary>
        </member>
        <member name="M:Aliyun.OSS.Common.Fakes.StubClientException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>设置 Exception.GetObjectData(SerializationInfo info, StreamingContext context) 的 存根</summary>
        </member>
        <member name="F:Aliyun.OSS.Common.Fakes.StubClientException.GetObjectDataSerializationInfoStreamingContext">
            <summary>设置 Exception.GetObjectData(SerializationInfo info, StreamingContext context) 的 stub</summary>
        </member>
        <member name="F:Aliyun.OSS.Common.Fakes.StubClientException.HelpLinkGet">
            <summary>设置 Exception.get_HelpLink() 的 stub</summary>
        </member>
        <member name="F:Aliyun.OSS.Common.Fakes.StubClientException.HelpLinkSetString">
            <summary>设置 Exception.set_HelpLink(String value) 的 stub</summary>
        </member>
        <member name="M:Aliyun.OSS.Common.Fakes.StubClientException.InitializeStub">
            <summary>初始化 type StubClientException 的新实例</summary>
        </member>
        <member name="F:Aliyun.OSS.Common.Fakes.StubClientException.MessageGet">
            <summary>设置 Exception.get_Message() 的 stub</summary>
        </member>
        <member name="F:Aliyun.OSS.Common.Fakes.StubClientException.SourceGet">
            <summary>设置 Exception.get_Source() 的 stub</summary>
        </member>
        <member name="F:Aliyun.OSS.Common.Fakes.StubClientException.SourceSetString">
            <summary>设置 Exception.set_Source(String value) 的 stub</summary>
        </member>
        <member name="F:Aliyun.OSS.Common.Fakes.StubClientException.StackTraceGet">
            <summary>设置 Exception.get_StackTrace() 的 stub</summary>
        </member>
        <member name="M:Aliyun.OSS.Common.Fakes.StubClientException.ToString">
            <summary>设置 Exception.ToString() 的 存根</summary>
        </member>
        <member name="F:Aliyun.OSS.Common.Fakes.StubClientException.ToString01">
            <summary>设置 Exception.ToString() 的 stub</summary>
        </member>
        <member name="P:Aliyun.OSS.Common.Fakes.StubClientException.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Aliyun.OSS.Common.Fakes.StubClientException.Data">
            <summary>设置 Exception.get_Data() 的 stub</summary>
        </member>
        <member name="P:Aliyun.OSS.Common.Fakes.StubClientException.HelpLink">
            <summary>设置 Exception.get_HelpLink() 的 stub</summary>
        </member>
        <member name="P:Aliyun.OSS.Common.Fakes.StubClientException.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Aliyun.OSS.Common.Fakes.StubClientException.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="P:Aliyun.OSS.Common.Fakes.StubClientException.Message">
            <summary>设置 Exception.get_Message() 的 stub</summary>
        </member>
        <member name="P:Aliyun.OSS.Common.Fakes.StubClientException.Source">
            <summary>设置 Exception.get_Source() 的 stub</summary>
        </member>
        <member name="P:Aliyun.OSS.Common.Fakes.StubClientException.StackTrace">
            <summary>设置 Exception.get_StackTrace() 的 stub</summary>
        </member>
        <member name="T:Aliyun.OSS.Common.Fakes.StubOssException">
            <summary>Aliyun.OSS.Common.OssException 的存根类型</summary>
        </member>
        <member name="M:Aliyun.OSS.Common.Fakes.StubOssException.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Aliyun.OSS.Common.Fakes.StubOssException.#ctor(System.String)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Aliyun.OSS.Common.Fakes.StubOssException.#ctor(System.String,System.Exception)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Aliyun.OSS.Common.Fakes.StubOssException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Aliyun.OSS.Common.Fakes.StubOssException.AttachBackingFieldToHelpLink">
            <summary>附加委托以将 StubOssException.HelpLink 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:Aliyun.OSS.Common.Fakes.StubOssException.AttachBackingFieldToSource">
            <summary>附加委托以将 StubOssException.Source 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="F:Aliyun.OSS.Common.Fakes.StubOssException.DataGet">
            <summary>设置 Exception.get_Data() 的 stub</summary>
        </member>
        <member name="M:Aliyun.OSS.Common.Fakes.StubOssException.GetBaseException">
            <summary>设置 Exception.GetBaseException() 的 存根</summary>
        </member>
        <member name="F:Aliyun.OSS.Common.Fakes.StubOssException.GetBaseException01">
            <summary>设置 Exception.GetBaseException() 的 stub</summary>
        </member>
        <member name="M:Aliyun.OSS.Common.Fakes.StubOssException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>设置 OssException.GetObjectData(SerializationInfo info, StreamingContext context) 的 存根</summary>
        </member>
        <member name="F:Aliyun.OSS.Common.Fakes.StubOssException.GetObjectDataSerializationInfoStreamingContext">
            <summary>设置 OssException.GetObjectData(SerializationInfo info, StreamingContext context) 的 stub</summary>
        </member>
        <member name="F:Aliyun.OSS.Common.Fakes.StubOssException.HelpLinkGet">
            <summary>设置 Exception.get_HelpLink() 的 stub</summary>
        </member>
        <member name="F:Aliyun.OSS.Common.Fakes.StubOssException.HelpLinkSetString">
            <summary>设置 Exception.set_HelpLink(String value) 的 stub</summary>
        </member>
        <member name="M:Aliyun.OSS.Common.Fakes.StubOssException.InitializeStub">
            <summary>初始化 type StubOssException 的新实例</summary>
        </member>
        <member name="F:Aliyun.OSS.Common.Fakes.StubOssException.MessageGet">
            <summary>设置 Exception.get_Message() 的 stub</summary>
        </member>
        <member name="F:Aliyun.OSS.Common.Fakes.StubOssException.SourceGet">
            <summary>设置 Exception.get_Source() 的 stub</summary>
        </member>
        <member name="F:Aliyun.OSS.Common.Fakes.StubOssException.SourceSetString">
            <summary>设置 Exception.set_Source(String value) 的 stub</summary>
        </member>
        <member name="F:Aliyun.OSS.Common.Fakes.StubOssException.StackTraceGet">
            <summary>设置 Exception.get_StackTrace() 的 stub</summary>
        </member>
        <member name="M:Aliyun.OSS.Common.Fakes.StubOssException.ToString">
            <summary>设置 Exception.ToString() 的 存根</summary>
        </member>
        <member name="F:Aliyun.OSS.Common.Fakes.StubOssException.ToString01">
            <summary>设置 Exception.ToString() 的 stub</summary>
        </member>
        <member name="P:Aliyun.OSS.Common.Fakes.StubOssException.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Aliyun.OSS.Common.Fakes.StubOssException.Data">
            <summary>设置 Exception.get_Data() 的 stub</summary>
        </member>
        <member name="P:Aliyun.OSS.Common.Fakes.StubOssException.HelpLink">
            <summary>设置 Exception.get_HelpLink() 的 stub</summary>
        </member>
        <member name="P:Aliyun.OSS.Common.Fakes.StubOssException.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Aliyun.OSS.Common.Fakes.StubOssException.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="P:Aliyun.OSS.Common.Fakes.StubOssException.Message">
            <summary>设置 Exception.get_Message() 的 stub</summary>
        </member>
        <member name="P:Aliyun.OSS.Common.Fakes.StubOssException.Source">
            <summary>设置 Exception.get_Source() 的 stub</summary>
        </member>
        <member name="P:Aliyun.OSS.Common.Fakes.StubOssException.StackTrace">
            <summary>设置 Exception.get_StackTrace() 的 stub</summary>
        </member>
        <member name="T:Aliyun.OSS.Common.Fakes.StubServiceException">
            <summary>Aliyun.OSS.Common.ServiceException 的存根类型</summary>
        </member>
        <member name="M:Aliyun.OSS.Common.Fakes.StubServiceException.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Aliyun.OSS.Common.Fakes.StubServiceException.#ctor(System.String)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Aliyun.OSS.Common.Fakes.StubServiceException.#ctor(System.String,System.Exception)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Aliyun.OSS.Common.Fakes.StubServiceException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Aliyun.OSS.Common.Fakes.StubServiceException.AttachBackingFieldToHelpLink">
            <summary>附加委托以将 StubServiceException.HelpLink 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:Aliyun.OSS.Common.Fakes.StubServiceException.AttachBackingFieldToSource">
            <summary>附加委托以将 StubServiceException.Source 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="F:Aliyun.OSS.Common.Fakes.StubServiceException.DataGet">
            <summary>设置 Exception.get_Data() 的 stub</summary>
        </member>
        <member name="M:Aliyun.OSS.Common.Fakes.StubServiceException.GetBaseException">
            <summary>设置 Exception.GetBaseException() 的 存根</summary>
        </member>
        <member name="F:Aliyun.OSS.Common.Fakes.StubServiceException.GetBaseException01">
            <summary>设置 Exception.GetBaseException() 的 stub</summary>
        </member>
        <member name="M:Aliyun.OSS.Common.Fakes.StubServiceException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>设置 ServiceException.GetObjectData(SerializationInfo info, StreamingContext context) 的 存根</summary>
        </member>
        <member name="F:Aliyun.OSS.Common.Fakes.StubServiceException.GetObjectDataSerializationInfoStreamingContext">
            <summary>设置 ServiceException.GetObjectData(SerializationInfo info, StreamingContext context) 的 stub</summary>
        </member>
        <member name="F:Aliyun.OSS.Common.Fakes.StubServiceException.HelpLinkGet">
            <summary>设置 Exception.get_HelpLink() 的 stub</summary>
        </member>
        <member name="F:Aliyun.OSS.Common.Fakes.StubServiceException.HelpLinkSetString">
            <summary>设置 Exception.set_HelpLink(String value) 的 stub</summary>
        </member>
        <member name="M:Aliyun.OSS.Common.Fakes.StubServiceException.InitializeStub">
            <summary>初始化 type StubServiceException 的新实例</summary>
        </member>
        <member name="F:Aliyun.OSS.Common.Fakes.StubServiceException.MessageGet">
            <summary>设置 Exception.get_Message() 的 stub</summary>
        </member>
        <member name="F:Aliyun.OSS.Common.Fakes.StubServiceException.SourceGet">
            <summary>设置 Exception.get_Source() 的 stub</summary>
        </member>
        <member name="F:Aliyun.OSS.Common.Fakes.StubServiceException.SourceSetString">
            <summary>设置 Exception.set_Source(String value) 的 stub</summary>
        </member>
        <member name="F:Aliyun.OSS.Common.Fakes.StubServiceException.StackTraceGet">
            <summary>设置 Exception.get_StackTrace() 的 stub</summary>
        </member>
        <member name="M:Aliyun.OSS.Common.Fakes.StubServiceException.ToString">
            <summary>设置 Exception.ToString() 的 存根</summary>
        </member>
        <member name="F:Aliyun.OSS.Common.Fakes.StubServiceException.ToString01">
            <summary>设置 Exception.ToString() 的 stub</summary>
        </member>
        <member name="P:Aliyun.OSS.Common.Fakes.StubServiceException.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Aliyun.OSS.Common.Fakes.StubServiceException.Data">
            <summary>设置 Exception.get_Data() 的 stub</summary>
        </member>
        <member name="P:Aliyun.OSS.Common.Fakes.StubServiceException.HelpLink">
            <summary>设置 Exception.get_HelpLink() 的 stub</summary>
        </member>
        <member name="P:Aliyun.OSS.Common.Fakes.StubServiceException.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Aliyun.OSS.Common.Fakes.StubServiceException.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="P:Aliyun.OSS.Common.Fakes.StubServiceException.Message">
            <summary>设置 Exception.get_Message() 的 stub</summary>
        </member>
        <member name="P:Aliyun.OSS.Common.Fakes.StubServiceException.Source">
            <summary>设置 Exception.get_Source() 的 stub</summary>
        </member>
        <member name="P:Aliyun.OSS.Common.Fakes.StubServiceException.StackTrace">
            <summary>设置 Exception.get_StackTrace() 的 stub</summary>
        </member>
        <member name="T:Aliyun.OSS.Common.Internal.Fakes.ShimHashStream">
            <summary>Aliyun.OSS.Common.Internal.HashStream 的填充码类型</summary>
        </member>
        <member name="M:Aliyun.OSS.Common.Internal.Fakes.ShimHashStream.#ctor(Aliyun.OSS.Common.Internal.HashStream)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Aliyun.OSS.Common.Internal.Fakes.ShimHashStream.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Aliyun.OSS.Common.Internal.Fakes.ShimHashStream.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:Aliyun.OSS.Common.Internal.Fakes.ShimHashStream.Bind(System.IDisposable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:Aliyun.OSS.Common.Internal.Fakes.ShimHashStream.AlgorithmGet">
            <summary>设置 HashStream.get_Algorithm() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Common.Internal.Fakes.ShimHashStream.AlgorithmSetIHashingWrapper">
            <summary>设置 HashStream.set_Algorithm(IHashingWrapper value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Common.Internal.Fakes.ShimHashStream.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Aliyun.OSS.Common.Internal.Fakes.ShimHashStream.CalculateHash">
            <summary>设置 HashStream.CalculateHash() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Common.Internal.Fakes.ShimHashStream.CalculatedHashGet">
            <summary>设置 HashStream.get_CalculatedHash() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Common.Internal.Fakes.ShimHashStream.CalculatedHashSetByteArray">
            <summary>设置 HashStream.set_CalculatedHash(Byte[] value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Common.Internal.Fakes.ShimHashStream.CanSeekGet">
            <summary>设置 HashStream.get_CanSeek() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Common.Internal.Fakes.ShimHashStream.Close">
            <summary>设置 HashStream.Close() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Common.Internal.Fakes.ShimHashStream.CompareHashesByteArrayByteArray">
            <summary>设置 HashStream.CompareHashes(Byte[] expected, Byte[] actual) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Common.Internal.Fakes.ShimHashStream.ConstructorStreamByteArrayInt64">
            <summary>设置 HashStream.HashStream(Stream baseStream, Byte[] expectedHash, Int64 expectedLength) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Common.Internal.Fakes.ShimHashStream.ConstructorStreamInt64">
            <summary>设置 HashStream.HashStream(Stream baseStream, Int64 expectedLength) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Common.Internal.Fakes.ShimHashStream.CurrentPositionGet">
            <summary>设置 HashStream.get_CurrentPosition() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Common.Internal.Fakes.ShimHashStream.CurrentPositionSetInt64">
            <summary>设置 HashStream.set_CurrentPosition(Int64 value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Common.Internal.Fakes.ShimHashStream.DisposeBoolean">
            <summary>设置 HashStream.Dispose(Boolean disposing) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Common.Internal.Fakes.ShimHashStream.ExpectedHashGet">
            <summary>设置 HashStream.get_ExpectedHash() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Common.Internal.Fakes.ShimHashStream.ExpectedHashSetByteArray">
            <summary>设置 HashStream.set_ExpectedHash(Byte[] value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Common.Internal.Fakes.ShimHashStream.ExpectedLengthGet">
            <summary>设置 HashStream.get_ExpectedLength() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Common.Internal.Fakes.ShimHashStream.ExpectedLengthSetInt64">
            <summary>设置 HashStream.set_ExpectedLength(Int64 value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Common.Internal.Fakes.ShimHashStream.FinishedHashingGet">
            <summary>设置 HashStream.get_FinishedHashing() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Common.Internal.Fakes.ShimHashStream.LengthGet">
            <summary>设置 HashStream.get_Length() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Common.Internal.Fakes.ShimHashStream.PositionSetInt64">
            <summary>设置 HashStream.set_Position(Int64 value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Common.Internal.Fakes.ShimHashStream.ReadByteArrayInt32Int32">
            <summary>设置 HashStream.Read(Byte[] buffer, Int32 offset, Int32 count) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Common.Internal.Fakes.ShimHashStream.Reset">
            <summary>设置 HashStream.Reset() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Common.Internal.Fakes.ShimHashStream.SeekInt64SeekOrigin">
            <summary>设置 HashStream.Seek(Int64 offset, SeekOrigin origin) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Common.Internal.Fakes.ShimHashStream.ValidateBaseStream">
            <summary>设置 HashStream.ValidateBaseStream() 的 填充码</summary>
        </member>
        <member name="T:Aliyun.OSS.Common.Internal.Fakes.ShimHashStream.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Common.Internal.Fakes.ShimHashStream.AllInstances.AlgorithmGet">
            <summary>设置 HashStream.get_Algorithm() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Common.Internal.Fakes.ShimHashStream.AllInstances.AlgorithmSetIHashingWrapper">
            <summary>设置 HashStream.set_Algorithm(IHashingWrapper value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Common.Internal.Fakes.ShimHashStream.AllInstances.CalculateHash">
            <summary>设置 HashStream.CalculateHash() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Common.Internal.Fakes.ShimHashStream.AllInstances.CalculatedHashGet">
            <summary>设置 HashStream.get_CalculatedHash() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Common.Internal.Fakes.ShimHashStream.AllInstances.CalculatedHashSetByteArray">
            <summary>设置 HashStream.set_CalculatedHash(Byte[] value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Common.Internal.Fakes.ShimHashStream.AllInstances.CanSeekGet">
            <summary>设置 HashStream.get_CanSeek() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Common.Internal.Fakes.ShimHashStream.AllInstances.Close">
            <summary>设置 HashStream.Close() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Common.Internal.Fakes.ShimHashStream.AllInstances.CurrentPositionGet">
            <summary>设置 HashStream.get_CurrentPosition() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Common.Internal.Fakes.ShimHashStream.AllInstances.CurrentPositionSetInt64">
            <summary>设置 HashStream.set_CurrentPosition(Int64 value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Common.Internal.Fakes.ShimHashStream.AllInstances.DisposeBoolean">
            <summary>设置 HashStream.Dispose(Boolean disposing) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Common.Internal.Fakes.ShimHashStream.AllInstances.ExpectedHashGet">
            <summary>设置 HashStream.get_ExpectedHash() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Common.Internal.Fakes.ShimHashStream.AllInstances.ExpectedHashSetByteArray">
            <summary>设置 HashStream.set_ExpectedHash(Byte[] value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Common.Internal.Fakes.ShimHashStream.AllInstances.ExpectedLengthGet">
            <summary>设置 HashStream.get_ExpectedLength() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Common.Internal.Fakes.ShimHashStream.AllInstances.ExpectedLengthSetInt64">
            <summary>设置 HashStream.set_ExpectedLength(Int64 value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Common.Internal.Fakes.ShimHashStream.AllInstances.FinishedHashingGet">
            <summary>设置 HashStream.get_FinishedHashing() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Common.Internal.Fakes.ShimHashStream.AllInstances.LengthGet">
            <summary>设置 HashStream.get_Length() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Common.Internal.Fakes.ShimHashStream.AllInstances.PositionSetInt64">
            <summary>设置 HashStream.set_Position(Int64 value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Common.Internal.Fakes.ShimHashStream.AllInstances.ReadByteArrayInt32Int32">
            <summary>设置 HashStream.Read(Byte[] buffer, Int32 offset, Int32 count) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Common.Internal.Fakes.ShimHashStream.AllInstances.Reset">
            <summary>设置 HashStream.Reset() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Common.Internal.Fakes.ShimHashStream.AllInstances.SeekInt64SeekOrigin">
            <summary>设置 HashStream.Seek(Int64 offset, SeekOrigin origin) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Common.Internal.Fakes.ShimHashStream.AllInstances.ValidateBaseStream">
            <summary>设置 HashStream.ValidateBaseStream() 的 填充码</summary>
        </member>
        <member name="T:Aliyun.OSS.Common.Internal.Fakes.ShimHashStream`1">
            <summary>Aliyun.OSS.Common.Internal.HashStream`1 的填充码类型</summary>
        </member>
        <member name="M:Aliyun.OSS.Common.Internal.Fakes.ShimHashStream`1.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Aliyun.OSS.Common.Internal.Fakes.ShimHashStream`1.#ctor(Aliyun.OSS.Common.Internal.HashStream{`0})">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Aliyun.OSS.Common.Internal.Fakes.ShimHashStream`1.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Aliyun.OSS.Common.Internal.Fakes.ShimHashStream`1.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:Aliyun.OSS.Common.Internal.Fakes.ShimHashStream`1.Bind(System.IDisposable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:Aliyun.OSS.Common.Internal.Fakes.ShimHashStream`1.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Aliyun.OSS.Common.Internal.Fakes.ShimHashStream`1.ConstructorStreamByteArrayInt64">
            <summary>设置 HashStream`1.HashStream`1(Stream baseStream, Byte[] expectedHash, Int64 expectedLength) 的 填充码</summary>
        </member>
        <member name="T:Aliyun.OSS.Common.Internal.Fakes.ShimHashStream`1.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:Aliyun.OSS.Common.Internal.Fakes.ShimHashingWrapper">
            <summary>Aliyun.OSS.Common.Internal.HashingWrapper 的填充码类型</summary>
        </member>
        <member name="M:Aliyun.OSS.Common.Internal.Fakes.ShimHashingWrapper.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Aliyun.OSS.Common.Internal.Fakes.ShimHashingWrapper.#ctor(Aliyun.OSS.Common.Internal.HashingWrapper)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Aliyun.OSS.Common.Internal.Fakes.ShimHashingWrapper.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Aliyun.OSS.Common.Internal.Fakes.ShimHashingWrapper.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:Aliyun.OSS.Common.Internal.Fakes.ShimHashingWrapper.Bind(Aliyun.OSS.Common.Internal.IHashingWrapper)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:Aliyun.OSS.Common.Internal.Fakes.ShimHashingWrapper.Bind(System.IDisposable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:Aliyun.OSS.Common.Internal.Fakes.ShimHashingWrapper.AppendBlockByteArray">
            <summary>设置 HashingWrapper.AppendBlock(Byte[] buffer) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Common.Internal.Fakes.ShimHashingWrapper.AppendBlockByteArrayInt32Int32">
            <summary>设置 HashingWrapper.AppendBlock(Byte[] buffer, Int32 offset, Int32 count) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Common.Internal.Fakes.ShimHashingWrapper.AppendLastBlockByteArray">
            <summary>设置 HashingWrapper.AppendLastBlock(Byte[] buffer) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Common.Internal.Fakes.ShimHashingWrapper.AppendLastBlockByteArrayInt32Int32">
            <summary>设置 HashingWrapper.AppendLastBlock(Byte[] buffer, Int32 offset, Int32 count) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Common.Internal.Fakes.ShimHashingWrapper.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Aliyun.OSS.Common.Internal.Fakes.ShimHashingWrapper.Clear">
            <summary>设置 HashingWrapper.Clear() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Common.Internal.Fakes.ShimHashingWrapper.ComputeHashByteArray">
            <summary>设置 HashingWrapper.ComputeHash(Byte[] buffer) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Common.Internal.Fakes.ShimHashingWrapper.ComputeHashStream">
            <summary>设置 HashingWrapper.ComputeHash(Stream stream) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Common.Internal.Fakes.ShimHashingWrapper.ConstructorString">
            <summary>设置 HashingWrapper.HashingWrapper(String algorithmName) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Common.Internal.Fakes.ShimHashingWrapper.Dispose">
            <summary>设置 HashingWrapper.Dispose() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Common.Internal.Fakes.ShimHashingWrapper.DisposeBoolean">
            <summary>设置 HashingWrapper.Dispose(Boolean disposing) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Common.Internal.Fakes.ShimHashingWrapper.InitString">
            <summary>设置 HashingWrapper.Init(String algorithmName) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Common.Internal.Fakes.ShimHashingWrapper.StaticConstructor">
            <summary>设置 HashingWrapper.HashingWrapper() 的 填充码</summary>
        </member>
        <member name="T:Aliyun.OSS.Common.Internal.Fakes.ShimHashingWrapper.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Common.Internal.Fakes.ShimHashingWrapper.AllInstances.AppendBlockByteArray">
            <summary>设置 HashingWrapper.AppendBlock(Byte[] buffer) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Common.Internal.Fakes.ShimHashingWrapper.AllInstances.AppendBlockByteArrayInt32Int32">
            <summary>设置 HashingWrapper.AppendBlock(Byte[] buffer, Int32 offset, Int32 count) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Common.Internal.Fakes.ShimHashingWrapper.AllInstances.AppendLastBlockByteArray">
            <summary>设置 HashingWrapper.AppendLastBlock(Byte[] buffer) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Common.Internal.Fakes.ShimHashingWrapper.AllInstances.AppendLastBlockByteArrayInt32Int32">
            <summary>设置 HashingWrapper.AppendLastBlock(Byte[] buffer, Int32 offset, Int32 count) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Common.Internal.Fakes.ShimHashingWrapper.AllInstances.Clear">
            <summary>设置 HashingWrapper.Clear() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Common.Internal.Fakes.ShimHashingWrapper.AllInstances.ComputeHashByteArray">
            <summary>设置 HashingWrapper.ComputeHash(Byte[] buffer) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Common.Internal.Fakes.ShimHashingWrapper.AllInstances.ComputeHashStream">
            <summary>设置 HashingWrapper.ComputeHash(Stream stream) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Common.Internal.Fakes.ShimHashingWrapper.AllInstances.Dispose">
            <summary>设置 HashingWrapper.Dispose() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Common.Internal.Fakes.ShimHashingWrapper.AllInstances.DisposeBoolean">
            <summary>设置 HashingWrapper.Dispose(Boolean disposing) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Common.Internal.Fakes.ShimHashingWrapper.AllInstances.InitString">
            <summary>设置 HashingWrapper.Init(String algorithmName) 的 填充码</summary>
        </member>
        <member name="T:Aliyun.OSS.Common.Internal.Fakes.ShimHashingWrapperMD5">
            <summary>Aliyun.OSS.Common.Internal.HashingWrapperMD5 的填充码类型</summary>
        </member>
        <member name="M:Aliyun.OSS.Common.Internal.Fakes.ShimHashingWrapperMD5.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Aliyun.OSS.Common.Internal.Fakes.ShimHashingWrapperMD5.#ctor(Aliyun.OSS.Common.Internal.HashingWrapperMD5)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Aliyun.OSS.Common.Internal.Fakes.ShimHashingWrapperMD5.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Aliyun.OSS.Common.Internal.Fakes.ShimHashingWrapperMD5.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:Aliyun.OSS.Common.Internal.Fakes.ShimHashingWrapperMD5.Bind(Aliyun.OSS.Common.Internal.IHashingWrapper)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:Aliyun.OSS.Common.Internal.Fakes.ShimHashingWrapperMD5.Bind(System.IDisposable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:Aliyun.OSS.Common.Internal.Fakes.ShimHashingWrapperMD5.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Aliyun.OSS.Common.Internal.Fakes.ShimHashingWrapperMD5.Constructor">
            <summary>设置 HashingWrapperMD5.HashingWrapperMD5() 的 填充码</summary>
        </member>
        <member name="T:Aliyun.OSS.Common.Internal.Fakes.ShimHashingWrapperMD5.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:Aliyun.OSS.Common.Internal.Fakes.ShimMD5Stream">
            <summary>Aliyun.OSS.Common.Internal.MD5Stream 的填充码类型</summary>
        </member>
        <member name="M:Aliyun.OSS.Common.Internal.Fakes.ShimMD5Stream.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Aliyun.OSS.Common.Internal.Fakes.ShimMD5Stream.#ctor(Aliyun.OSS.Common.Internal.MD5Stream)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Aliyun.OSS.Common.Internal.Fakes.ShimMD5Stream.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Aliyun.OSS.Common.Internal.Fakes.ShimMD5Stream.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:Aliyun.OSS.Common.Internal.Fakes.ShimMD5Stream.Bind(System.IDisposable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:Aliyun.OSS.Common.Internal.Fakes.ShimMD5Stream.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Aliyun.OSS.Common.Internal.Fakes.ShimMD5Stream.ConstructorStreamByteArrayInt64">
            <summary>设置 MD5Stream.MD5Stream(Stream baseStream, Byte[] expectedHash, Int64 expectedLength) 的 填充码</summary>
        </member>
        <member name="T:Aliyun.OSS.Common.Internal.Fakes.ShimMD5Stream.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:Aliyun.OSS.Common.Internal.Fakes.ShimPartialWrapperStream">
            <summary>Aliyun.OSS.Common.Internal.PartialWrapperStream 的填充码类型</summary>
        </member>
        <member name="M:Aliyun.OSS.Common.Internal.Fakes.ShimPartialWrapperStream.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Aliyun.OSS.Common.Internal.Fakes.ShimPartialWrapperStream.#ctor(Aliyun.OSS.Common.Internal.PartialWrapperStream)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Aliyun.OSS.Common.Internal.Fakes.ShimPartialWrapperStream.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Aliyun.OSS.Common.Internal.Fakes.ShimPartialWrapperStream.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:Aliyun.OSS.Common.Internal.Fakes.ShimPartialWrapperStream.Bind(System.IDisposable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:Aliyun.OSS.Common.Internal.Fakes.ShimPartialWrapperStream.BeginReadByteArrayInt32Int32AsyncCallbackObject">
            <summary>设置 PartialWrapperStream.BeginRead(Byte[] buffer, Int32 offset, Int32 count, AsyncCallback callback, Object state) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Common.Internal.Fakes.ShimPartialWrapperStream.BeginWriteByteArrayInt32Int32AsyncCallbackObject">
            <summary>设置 PartialWrapperStream.BeginWrite(Byte[] buffer, Int32 offset, Int32 count, AsyncCallback callback, Object state) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Common.Internal.Fakes.ShimPartialWrapperStream.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Aliyun.OSS.Common.Internal.Fakes.ShimPartialWrapperStream.ConstructorStreamInt64">
            <summary>设置 PartialWrapperStream.PartialWrapperStream(Stream stream, Int64 partSize) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Common.Internal.Fakes.ShimPartialWrapperStream.EndReadIAsyncResult">
            <summary>设置 PartialWrapperStream.EndRead(IAsyncResult asyncResult) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Common.Internal.Fakes.ShimPartialWrapperStream.EndWriteIAsyncResult">
            <summary>设置 PartialWrapperStream.EndWrite(IAsyncResult asyncResult) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Common.Internal.Fakes.ShimPartialWrapperStream.LengthGet">
            <summary>设置 PartialWrapperStream.get_Length() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Common.Internal.Fakes.ShimPartialWrapperStream.PositionGet">
            <summary>设置 PartialWrapperStream.get_Position() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Common.Internal.Fakes.ShimPartialWrapperStream.PositionSetInt64">
            <summary>设置 PartialWrapperStream.set_Position(Int64 value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Common.Internal.Fakes.ShimPartialWrapperStream.ReadByteArrayInt32Int32">
            <summary>设置 PartialWrapperStream.Read(Byte[] buffer, Int32 offset, Int32 count) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Common.Internal.Fakes.ShimPartialWrapperStream.RemainingPartSizeGet">
            <summary>设置 PartialWrapperStream.get_RemainingPartSize() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Common.Internal.Fakes.ShimPartialWrapperStream.SeekInt64SeekOrigin">
            <summary>设置 PartialWrapperStream.Seek(Int64 offset, SeekOrigin origin) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Common.Internal.Fakes.ShimPartialWrapperStream.SetLengthInt64">
            <summary>设置 PartialWrapperStream.SetLength(Int64 value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Common.Internal.Fakes.ShimPartialWrapperStream.WriteByteArrayInt32Int32">
            <summary>设置 PartialWrapperStream.Write(Byte[] buffer, Int32 offset, Int32 count) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Common.Internal.Fakes.ShimPartialWrapperStream.WriteByteByte">
            <summary>设置 PartialWrapperStream.WriteByte(Byte value) 的 填充码</summary>
        </member>
        <member name="T:Aliyun.OSS.Common.Internal.Fakes.ShimPartialWrapperStream.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Common.Internal.Fakes.ShimPartialWrapperStream.AllInstances.BeginReadByteArrayInt32Int32AsyncCallbackObject">
            <summary>设置 PartialWrapperStream.BeginRead(Byte[] buffer, Int32 offset, Int32 count, AsyncCallback callback, Object state) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Common.Internal.Fakes.ShimPartialWrapperStream.AllInstances.BeginWriteByteArrayInt32Int32AsyncCallbackObject">
            <summary>设置 PartialWrapperStream.BeginWrite(Byte[] buffer, Int32 offset, Int32 count, AsyncCallback callback, Object state) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Common.Internal.Fakes.ShimPartialWrapperStream.AllInstances.EndReadIAsyncResult">
            <summary>设置 PartialWrapperStream.EndRead(IAsyncResult asyncResult) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Common.Internal.Fakes.ShimPartialWrapperStream.AllInstances.EndWriteIAsyncResult">
            <summary>设置 PartialWrapperStream.EndWrite(IAsyncResult asyncResult) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Common.Internal.Fakes.ShimPartialWrapperStream.AllInstances.LengthGet">
            <summary>设置 PartialWrapperStream.get_Length() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Common.Internal.Fakes.ShimPartialWrapperStream.AllInstances.PositionGet">
            <summary>设置 PartialWrapperStream.get_Position() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Common.Internal.Fakes.ShimPartialWrapperStream.AllInstances.PositionSetInt64">
            <summary>设置 PartialWrapperStream.set_Position(Int64 value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Common.Internal.Fakes.ShimPartialWrapperStream.AllInstances.ReadByteArrayInt32Int32">
            <summary>设置 PartialWrapperStream.Read(Byte[] buffer, Int32 offset, Int32 count) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Common.Internal.Fakes.ShimPartialWrapperStream.AllInstances.RemainingPartSizeGet">
            <summary>设置 PartialWrapperStream.get_RemainingPartSize() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Common.Internal.Fakes.ShimPartialWrapperStream.AllInstances.SeekInt64SeekOrigin">
            <summary>设置 PartialWrapperStream.Seek(Int64 offset, SeekOrigin origin) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Common.Internal.Fakes.ShimPartialWrapperStream.AllInstances.SetLengthInt64">
            <summary>设置 PartialWrapperStream.SetLength(Int64 value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Common.Internal.Fakes.ShimPartialWrapperStream.AllInstances.WriteByteArrayInt32Int32">
            <summary>设置 PartialWrapperStream.Write(Byte[] buffer, Int32 offset, Int32 count) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Common.Internal.Fakes.ShimPartialWrapperStream.AllInstances.WriteByteByte">
            <summary>设置 PartialWrapperStream.WriteByte(Byte value) 的 填充码</summary>
        </member>
        <member name="T:Aliyun.OSS.Common.Internal.Fakes.ShimWrapperStream">
            <summary>Aliyun.OSS.Common.Internal.WrapperStream 的填充码类型</summary>
        </member>
        <member name="M:Aliyun.OSS.Common.Internal.Fakes.ShimWrapperStream.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Aliyun.OSS.Common.Internal.Fakes.ShimWrapperStream.#ctor(Aliyun.OSS.Common.Internal.WrapperStream)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Aliyun.OSS.Common.Internal.Fakes.ShimWrapperStream.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Aliyun.OSS.Common.Internal.Fakes.ShimWrapperStream.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:Aliyun.OSS.Common.Internal.Fakes.ShimWrapperStream.Bind(System.IDisposable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:Aliyun.OSS.Common.Internal.Fakes.ShimWrapperStream.BaseStreamGet">
            <summary>设置 WrapperStream.get_BaseStream() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Common.Internal.Fakes.ShimWrapperStream.BaseStreamSetStream">
            <summary>设置 WrapperStream.set_BaseStream(Stream value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Common.Internal.Fakes.ShimWrapperStream.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Aliyun.OSS.Common.Internal.Fakes.ShimWrapperStream.CanReadGet">
            <summary>设置 WrapperStream.get_CanRead() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Common.Internal.Fakes.ShimWrapperStream.CanSeekGet">
            <summary>设置 WrapperStream.get_CanSeek() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Common.Internal.Fakes.ShimWrapperStream.CanWriteGet">
            <summary>设置 WrapperStream.get_CanWrite() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Common.Internal.Fakes.ShimWrapperStream.Close">
            <summary>设置 WrapperStream.Close() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Common.Internal.Fakes.ShimWrapperStream.ConstructorStream">
            <summary>设置 WrapperStream.WrapperStream(Stream baseStream) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Common.Internal.Fakes.ShimWrapperStream.Flush">
            <summary>设置 WrapperStream.Flush() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Common.Internal.Fakes.ShimWrapperStream.GetNonWrapperBaseStream">
            <summary>设置 WrapperStream.GetNonWrapperBaseStream() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Common.Internal.Fakes.ShimWrapperStream.GetNonWrapperBaseStreamStream">
            <summary>设置 WrapperStream.GetNonWrapperBaseStream(Stream stream) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Common.Internal.Fakes.ShimWrapperStream.GetSeekableBaseStream">
            <summary>设置 WrapperStream.GetSeekableBaseStream() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Common.Internal.Fakes.ShimWrapperStream.LengthGet">
            <summary>设置 WrapperStream.get_Length() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Common.Internal.Fakes.ShimWrapperStream.PositionGet">
            <summary>设置 WrapperStream.get_Position() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Common.Internal.Fakes.ShimWrapperStream.PositionSetInt64">
            <summary>设置 WrapperStream.set_Position(Int64 value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Common.Internal.Fakes.ShimWrapperStream.ReadByteArrayInt32Int32">
            <summary>设置 WrapperStream.Read(Byte[] buffer, Int32 offset, Int32 count) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Common.Internal.Fakes.ShimWrapperStream.ReadTimeoutGet">
            <summary>设置 WrapperStream.get_ReadTimeout() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Common.Internal.Fakes.ShimWrapperStream.ReadTimeoutSetInt32">
            <summary>设置 WrapperStream.set_ReadTimeout(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Common.Internal.Fakes.ShimWrapperStream.SearchWrappedStreamOssFuncOfStreamBoolean">
            <summary>设置 WrapperStream.SearchWrappedStream(OssFunc`2&lt;Stream,Boolean&gt; condition) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Common.Internal.Fakes.ShimWrapperStream.SearchWrappedStreamStreamOssFuncOfStreamBoolean">
            <summary>设置 WrapperStream.SearchWrappedStream(Stream stream, OssFunc`2&lt;Stream,Boolean&gt; condition) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Common.Internal.Fakes.ShimWrapperStream.SeekInt64SeekOrigin">
            <summary>设置 WrapperStream.Seek(Int64 offset, SeekOrigin origin) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Common.Internal.Fakes.ShimWrapperStream.SetLengthInt64">
            <summary>设置 WrapperStream.SetLength(Int64 value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Common.Internal.Fakes.ShimWrapperStream.WriteByteArrayInt32Int32">
            <summary>设置 WrapperStream.Write(Byte[] buffer, Int32 offset, Int32 count) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Common.Internal.Fakes.ShimWrapperStream.WriteTimeoutGet">
            <summary>设置 WrapperStream.get_WriteTimeout() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Common.Internal.Fakes.ShimWrapperStream.WriteTimeoutSetInt32">
            <summary>设置 WrapperStream.set_WriteTimeout(Int32 value) 的 填充码</summary>
        </member>
        <member name="T:Aliyun.OSS.Common.Internal.Fakes.ShimWrapperStream.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Common.Internal.Fakes.ShimWrapperStream.AllInstances.BaseStreamGet">
            <summary>设置 WrapperStream.get_BaseStream() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Common.Internal.Fakes.ShimWrapperStream.AllInstances.BaseStreamSetStream">
            <summary>设置 WrapperStream.set_BaseStream(Stream value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Common.Internal.Fakes.ShimWrapperStream.AllInstances.CanReadGet">
            <summary>设置 WrapperStream.get_CanRead() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Common.Internal.Fakes.ShimWrapperStream.AllInstances.CanSeekGet">
            <summary>设置 WrapperStream.get_CanSeek() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Common.Internal.Fakes.ShimWrapperStream.AllInstances.CanWriteGet">
            <summary>设置 WrapperStream.get_CanWrite() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Common.Internal.Fakes.ShimWrapperStream.AllInstances.Close">
            <summary>设置 WrapperStream.Close() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Common.Internal.Fakes.ShimWrapperStream.AllInstances.Flush">
            <summary>设置 WrapperStream.Flush() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Common.Internal.Fakes.ShimWrapperStream.AllInstances.GetNonWrapperBaseStream">
            <summary>设置 WrapperStream.GetNonWrapperBaseStream() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Common.Internal.Fakes.ShimWrapperStream.AllInstances.GetSeekableBaseStream">
            <summary>设置 WrapperStream.GetSeekableBaseStream() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Common.Internal.Fakes.ShimWrapperStream.AllInstances.LengthGet">
            <summary>设置 WrapperStream.get_Length() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Common.Internal.Fakes.ShimWrapperStream.AllInstances.PositionGet">
            <summary>设置 WrapperStream.get_Position() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Common.Internal.Fakes.ShimWrapperStream.AllInstances.PositionSetInt64">
            <summary>设置 WrapperStream.set_Position(Int64 value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Common.Internal.Fakes.ShimWrapperStream.AllInstances.ReadByteArrayInt32Int32">
            <summary>设置 WrapperStream.Read(Byte[] buffer, Int32 offset, Int32 count) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Common.Internal.Fakes.ShimWrapperStream.AllInstances.ReadTimeoutGet">
            <summary>设置 WrapperStream.get_ReadTimeout() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Common.Internal.Fakes.ShimWrapperStream.AllInstances.ReadTimeoutSetInt32">
            <summary>设置 WrapperStream.set_ReadTimeout(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Common.Internal.Fakes.ShimWrapperStream.AllInstances.SearchWrappedStreamOssFuncOfStreamBoolean">
            <summary>设置 WrapperStream.SearchWrappedStream(OssFunc`2&lt;Stream,Boolean&gt; condition) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Common.Internal.Fakes.ShimWrapperStream.AllInstances.SeekInt64SeekOrigin">
            <summary>设置 WrapperStream.Seek(Int64 offset, SeekOrigin origin) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Common.Internal.Fakes.ShimWrapperStream.AllInstances.SetLengthInt64">
            <summary>设置 WrapperStream.SetLength(Int64 value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Common.Internal.Fakes.ShimWrapperStream.AllInstances.WriteByteArrayInt32Int32">
            <summary>设置 WrapperStream.Write(Byte[] buffer, Int32 offset, Int32 count) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Common.Internal.Fakes.ShimWrapperStream.AllInstances.WriteTimeoutGet">
            <summary>设置 WrapperStream.get_WriteTimeout() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Common.Internal.Fakes.ShimWrapperStream.AllInstances.WriteTimeoutSetInt32">
            <summary>设置 WrapperStream.set_WriteTimeout(Int32 value) 的 填充码</summary>
        </member>
        <member name="T:Aliyun.OSS.Common.Internal.Fakes.StubHashStream">
            <summary>Aliyun.OSS.Common.Internal.HashStream 的存根类型</summary>
        </member>
        <member name="M:Aliyun.OSS.Common.Internal.Fakes.StubHashStream.#ctor(System.IO.Stream,System.Int64)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Aliyun.OSS.Common.Internal.Fakes.StubHashStream.#ctor(System.IO.Stream,System.Byte[],System.Int64)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Aliyun.OSS.Common.Internal.Fakes.StubHashStream.AttachBackingFieldToReadTimeout">
            <summary>附加委托以将 StubHashStream.ReadTimeout 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:Aliyun.OSS.Common.Internal.Fakes.StubHashStream.AttachBackingFieldToWriteTimeout">
            <summary>附加委托以将 StubHashStream.WriteTimeout 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:Aliyun.OSS.Common.Internal.Fakes.StubHashStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
            <summary>设置 Stream.BeginRead(Byte[] buffer, Int32 offset, Int32 count, AsyncCallback callback, Object state) 的 存根</summary>
        </member>
        <member name="F:Aliyun.OSS.Common.Internal.Fakes.StubHashStream.BeginReadByteArrayInt32Int32AsyncCallbackObject">
            <summary>设置 Stream.BeginRead(Byte[] buffer, Int32 offset, Int32 count, AsyncCallback callback, Object state) 的 stub</summary>
        </member>
        <member name="M:Aliyun.OSS.Common.Internal.Fakes.StubHashStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
            <summary>设置 Stream.BeginWrite(Byte[] buffer, Int32 offset, Int32 count, AsyncCallback callback, Object state) 的 存根</summary>
        </member>
        <member name="F:Aliyun.OSS.Common.Internal.Fakes.StubHashStream.BeginWriteByteArrayInt32Int32AsyncCallbackObject">
            <summary>设置 Stream.BeginWrite(Byte[] buffer, Int32 offset, Int32 count, AsyncCallback callback, Object state) 的 stub</summary>
        </member>
        <member name="M:Aliyun.OSS.Common.Internal.Fakes.StubHashStream.CalculateHash">
            <summary>设置 HashStream.CalculateHash() 的 存根</summary>
        </member>
        <member name="F:Aliyun.OSS.Common.Internal.Fakes.StubHashStream.CalculateHash01">
            <summary>设置 HashStream.CalculateHash() 的 stub</summary>
        </member>
        <member name="F:Aliyun.OSS.Common.Internal.Fakes.StubHashStream.CanReadGet">
            <summary>设置 WrapperStream.get_CanRead() 的 stub</summary>
        </member>
        <member name="F:Aliyun.OSS.Common.Internal.Fakes.StubHashStream.CanSeekGet">
            <summary>设置 HashStream.get_CanSeek() 的 stub</summary>
        </member>
        <member name="F:Aliyun.OSS.Common.Internal.Fakes.StubHashStream.CanTimeoutGet">
            <summary>设置 Stream.get_CanTimeout() 的 stub</summary>
        </member>
        <member name="F:Aliyun.OSS.Common.Internal.Fakes.StubHashStream.CanWriteGet">
            <summary>设置 WrapperStream.get_CanWrite() 的 stub</summary>
        </member>
        <member name="M:Aliyun.OSS.Common.Internal.Fakes.StubHashStream.Close">
            <summary>设置 HashStream.Close() 的 存根</summary>
        </member>
        <member name="F:Aliyun.OSS.Common.Internal.Fakes.StubHashStream.Close01">
            <summary>设置 HashStream.Close() 的 stub</summary>
        </member>
        <member name="M:Aliyun.OSS.Common.Internal.Fakes.StubHashStream.CreateWaitHandle">
            <summary>设置 Stream.CreateWaitHandle() 的 存根</summary>
        </member>
        <member name="F:Aliyun.OSS.Common.Internal.Fakes.StubHashStream.CreateWaitHandle01">
            <summary>设置 Stream.CreateWaitHandle() 的 stub</summary>
        </member>
        <member name="M:Aliyun.OSS.Common.Internal.Fakes.StubHashStream.Dispose(System.Boolean)">
            <summary>设置 HashStream.Dispose(Boolean disposing) 的 存根</summary>
        </member>
        <member name="F:Aliyun.OSS.Common.Internal.Fakes.StubHashStream.DisposeBoolean">
            <summary>设置 HashStream.Dispose(Boolean disposing) 的 stub</summary>
        </member>
        <member name="M:Aliyun.OSS.Common.Internal.Fakes.StubHashStream.EndRead(System.IAsyncResult)">
            <summary>设置 Stream.EndRead(IAsyncResult asyncResult) 的 存根</summary>
        </member>
        <member name="F:Aliyun.OSS.Common.Internal.Fakes.StubHashStream.EndReadIAsyncResult">
            <summary>设置 Stream.EndRead(IAsyncResult asyncResult) 的 stub</summary>
        </member>
        <member name="M:Aliyun.OSS.Common.Internal.Fakes.StubHashStream.EndWrite(System.IAsyncResult)">
            <summary>设置 Stream.EndWrite(IAsyncResult asyncResult) 的 存根</summary>
        </member>
        <member name="F:Aliyun.OSS.Common.Internal.Fakes.StubHashStream.EndWriteIAsyncResult">
            <summary>设置 Stream.EndWrite(IAsyncResult asyncResult) 的 stub</summary>
        </member>
        <member name="M:Aliyun.OSS.Common.Internal.Fakes.StubHashStream.Flush">
            <summary>设置 WrapperStream.Flush() 的 存根</summary>
        </member>
        <member name="F:Aliyun.OSS.Common.Internal.Fakes.StubHashStream.Flush01">
            <summary>设置 WrapperStream.Flush() 的 stub</summary>
        </member>
        <member name="M:Aliyun.OSS.Common.Internal.Fakes.StubHashStream.InitializeStub">
            <summary>初始化 type StubHashStream 的新实例</summary>
        </member>
        <member name="F:Aliyun.OSS.Common.Internal.Fakes.StubHashStream.LengthGet">
            <summary>设置 HashStream.get_Length() 的 stub</summary>
        </member>
        <member name="M:Aliyun.OSS.Common.Internal.Fakes.StubHashStream.ObjectInvariant">
            <summary>设置 Stream.ObjectInvariant() 的 存根</summary>
        </member>
        <member name="F:Aliyun.OSS.Common.Internal.Fakes.StubHashStream.ObjectInvariant01">
            <summary>设置 Stream.ObjectInvariant() 的 stub</summary>
        </member>
        <member name="F:Aliyun.OSS.Common.Internal.Fakes.StubHashStream.PositionSetInt64">
            <summary>设置 HashStream.set_Position(Int64 value) 的 stub</summary>
        </member>
        <member name="M:Aliyun.OSS.Common.Internal.Fakes.StubHashStream.Read(System.Byte[],System.Int32,System.Int32)">
            <summary>设置 HashStream.Read(Byte[] buffer, Int32 offset, Int32 count) 的 存根</summary>
        </member>
        <member name="M:Aliyun.OSS.Common.Internal.Fakes.StubHashStream.ReadByte">
            <summary>设置 Stream.ReadByte() 的 存根</summary>
        </member>
        <member name="F:Aliyun.OSS.Common.Internal.Fakes.StubHashStream.ReadByte01">
            <summary>设置 Stream.ReadByte() 的 stub</summary>
        </member>
        <member name="F:Aliyun.OSS.Common.Internal.Fakes.StubHashStream.ReadByteArrayInt32Int32">
            <summary>设置 HashStream.Read(Byte[] buffer, Int32 offset, Int32 count) 的 stub</summary>
        </member>
        <member name="F:Aliyun.OSS.Common.Internal.Fakes.StubHashStream.ReadTimeoutGet">
            <summary>设置 WrapperStream.get_ReadTimeout() 的 stub</summary>
        </member>
        <member name="F:Aliyun.OSS.Common.Internal.Fakes.StubHashStream.ReadTimeoutSetInt32">
            <summary>设置 WrapperStream.set_ReadTimeout(Int32 value) 的 stub</summary>
        </member>
        <member name="M:Aliyun.OSS.Common.Internal.Fakes.StubHashStream.Seek(System.Int64,System.IO.SeekOrigin)">
            <summary>设置 HashStream.Seek(Int64 offset, SeekOrigin origin) 的 存根</summary>
        </member>
        <member name="F:Aliyun.OSS.Common.Internal.Fakes.StubHashStream.SeekInt64SeekOrigin">
            <summary>设置 HashStream.Seek(Int64 offset, SeekOrigin origin) 的 stub</summary>
        </member>
        <member name="M:Aliyun.OSS.Common.Internal.Fakes.StubHashStream.SetLength(System.Int64)">
            <summary>设置 WrapperStream.SetLength(Int64 value) 的 存根</summary>
        </member>
        <member name="F:Aliyun.OSS.Common.Internal.Fakes.StubHashStream.SetLengthInt64">
            <summary>设置 WrapperStream.SetLength(Int64 value) 的 stub</summary>
        </member>
        <member name="M:Aliyun.OSS.Common.Internal.Fakes.StubHashStream.Write(System.Byte[],System.Int32,System.Int32)">
            <summary>设置 WrapperStream.Write(Byte[] buffer, Int32 offset, Int32 count) 的 存根</summary>
        </member>
        <member name="M:Aliyun.OSS.Common.Internal.Fakes.StubHashStream.WriteByte(System.Byte)">
            <summary>设置 Stream.WriteByte(Byte value) 的 存根</summary>
        </member>
        <member name="F:Aliyun.OSS.Common.Internal.Fakes.StubHashStream.WriteByteArrayInt32Int32">
            <summary>设置 WrapperStream.Write(Byte[] buffer, Int32 offset, Int32 count) 的 stub</summary>
        </member>
        <member name="F:Aliyun.OSS.Common.Internal.Fakes.StubHashStream.WriteByteByte">
            <summary>设置 Stream.WriteByte(Byte value) 的 stub</summary>
        </member>
        <member name="F:Aliyun.OSS.Common.Internal.Fakes.StubHashStream.WriteTimeoutGet">
            <summary>设置 WrapperStream.get_WriteTimeout() 的 stub</summary>
        </member>
        <member name="F:Aliyun.OSS.Common.Internal.Fakes.StubHashStream.WriteTimeoutSetInt32">
            <summary>设置 WrapperStream.set_WriteTimeout(Int32 value) 的 stub</summary>
        </member>
        <member name="P:Aliyun.OSS.Common.Internal.Fakes.StubHashStream.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Aliyun.OSS.Common.Internal.Fakes.StubHashStream.CanRead">
            <summary>设置 WrapperStream.get_CanRead() 的 stub</summary>
        </member>
        <member name="P:Aliyun.OSS.Common.Internal.Fakes.StubHashStream.CanSeek">
            <summary>设置 HashStream.get_CanSeek() 的 stub</summary>
        </member>
        <member name="P:Aliyun.OSS.Common.Internal.Fakes.StubHashStream.CanTimeout">
            <summary>设置 Stream.get_CanTimeout() 的 stub</summary>
        </member>
        <member name="P:Aliyun.OSS.Common.Internal.Fakes.StubHashStream.CanWrite">
            <summary>设置 WrapperStream.get_CanWrite() 的 stub</summary>
        </member>
        <member name="P:Aliyun.OSS.Common.Internal.Fakes.StubHashStream.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Aliyun.OSS.Common.Internal.Fakes.StubHashStream.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="P:Aliyun.OSS.Common.Internal.Fakes.StubHashStream.Length">
            <summary>设置 HashStream.get_Length() 的 stub</summary>
        </member>
        <member name="P:Aliyun.OSS.Common.Internal.Fakes.StubHashStream.Position">
            <summary>设置 HashStream.set_Position(Int64 value) 的 stub</summary>
        </member>
        <member name="P:Aliyun.OSS.Common.Internal.Fakes.StubHashStream.ReadTimeout">
            <summary>设置 WrapperStream.get_ReadTimeout() 的 stub</summary>
        </member>
        <member name="P:Aliyun.OSS.Common.Internal.Fakes.StubHashStream.WriteTimeout">
            <summary>设置 WrapperStream.get_WriteTimeout() 的 stub</summary>
        </member>
        <member name="T:Aliyun.OSS.Common.Internal.Fakes.StubHashStream`1">
            <summary>Aliyun.OSS.Common.Internal.HashStream`1 的存根类型</summary>
        </member>
        <member name="M:Aliyun.OSS.Common.Internal.Fakes.StubHashStream`1.#ctor(System.IO.Stream,System.Byte[],System.Int64)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Aliyun.OSS.Common.Internal.Fakes.StubHashStream`1.AttachBackingFieldToReadTimeout">
            <summary>附加委托以将 StubHashStream.ReadTimeout 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:Aliyun.OSS.Common.Internal.Fakes.StubHashStream`1.AttachBackingFieldToWriteTimeout">
            <summary>附加委托以将 StubHashStream.WriteTimeout 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:Aliyun.OSS.Common.Internal.Fakes.StubHashStream`1.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
            <summary>设置 Stream.BeginRead(Byte[] buffer, Int32 offset, Int32 count, AsyncCallback callback, Object state) 的 存根</summary>
        </member>
        <member name="F:Aliyun.OSS.Common.Internal.Fakes.StubHashStream`1.BeginReadByteArrayInt32Int32AsyncCallbackObject">
            <summary>设置 Stream.BeginRead(Byte[] buffer, Int32 offset, Int32 count, AsyncCallback callback, Object state) 的 stub</summary>
        </member>
        <member name="M:Aliyun.OSS.Common.Internal.Fakes.StubHashStream`1.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
            <summary>设置 Stream.BeginWrite(Byte[] buffer, Int32 offset, Int32 count, AsyncCallback callback, Object state) 的 存根</summary>
        </member>
        <member name="F:Aliyun.OSS.Common.Internal.Fakes.StubHashStream`1.BeginWriteByteArrayInt32Int32AsyncCallbackObject">
            <summary>设置 Stream.BeginWrite(Byte[] buffer, Int32 offset, Int32 count, AsyncCallback callback, Object state) 的 stub</summary>
        </member>
        <member name="M:Aliyun.OSS.Common.Internal.Fakes.StubHashStream`1.CalculateHash">
            <summary>设置 HashStream.CalculateHash() 的 存根</summary>
        </member>
        <member name="F:Aliyun.OSS.Common.Internal.Fakes.StubHashStream`1.CalculateHash01">
            <summary>设置 HashStream.CalculateHash() 的 stub</summary>
        </member>
        <member name="F:Aliyun.OSS.Common.Internal.Fakes.StubHashStream`1.CanReadGet">
            <summary>设置 WrapperStream.get_CanRead() 的 stub</summary>
        </member>
        <member name="F:Aliyun.OSS.Common.Internal.Fakes.StubHashStream`1.CanSeekGet">
            <summary>设置 HashStream.get_CanSeek() 的 stub</summary>
        </member>
        <member name="F:Aliyun.OSS.Common.Internal.Fakes.StubHashStream`1.CanTimeoutGet">
            <summary>设置 Stream.get_CanTimeout() 的 stub</summary>
        </member>
        <member name="F:Aliyun.OSS.Common.Internal.Fakes.StubHashStream`1.CanWriteGet">
            <summary>设置 WrapperStream.get_CanWrite() 的 stub</summary>
        </member>
        <member name="M:Aliyun.OSS.Common.Internal.Fakes.StubHashStream`1.Close">
            <summary>设置 HashStream.Close() 的 存根</summary>
        </member>
        <member name="F:Aliyun.OSS.Common.Internal.Fakes.StubHashStream`1.Close01">
            <summary>设置 HashStream.Close() 的 stub</summary>
        </member>
        <member name="M:Aliyun.OSS.Common.Internal.Fakes.StubHashStream`1.CopyToAsync(System.IO.Stream,System.Int32,System.Threading.CancellationToken)">
            <summary>设置 Stream.CopyToAsync(Stream destination, Int32 bufferSize, CancellationToken cancellationToken) 的 存根</summary>
        </member>
        <member name="F:Aliyun.OSS.Common.Internal.Fakes.StubHashStream`1.CopyToAsyncStreamInt32CancellationToken">
            <summary>设置 Stream.CopyToAsync(Stream destination, Int32 bufferSize, CancellationToken cancellationToken) 的 stub</summary>
        </member>
        <member name="M:Aliyun.OSS.Common.Internal.Fakes.StubHashStream`1.CreateWaitHandle">
            <summary>设置 Stream.CreateWaitHandle() 的 存根</summary>
        </member>
        <member name="F:Aliyun.OSS.Common.Internal.Fakes.StubHashStream`1.CreateWaitHandle01">
            <summary>设置 Stream.CreateWaitHandle() 的 stub</summary>
        </member>
        <member name="M:Aliyun.OSS.Common.Internal.Fakes.StubHashStream`1.Dispose(System.Boolean)">
            <summary>设置 HashStream.Dispose(Boolean disposing) 的 存根</summary>
        </member>
        <member name="F:Aliyun.OSS.Common.Internal.Fakes.StubHashStream`1.DisposeBoolean">
            <summary>设置 HashStream.Dispose(Boolean disposing) 的 stub</summary>
        </member>
        <member name="M:Aliyun.OSS.Common.Internal.Fakes.StubHashStream`1.EndRead(System.IAsyncResult)">
            <summary>设置 Stream.EndRead(IAsyncResult asyncResult) 的 存根</summary>
        </member>
        <member name="F:Aliyun.OSS.Common.Internal.Fakes.StubHashStream`1.EndReadIAsyncResult">
            <summary>设置 Stream.EndRead(IAsyncResult asyncResult) 的 stub</summary>
        </member>
        <member name="M:Aliyun.OSS.Common.Internal.Fakes.StubHashStream`1.EndWrite(System.IAsyncResult)">
            <summary>设置 Stream.EndWrite(IAsyncResult asyncResult) 的 存根</summary>
        </member>
        <member name="F:Aliyun.OSS.Common.Internal.Fakes.StubHashStream`1.EndWriteIAsyncResult">
            <summary>设置 Stream.EndWrite(IAsyncResult asyncResult) 的 stub</summary>
        </member>
        <member name="M:Aliyun.OSS.Common.Internal.Fakes.StubHashStream`1.Flush">
            <summary>设置 WrapperStream.Flush() 的 存根</summary>
        </member>
        <member name="F:Aliyun.OSS.Common.Internal.Fakes.StubHashStream`1.Flush01">
            <summary>设置 WrapperStream.Flush() 的 stub</summary>
        </member>
        <member name="M:Aliyun.OSS.Common.Internal.Fakes.StubHashStream`1.FlushAsync(System.Threading.CancellationToken)">
            <summary>设置 Stream.FlushAsync(CancellationToken cancellationToken) 的 存根</summary>
        </member>
        <member name="F:Aliyun.OSS.Common.Internal.Fakes.StubHashStream`1.FlushAsyncCancellationToken">
            <summary>设置 Stream.FlushAsync(CancellationToken cancellationToken) 的 stub</summary>
        </member>
        <member name="M:Aliyun.OSS.Common.Internal.Fakes.StubHashStream`1.InitializeStub">
            <summary>初始化 type StubHashStream 的新实例</summary>
        </member>
        <member name="F:Aliyun.OSS.Common.Internal.Fakes.StubHashStream`1.LengthGet">
            <summary>设置 HashStream.get_Length() 的 stub</summary>
        </member>
        <member name="M:Aliyun.OSS.Common.Internal.Fakes.StubHashStream`1.ObjectInvariant">
            <summary>设置 Stream.ObjectInvariant() 的 存根</summary>
        </member>
        <member name="F:Aliyun.OSS.Common.Internal.Fakes.StubHashStream`1.ObjectInvariant01">
            <summary>设置 Stream.ObjectInvariant() 的 stub</summary>
        </member>
        <member name="F:Aliyun.OSS.Common.Internal.Fakes.StubHashStream`1.PositionSetInt64">
            <summary>设置 HashStream.set_Position(Int64 value) 的 stub</summary>
        </member>
        <member name="M:Aliyun.OSS.Common.Internal.Fakes.StubHashStream`1.Read(System.Byte[],System.Int32,System.Int32)">
            <summary>设置 HashStream.Read(Byte[] buffer, Int32 offset, Int32 count) 的 存根</summary>
        </member>
        <member name="M:Aliyun.OSS.Common.Internal.Fakes.StubHashStream`1.ReadAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)">
            <summary>设置 Stream.ReadAsync(Byte[] buffer, Int32 offset, Int32 count, CancellationToken cancellationToken) 的 存根</summary>
        </member>
        <member name="F:Aliyun.OSS.Common.Internal.Fakes.StubHashStream`1.ReadAsyncByteArrayInt32Int32CancellationToken">
            <summary>设置 Stream.ReadAsync(Byte[] buffer, Int32 offset, Int32 count, CancellationToken cancellationToken) 的 stub</summary>
        </member>
        <member name="M:Aliyun.OSS.Common.Internal.Fakes.StubHashStream`1.ReadByte">
            <summary>设置 Stream.ReadByte() 的 存根</summary>
        </member>
        <member name="F:Aliyun.OSS.Common.Internal.Fakes.StubHashStream`1.ReadByte01">
            <summary>设置 Stream.ReadByte() 的 stub</summary>
        </member>
        <member name="F:Aliyun.OSS.Common.Internal.Fakes.StubHashStream`1.ReadByteArrayInt32Int32">
            <summary>设置 HashStream.Read(Byte[] buffer, Int32 offset, Int32 count) 的 stub</summary>
        </member>
        <member name="F:Aliyun.OSS.Common.Internal.Fakes.StubHashStream`1.ReadTimeoutGet">
            <summary>设置 WrapperStream.get_ReadTimeout() 的 stub</summary>
        </member>
        <member name="F:Aliyun.OSS.Common.Internal.Fakes.StubHashStream`1.ReadTimeoutSetInt32">
            <summary>设置 WrapperStream.set_ReadTimeout(Int32 value) 的 stub</summary>
        </member>
        <member name="M:Aliyun.OSS.Common.Internal.Fakes.StubHashStream`1.Seek(System.Int64,System.IO.SeekOrigin)">
            <summary>设置 HashStream.Seek(Int64 offset, SeekOrigin origin) 的 存根</summary>
        </member>
        <member name="F:Aliyun.OSS.Common.Internal.Fakes.StubHashStream`1.SeekInt64SeekOrigin">
            <summary>设置 HashStream.Seek(Int64 offset, SeekOrigin origin) 的 stub</summary>
        </member>
        <member name="M:Aliyun.OSS.Common.Internal.Fakes.StubHashStream`1.SetLength(System.Int64)">
            <summary>设置 WrapperStream.SetLength(Int64 value) 的 存根</summary>
        </member>
        <member name="F:Aliyun.OSS.Common.Internal.Fakes.StubHashStream`1.SetLengthInt64">
            <summary>设置 WrapperStream.SetLength(Int64 value) 的 stub</summary>
        </member>
        <member name="M:Aliyun.OSS.Common.Internal.Fakes.StubHashStream`1.Write(System.Byte[],System.Int32,System.Int32)">
            <summary>设置 WrapperStream.Write(Byte[] buffer, Int32 offset, Int32 count) 的 存根</summary>
        </member>
        <member name="M:Aliyun.OSS.Common.Internal.Fakes.StubHashStream`1.WriteAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)">
            <summary>设置 Stream.WriteAsync(Byte[] buffer, Int32 offset, Int32 count, CancellationToken cancellationToken) 的 存根</summary>
        </member>
        <member name="F:Aliyun.OSS.Common.Internal.Fakes.StubHashStream`1.WriteAsyncByteArrayInt32Int32CancellationToken">
            <summary>设置 Stream.WriteAsync(Byte[] buffer, Int32 offset, Int32 count, CancellationToken cancellationToken) 的 stub</summary>
        </member>
        <member name="M:Aliyun.OSS.Common.Internal.Fakes.StubHashStream`1.WriteByte(System.Byte)">
            <summary>设置 Stream.WriteByte(Byte value) 的 存根</summary>
        </member>
        <member name="F:Aliyun.OSS.Common.Internal.Fakes.StubHashStream`1.WriteByteArrayInt32Int32">
            <summary>设置 WrapperStream.Write(Byte[] buffer, Int32 offset, Int32 count) 的 stub</summary>
        </member>
        <member name="F:Aliyun.OSS.Common.Internal.Fakes.StubHashStream`1.WriteByteByte">
            <summary>设置 Stream.WriteByte(Byte value) 的 stub</summary>
        </member>
        <member name="F:Aliyun.OSS.Common.Internal.Fakes.StubHashStream`1.WriteTimeoutGet">
            <summary>设置 WrapperStream.get_WriteTimeout() 的 stub</summary>
        </member>
        <member name="F:Aliyun.OSS.Common.Internal.Fakes.StubHashStream`1.WriteTimeoutSetInt32">
            <summary>设置 WrapperStream.set_WriteTimeout(Int32 value) 的 stub</summary>
        </member>
        <member name="P:Aliyun.OSS.Common.Internal.Fakes.StubHashStream`1.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Aliyun.OSS.Common.Internal.Fakes.StubHashStream`1.CanRead">
            <summary>设置 WrapperStream.get_CanRead() 的 stub</summary>
        </member>
        <member name="P:Aliyun.OSS.Common.Internal.Fakes.StubHashStream`1.CanSeek">
            <summary>设置 HashStream.get_CanSeek() 的 stub</summary>
        </member>
        <member name="P:Aliyun.OSS.Common.Internal.Fakes.StubHashStream`1.CanTimeout">
            <summary>设置 Stream.get_CanTimeout() 的 stub</summary>
        </member>
        <member name="P:Aliyun.OSS.Common.Internal.Fakes.StubHashStream`1.CanWrite">
            <summary>设置 WrapperStream.get_CanWrite() 的 stub</summary>
        </member>
        <member name="P:Aliyun.OSS.Common.Internal.Fakes.StubHashStream`1.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Aliyun.OSS.Common.Internal.Fakes.StubHashStream`1.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="P:Aliyun.OSS.Common.Internal.Fakes.StubHashStream`1.Length">
            <summary>设置 HashStream.get_Length() 的 stub</summary>
        </member>
        <member name="P:Aliyun.OSS.Common.Internal.Fakes.StubHashStream`1.Position">
            <summary>设置 HashStream.set_Position(Int64 value) 的 stub</summary>
        </member>
        <member name="P:Aliyun.OSS.Common.Internal.Fakes.StubHashStream`1.ReadTimeout">
            <summary>设置 WrapperStream.get_ReadTimeout() 的 stub</summary>
        </member>
        <member name="P:Aliyun.OSS.Common.Internal.Fakes.StubHashStream`1.WriteTimeout">
            <summary>设置 WrapperStream.get_WriteTimeout() 的 stub</summary>
        </member>
        <member name="T:Aliyun.OSS.Common.Internal.Fakes.StubHashingWrapper">
            <summary>Aliyun.OSS.Common.Internal.HashingWrapper 的存根类型</summary>
        </member>
        <member name="M:Aliyun.OSS.Common.Internal.Fakes.StubHashingWrapper.#ctor(System.String)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Aliyun.OSS.Common.Internal.Fakes.StubHashingWrapper.Dispose(System.Boolean)">
            <summary>设置 HashingWrapper.Dispose(Boolean disposing) 的 存根</summary>
        </member>
        <member name="F:Aliyun.OSS.Common.Internal.Fakes.StubHashingWrapper.DisposeBoolean">
            <summary>设置 HashingWrapper.Dispose(Boolean disposing) 的 stub</summary>
        </member>
        <member name="M:Aliyun.OSS.Common.Internal.Fakes.StubHashingWrapper.InitializeStub">
            <summary>初始化 type StubHashingWrapper 的新实例</summary>
        </member>
        <member name="P:Aliyun.OSS.Common.Internal.Fakes.StubHashingWrapper.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Aliyun.OSS.Common.Internal.Fakes.StubHashingWrapper.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Aliyun.OSS.Common.Internal.Fakes.StubHashingWrapper.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Aliyun.OSS.Common.Internal.Fakes.StubHashingWrapperMD5">
            <summary>Aliyun.OSS.Common.Internal.HashingWrapperMD5 的存根类型</summary>
        </member>
        <member name="M:Aliyun.OSS.Common.Internal.Fakes.StubHashingWrapperMD5.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Aliyun.OSS.Common.Internal.Fakes.StubHashingWrapperMD5.Dispose(System.Boolean)">
            <summary>设置 HashingWrapper.Dispose(Boolean disposing) 的 存根</summary>
        </member>
        <member name="F:Aliyun.OSS.Common.Internal.Fakes.StubHashingWrapperMD5.DisposeBoolean">
            <summary>设置 HashingWrapper.Dispose(Boolean disposing) 的 stub</summary>
        </member>
        <member name="M:Aliyun.OSS.Common.Internal.Fakes.StubHashingWrapperMD5.InitializeStub">
            <summary>初始化 type StubHashingWrapperMD5 的新实例</summary>
        </member>
        <member name="P:Aliyun.OSS.Common.Internal.Fakes.StubHashingWrapperMD5.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Aliyun.OSS.Common.Internal.Fakes.StubHashingWrapperMD5.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Aliyun.OSS.Common.Internal.Fakes.StubHashingWrapperMD5.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Aliyun.OSS.Common.Internal.Fakes.StubIHashingWrapper">
            <summary>Aliyun.OSS.Common.Internal.IHashingWrapper 的存根类型</summary>
        </member>
        <member name="M:Aliyun.OSS.Common.Internal.Fakes.StubIHashingWrapper.#ctor">
            <summary>初始化 type StubIHashingWrapper 的新实例</summary>
        </member>
        <member name="M:Aliyun.OSS.Common.Internal.Fakes.StubIHashingWrapper.aoss::Aliyun#OSS#Common#Internal#IHashingWrapper#AppendBlock(System.Byte[])">
            <summary>设置 IHashingWrapper.AppendBlock(Byte[] buffer) 的 存根</summary>
        </member>
        <member name="M:Aliyun.OSS.Common.Internal.Fakes.StubIHashingWrapper.aoss::Aliyun#OSS#Common#Internal#IHashingWrapper#AppendBlock(System.Byte[],System.Int32,System.Int32)">
            <summary>设置 IHashingWrapper.AppendBlock(Byte[] buffer, Int32 offset, Int32 count) 的 存根</summary>
        </member>
        <member name="M:Aliyun.OSS.Common.Internal.Fakes.StubIHashingWrapper.aoss::Aliyun#OSS#Common#Internal#IHashingWrapper#AppendLastBlock(System.Byte[])">
            <summary>设置 IHashingWrapper.AppendLastBlock(Byte[] buffer) 的 存根</summary>
        </member>
        <member name="M:Aliyun.OSS.Common.Internal.Fakes.StubIHashingWrapper.aoss::Aliyun#OSS#Common#Internal#IHashingWrapper#AppendLastBlock(System.Byte[],System.Int32,System.Int32)">
            <summary>设置 IHashingWrapper.AppendLastBlock(Byte[] buffer, Int32 offset, Int32 count) 的 存根</summary>
        </member>
        <member name="M:Aliyun.OSS.Common.Internal.Fakes.StubIHashingWrapper.aoss::Aliyun#OSS#Common#Internal#IHashingWrapper#Clear">
            <summary>设置 IHashingWrapper.Clear() 的 存根</summary>
        </member>
        <member name="M:Aliyun.OSS.Common.Internal.Fakes.StubIHashingWrapper.aoss::Aliyun#OSS#Common#Internal#IHashingWrapper#ComputeHash(System.IO.Stream)">
            <summary>设置 IHashingWrapper.ComputeHash(Stream stream) 的 存根</summary>
        </member>
        <member name="M:Aliyun.OSS.Common.Internal.Fakes.StubIHashingWrapper.aoss::Aliyun#OSS#Common#Internal#IHashingWrapper#ComputeHash(System.Byte[])">
            <summary>设置 IHashingWrapper.ComputeHash(Byte[] buffer) 的 存根</summary>
        </member>
        <member name="F:Aliyun.OSS.Common.Internal.Fakes.StubIHashingWrapper.AppendBlockByteArray">
            <summary>设置 IHashingWrapper.AppendBlock(Byte[] buffer) 的 stub</summary>
        </member>
        <member name="F:Aliyun.OSS.Common.Internal.Fakes.StubIHashingWrapper.AppendBlockByteArrayInt32Int32">
            <summary>设置 IHashingWrapper.AppendBlock(Byte[] buffer, Int32 offset, Int32 count) 的 stub</summary>
        </member>
        <member name="F:Aliyun.OSS.Common.Internal.Fakes.StubIHashingWrapper.AppendLastBlockByteArray">
            <summary>设置 IHashingWrapper.AppendLastBlock(Byte[] buffer) 的 stub</summary>
        </member>
        <member name="F:Aliyun.OSS.Common.Internal.Fakes.StubIHashingWrapper.AppendLastBlockByteArrayInt32Int32">
            <summary>设置 IHashingWrapper.AppendLastBlock(Byte[] buffer, Int32 offset, Int32 count) 的 stub</summary>
        </member>
        <member name="F:Aliyun.OSS.Common.Internal.Fakes.StubIHashingWrapper.Clear">
            <summary>设置 IHashingWrapper.Clear() 的 stub</summary>
        </member>
        <member name="F:Aliyun.OSS.Common.Internal.Fakes.StubIHashingWrapper.ComputeHashByteArray">
            <summary>设置 IHashingWrapper.ComputeHash(Byte[] buffer) 的 stub</summary>
        </member>
        <member name="F:Aliyun.OSS.Common.Internal.Fakes.StubIHashingWrapper.ComputeHashStream">
            <summary>设置 IHashingWrapper.ComputeHash(Stream stream) 的 stub</summary>
        </member>
        <member name="F:Aliyun.OSS.Common.Internal.Fakes.StubIHashingWrapper.Dispose">
            <summary>设置 IDisposable.Dispose() 的 stub</summary>
        </member>
        <member name="M:Aliyun.OSS.Common.Internal.Fakes.StubIHashingWrapper.global::System#IDisposable#Dispose">
            <summary>设置 IDisposable.Dispose() 的 存根</summary>
        </member>
        <member name="T:Aliyun.OSS.Common.Internal.Fakes.StubMD5Stream">
            <summary>Aliyun.OSS.Common.Internal.MD5Stream 的存根类型</summary>
        </member>
        <member name="M:Aliyun.OSS.Common.Internal.Fakes.StubMD5Stream.#ctor(System.IO.Stream,System.Byte[],System.Int64)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Aliyun.OSS.Common.Internal.Fakes.StubMD5Stream.AttachBackingFieldToReadTimeout">
            <summary>附加委托以将 StubMD5Stream.ReadTimeout 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:Aliyun.OSS.Common.Internal.Fakes.StubMD5Stream.AttachBackingFieldToWriteTimeout">
            <summary>附加委托以将 StubMD5Stream.WriteTimeout 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:Aliyun.OSS.Common.Internal.Fakes.StubMD5Stream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
            <summary>设置 Stream.BeginRead(Byte[] buffer, Int32 offset, Int32 count, AsyncCallback callback, Object state) 的 存根</summary>
        </member>
        <member name="F:Aliyun.OSS.Common.Internal.Fakes.StubMD5Stream.BeginReadByteArrayInt32Int32AsyncCallbackObject">
            <summary>设置 Stream.BeginRead(Byte[] buffer, Int32 offset, Int32 count, AsyncCallback callback, Object state) 的 stub</summary>
        </member>
        <member name="M:Aliyun.OSS.Common.Internal.Fakes.StubMD5Stream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
            <summary>设置 Stream.BeginWrite(Byte[] buffer, Int32 offset, Int32 count, AsyncCallback callback, Object state) 的 存根</summary>
        </member>
        <member name="F:Aliyun.OSS.Common.Internal.Fakes.StubMD5Stream.BeginWriteByteArrayInt32Int32AsyncCallbackObject">
            <summary>设置 Stream.BeginWrite(Byte[] buffer, Int32 offset, Int32 count, AsyncCallback callback, Object state) 的 stub</summary>
        </member>
        <member name="M:Aliyun.OSS.Common.Internal.Fakes.StubMD5Stream.CalculateHash">
            <summary>设置 HashStream.CalculateHash() 的 存根</summary>
        </member>
        <member name="F:Aliyun.OSS.Common.Internal.Fakes.StubMD5Stream.CalculateHash01">
            <summary>设置 HashStream.CalculateHash() 的 stub</summary>
        </member>
        <member name="F:Aliyun.OSS.Common.Internal.Fakes.StubMD5Stream.CanReadGet">
            <summary>设置 WrapperStream.get_CanRead() 的 stub</summary>
        </member>
        <member name="F:Aliyun.OSS.Common.Internal.Fakes.StubMD5Stream.CanSeekGet">
            <summary>设置 HashStream.get_CanSeek() 的 stub</summary>
        </member>
        <member name="F:Aliyun.OSS.Common.Internal.Fakes.StubMD5Stream.CanTimeoutGet">
            <summary>设置 Stream.get_CanTimeout() 的 stub</summary>
        </member>
        <member name="F:Aliyun.OSS.Common.Internal.Fakes.StubMD5Stream.CanWriteGet">
            <summary>设置 WrapperStream.get_CanWrite() 的 stub</summary>
        </member>
        <member name="M:Aliyun.OSS.Common.Internal.Fakes.StubMD5Stream.Close">
            <summary>设置 HashStream.Close() 的 存根</summary>
        </member>
        <member name="F:Aliyun.OSS.Common.Internal.Fakes.StubMD5Stream.Close01">
            <summary>设置 HashStream.Close() 的 stub</summary>
        </member>
        <member name="M:Aliyun.OSS.Common.Internal.Fakes.StubMD5Stream.CreateWaitHandle">
            <summary>设置 Stream.CreateWaitHandle() 的 存根</summary>
        </member>
        <member name="F:Aliyun.OSS.Common.Internal.Fakes.StubMD5Stream.CreateWaitHandle01">
            <summary>设置 Stream.CreateWaitHandle() 的 stub</summary>
        </member>
        <member name="M:Aliyun.OSS.Common.Internal.Fakes.StubMD5Stream.Dispose(System.Boolean)">
            <summary>设置 HashStream.Dispose(Boolean disposing) 的 存根</summary>
        </member>
        <member name="F:Aliyun.OSS.Common.Internal.Fakes.StubMD5Stream.DisposeBoolean">
            <summary>设置 HashStream.Dispose(Boolean disposing) 的 stub</summary>
        </member>
        <member name="M:Aliyun.OSS.Common.Internal.Fakes.StubMD5Stream.EndRead(System.IAsyncResult)">
            <summary>设置 Stream.EndRead(IAsyncResult asyncResult) 的 存根</summary>
        </member>
        <member name="F:Aliyun.OSS.Common.Internal.Fakes.StubMD5Stream.EndReadIAsyncResult">
            <summary>设置 Stream.EndRead(IAsyncResult asyncResult) 的 stub</summary>
        </member>
        <member name="M:Aliyun.OSS.Common.Internal.Fakes.StubMD5Stream.EndWrite(System.IAsyncResult)">
            <summary>设置 Stream.EndWrite(IAsyncResult asyncResult) 的 存根</summary>
        </member>
        <member name="F:Aliyun.OSS.Common.Internal.Fakes.StubMD5Stream.EndWriteIAsyncResult">
            <summary>设置 Stream.EndWrite(IAsyncResult asyncResult) 的 stub</summary>
        </member>
        <member name="M:Aliyun.OSS.Common.Internal.Fakes.StubMD5Stream.Flush">
            <summary>设置 WrapperStream.Flush() 的 存根</summary>
        </member>
        <member name="F:Aliyun.OSS.Common.Internal.Fakes.StubMD5Stream.Flush01">
            <summary>设置 WrapperStream.Flush() 的 stub</summary>
        </member>
        <member name="M:Aliyun.OSS.Common.Internal.Fakes.StubMD5Stream.InitializeStub">
            <summary>初始化 type StubMD5Stream 的新实例</summary>
        </member>
        <member name="F:Aliyun.OSS.Common.Internal.Fakes.StubMD5Stream.LengthGet">
            <summary>设置 HashStream.get_Length() 的 stub</summary>
        </member>
        <member name="M:Aliyun.OSS.Common.Internal.Fakes.StubMD5Stream.ObjectInvariant">
            <summary>设置 Stream.ObjectInvariant() 的 存根</summary>
        </member>
        <member name="F:Aliyun.OSS.Common.Internal.Fakes.StubMD5Stream.ObjectInvariant01">
            <summary>设置 Stream.ObjectInvariant() 的 stub</summary>
        </member>
        <member name="F:Aliyun.OSS.Common.Internal.Fakes.StubMD5Stream.PositionSetInt64">
            <summary>设置 HashStream.set_Position(Int64 value) 的 stub</summary>
        </member>
        <member name="M:Aliyun.OSS.Common.Internal.Fakes.StubMD5Stream.Read(System.Byte[],System.Int32,System.Int32)">
            <summary>设置 HashStream.Read(Byte[] buffer, Int32 offset, Int32 count) 的 存根</summary>
        </member>
        <member name="M:Aliyun.OSS.Common.Internal.Fakes.StubMD5Stream.ReadByte">
            <summary>设置 Stream.ReadByte() 的 存根</summary>
        </member>
        <member name="F:Aliyun.OSS.Common.Internal.Fakes.StubMD5Stream.ReadByte01">
            <summary>设置 Stream.ReadByte() 的 stub</summary>
        </member>
        <member name="F:Aliyun.OSS.Common.Internal.Fakes.StubMD5Stream.ReadByteArrayInt32Int32">
            <summary>设置 HashStream.Read(Byte[] buffer, Int32 offset, Int32 count) 的 stub</summary>
        </member>
        <member name="F:Aliyun.OSS.Common.Internal.Fakes.StubMD5Stream.ReadTimeoutGet">
            <summary>设置 WrapperStream.get_ReadTimeout() 的 stub</summary>
        </member>
        <member name="F:Aliyun.OSS.Common.Internal.Fakes.StubMD5Stream.ReadTimeoutSetInt32">
            <summary>设置 WrapperStream.set_ReadTimeout(Int32 value) 的 stub</summary>
        </member>
        <member name="M:Aliyun.OSS.Common.Internal.Fakes.StubMD5Stream.Seek(System.Int64,System.IO.SeekOrigin)">
            <summary>设置 HashStream.Seek(Int64 offset, SeekOrigin origin) 的 存根</summary>
        </member>
        <member name="F:Aliyun.OSS.Common.Internal.Fakes.StubMD5Stream.SeekInt64SeekOrigin">
            <summary>设置 HashStream.Seek(Int64 offset, SeekOrigin origin) 的 stub</summary>
        </member>
        <member name="M:Aliyun.OSS.Common.Internal.Fakes.StubMD5Stream.SetLength(System.Int64)">
            <summary>设置 WrapperStream.SetLength(Int64 value) 的 存根</summary>
        </member>
        <member name="F:Aliyun.OSS.Common.Internal.Fakes.StubMD5Stream.SetLengthInt64">
            <summary>设置 WrapperStream.SetLength(Int64 value) 的 stub</summary>
        </member>
        <member name="M:Aliyun.OSS.Common.Internal.Fakes.StubMD5Stream.Write(System.Byte[],System.Int32,System.Int32)">
            <summary>设置 WrapperStream.Write(Byte[] buffer, Int32 offset, Int32 count) 的 存根</summary>
        </member>
        <member name="M:Aliyun.OSS.Common.Internal.Fakes.StubMD5Stream.WriteByte(System.Byte)">
            <summary>设置 Stream.WriteByte(Byte value) 的 存根</summary>
        </member>
        <member name="F:Aliyun.OSS.Common.Internal.Fakes.StubMD5Stream.WriteByteArrayInt32Int32">
            <summary>设置 WrapperStream.Write(Byte[] buffer, Int32 offset, Int32 count) 的 stub</summary>
        </member>
        <member name="F:Aliyun.OSS.Common.Internal.Fakes.StubMD5Stream.WriteByteByte">
            <summary>设置 Stream.WriteByte(Byte value) 的 stub</summary>
        </member>
        <member name="F:Aliyun.OSS.Common.Internal.Fakes.StubMD5Stream.WriteTimeoutGet">
            <summary>设置 WrapperStream.get_WriteTimeout() 的 stub</summary>
        </member>
        <member name="F:Aliyun.OSS.Common.Internal.Fakes.StubMD5Stream.WriteTimeoutSetInt32">
            <summary>设置 WrapperStream.set_WriteTimeout(Int32 value) 的 stub</summary>
        </member>
        <member name="P:Aliyun.OSS.Common.Internal.Fakes.StubMD5Stream.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Aliyun.OSS.Common.Internal.Fakes.StubMD5Stream.CanRead">
            <summary>设置 WrapperStream.get_CanRead() 的 stub</summary>
        </member>
        <member name="P:Aliyun.OSS.Common.Internal.Fakes.StubMD5Stream.CanSeek">
            <summary>设置 HashStream.get_CanSeek() 的 stub</summary>
        </member>
        <member name="P:Aliyun.OSS.Common.Internal.Fakes.StubMD5Stream.CanTimeout">
            <summary>设置 Stream.get_CanTimeout() 的 stub</summary>
        </member>
        <member name="P:Aliyun.OSS.Common.Internal.Fakes.StubMD5Stream.CanWrite">
            <summary>设置 WrapperStream.get_CanWrite() 的 stub</summary>
        </member>
        <member name="P:Aliyun.OSS.Common.Internal.Fakes.StubMD5Stream.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Aliyun.OSS.Common.Internal.Fakes.StubMD5Stream.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="P:Aliyun.OSS.Common.Internal.Fakes.StubMD5Stream.Length">
            <summary>设置 HashStream.get_Length() 的 stub</summary>
        </member>
        <member name="P:Aliyun.OSS.Common.Internal.Fakes.StubMD5Stream.Position">
            <summary>设置 HashStream.set_Position(Int64 value) 的 stub</summary>
        </member>
        <member name="P:Aliyun.OSS.Common.Internal.Fakes.StubMD5Stream.ReadTimeout">
            <summary>设置 WrapperStream.get_ReadTimeout() 的 stub</summary>
        </member>
        <member name="P:Aliyun.OSS.Common.Internal.Fakes.StubMD5Stream.WriteTimeout">
            <summary>设置 WrapperStream.get_WriteTimeout() 的 stub</summary>
        </member>
        <member name="T:Aliyun.OSS.Common.Internal.Fakes.StubPartialWrapperStream">
            <summary>Aliyun.OSS.Common.Internal.PartialWrapperStream 的存根类型</summary>
        </member>
        <member name="M:Aliyun.OSS.Common.Internal.Fakes.StubPartialWrapperStream.#ctor(System.IO.Stream,System.Int64)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Aliyun.OSS.Common.Internal.Fakes.StubPartialWrapperStream.AttachBackingFieldToPosition">
            <summary>附加委托以将 StubPartialWrapperStream.Position 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:Aliyun.OSS.Common.Internal.Fakes.StubPartialWrapperStream.AttachBackingFieldToReadTimeout">
            <summary>附加委托以将 StubPartialWrapperStream.ReadTimeout 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:Aliyun.OSS.Common.Internal.Fakes.StubPartialWrapperStream.AttachBackingFieldToWriteTimeout">
            <summary>附加委托以将 StubPartialWrapperStream.WriteTimeout 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:Aliyun.OSS.Common.Internal.Fakes.StubPartialWrapperStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
            <summary>设置 PartialWrapperStream.BeginRead(Byte[] buffer, Int32 offset, Int32 count, AsyncCallback callback, Object state) 的 存根</summary>
        </member>
        <member name="F:Aliyun.OSS.Common.Internal.Fakes.StubPartialWrapperStream.BeginReadByteArrayInt32Int32AsyncCallbackObject">
            <summary>设置 PartialWrapperStream.BeginRead(Byte[] buffer, Int32 offset, Int32 count, AsyncCallback callback, Object state) 的 stub</summary>
        </member>
        <member name="M:Aliyun.OSS.Common.Internal.Fakes.StubPartialWrapperStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
            <summary>设置 PartialWrapperStream.BeginWrite(Byte[] buffer, Int32 offset, Int32 count, AsyncCallback callback, Object state) 的 存根</summary>
        </member>
        <member name="F:Aliyun.OSS.Common.Internal.Fakes.StubPartialWrapperStream.BeginWriteByteArrayInt32Int32AsyncCallbackObject">
            <summary>设置 PartialWrapperStream.BeginWrite(Byte[] buffer, Int32 offset, Int32 count, AsyncCallback callback, Object state) 的 stub</summary>
        </member>
        <member name="F:Aliyun.OSS.Common.Internal.Fakes.StubPartialWrapperStream.CanReadGet">
            <summary>设置 WrapperStream.get_CanRead() 的 stub</summary>
        </member>
        <member name="F:Aliyun.OSS.Common.Internal.Fakes.StubPartialWrapperStream.CanSeekGet">
            <summary>设置 WrapperStream.get_CanSeek() 的 stub</summary>
        </member>
        <member name="F:Aliyun.OSS.Common.Internal.Fakes.StubPartialWrapperStream.CanTimeoutGet">
            <summary>设置 Stream.get_CanTimeout() 的 stub</summary>
        </member>
        <member name="F:Aliyun.OSS.Common.Internal.Fakes.StubPartialWrapperStream.CanWriteGet">
            <summary>设置 WrapperStream.get_CanWrite() 的 stub</summary>
        </member>
        <member name="M:Aliyun.OSS.Common.Internal.Fakes.StubPartialWrapperStream.Close">
            <summary>设置 WrapperStream.Close() 的 存根</summary>
        </member>
        <member name="F:Aliyun.OSS.Common.Internal.Fakes.StubPartialWrapperStream.Close01">
            <summary>设置 WrapperStream.Close() 的 stub</summary>
        </member>
        <member name="M:Aliyun.OSS.Common.Internal.Fakes.StubPartialWrapperStream.CreateWaitHandle">
            <summary>设置 Stream.CreateWaitHandle() 的 存根</summary>
        </member>
        <member name="F:Aliyun.OSS.Common.Internal.Fakes.StubPartialWrapperStream.CreateWaitHandle01">
            <summary>设置 Stream.CreateWaitHandle() 的 stub</summary>
        </member>
        <member name="M:Aliyun.OSS.Common.Internal.Fakes.StubPartialWrapperStream.Dispose(System.Boolean)">
            <summary>设置 Stream.Dispose(Boolean disposing) 的 存根</summary>
        </member>
        <member name="F:Aliyun.OSS.Common.Internal.Fakes.StubPartialWrapperStream.DisposeBoolean">
            <summary>设置 Stream.Dispose(Boolean disposing) 的 stub</summary>
        </member>
        <member name="M:Aliyun.OSS.Common.Internal.Fakes.StubPartialWrapperStream.EndRead(System.IAsyncResult)">
            <summary>设置 PartialWrapperStream.EndRead(IAsyncResult asyncResult) 的 存根</summary>
        </member>
        <member name="F:Aliyun.OSS.Common.Internal.Fakes.StubPartialWrapperStream.EndReadIAsyncResult">
            <summary>设置 PartialWrapperStream.EndRead(IAsyncResult asyncResult) 的 stub</summary>
        </member>
        <member name="M:Aliyun.OSS.Common.Internal.Fakes.StubPartialWrapperStream.EndWrite(System.IAsyncResult)">
            <summary>设置 PartialWrapperStream.EndWrite(IAsyncResult asyncResult) 的 存根</summary>
        </member>
        <member name="F:Aliyun.OSS.Common.Internal.Fakes.StubPartialWrapperStream.EndWriteIAsyncResult">
            <summary>设置 PartialWrapperStream.EndWrite(IAsyncResult asyncResult) 的 stub</summary>
        </member>
        <member name="M:Aliyun.OSS.Common.Internal.Fakes.StubPartialWrapperStream.Flush">
            <summary>设置 WrapperStream.Flush() 的 存根</summary>
        </member>
        <member name="F:Aliyun.OSS.Common.Internal.Fakes.StubPartialWrapperStream.Flush01">
            <summary>设置 WrapperStream.Flush() 的 stub</summary>
        </member>
        <member name="M:Aliyun.OSS.Common.Internal.Fakes.StubPartialWrapperStream.InitializeStub">
            <summary>初始化 type StubPartialWrapperStream 的新实例</summary>
        </member>
        <member name="F:Aliyun.OSS.Common.Internal.Fakes.StubPartialWrapperStream.LengthGet">
            <summary>设置 PartialWrapperStream.get_Length() 的 stub</summary>
        </member>
        <member name="M:Aliyun.OSS.Common.Internal.Fakes.StubPartialWrapperStream.ObjectInvariant">
            <summary>设置 Stream.ObjectInvariant() 的 存根</summary>
        </member>
        <member name="F:Aliyun.OSS.Common.Internal.Fakes.StubPartialWrapperStream.ObjectInvariant01">
            <summary>设置 Stream.ObjectInvariant() 的 stub</summary>
        </member>
        <member name="F:Aliyun.OSS.Common.Internal.Fakes.StubPartialWrapperStream.PositionGet">
            <summary>设置 PartialWrapperStream.get_Position() 的 stub</summary>
        </member>
        <member name="F:Aliyun.OSS.Common.Internal.Fakes.StubPartialWrapperStream.PositionSetInt64">
            <summary>设置 PartialWrapperStream.set_Position(Int64 value) 的 stub</summary>
        </member>
        <member name="M:Aliyun.OSS.Common.Internal.Fakes.StubPartialWrapperStream.Read(System.Byte[],System.Int32,System.Int32)">
            <summary>设置 PartialWrapperStream.Read(Byte[] buffer, Int32 offset, Int32 count) 的 存根</summary>
        </member>
        <member name="M:Aliyun.OSS.Common.Internal.Fakes.StubPartialWrapperStream.ReadByte">
            <summary>设置 Stream.ReadByte() 的 存根</summary>
        </member>
        <member name="F:Aliyun.OSS.Common.Internal.Fakes.StubPartialWrapperStream.ReadByte01">
            <summary>设置 Stream.ReadByte() 的 stub</summary>
        </member>
        <member name="F:Aliyun.OSS.Common.Internal.Fakes.StubPartialWrapperStream.ReadByteArrayInt32Int32">
            <summary>设置 PartialWrapperStream.Read(Byte[] buffer, Int32 offset, Int32 count) 的 stub</summary>
        </member>
        <member name="F:Aliyun.OSS.Common.Internal.Fakes.StubPartialWrapperStream.ReadTimeoutGet">
            <summary>设置 WrapperStream.get_ReadTimeout() 的 stub</summary>
        </member>
        <member name="F:Aliyun.OSS.Common.Internal.Fakes.StubPartialWrapperStream.ReadTimeoutSetInt32">
            <summary>设置 WrapperStream.set_ReadTimeout(Int32 value) 的 stub</summary>
        </member>
        <member name="M:Aliyun.OSS.Common.Internal.Fakes.StubPartialWrapperStream.Seek(System.Int64,System.IO.SeekOrigin)">
            <summary>设置 PartialWrapperStream.Seek(Int64 offset, SeekOrigin origin) 的 存根</summary>
        </member>
        <member name="F:Aliyun.OSS.Common.Internal.Fakes.StubPartialWrapperStream.SeekInt64SeekOrigin">
            <summary>设置 PartialWrapperStream.Seek(Int64 offset, SeekOrigin origin) 的 stub</summary>
        </member>
        <member name="M:Aliyun.OSS.Common.Internal.Fakes.StubPartialWrapperStream.SetLength(System.Int64)">
            <summary>设置 PartialWrapperStream.SetLength(Int64 value) 的 存根</summary>
        </member>
        <member name="F:Aliyun.OSS.Common.Internal.Fakes.StubPartialWrapperStream.SetLengthInt64">
            <summary>设置 PartialWrapperStream.SetLength(Int64 value) 的 stub</summary>
        </member>
        <member name="M:Aliyun.OSS.Common.Internal.Fakes.StubPartialWrapperStream.Write(System.Byte[],System.Int32,System.Int32)">
            <summary>设置 PartialWrapperStream.Write(Byte[] buffer, Int32 offset, Int32 count) 的 存根</summary>
        </member>
        <member name="M:Aliyun.OSS.Common.Internal.Fakes.StubPartialWrapperStream.WriteByte(System.Byte)">
            <summary>设置 PartialWrapperStream.WriteByte(Byte value) 的 存根</summary>
        </member>
        <member name="F:Aliyun.OSS.Common.Internal.Fakes.StubPartialWrapperStream.WriteByteArrayInt32Int32">
            <summary>设置 PartialWrapperStream.Write(Byte[] buffer, Int32 offset, Int32 count) 的 stub</summary>
        </member>
        <member name="F:Aliyun.OSS.Common.Internal.Fakes.StubPartialWrapperStream.WriteByteByte">
            <summary>设置 PartialWrapperStream.WriteByte(Byte value) 的 stub</summary>
        </member>
        <member name="F:Aliyun.OSS.Common.Internal.Fakes.StubPartialWrapperStream.WriteTimeoutGet">
            <summary>设置 WrapperStream.get_WriteTimeout() 的 stub</summary>
        </member>
        <member name="F:Aliyun.OSS.Common.Internal.Fakes.StubPartialWrapperStream.WriteTimeoutSetInt32">
            <summary>设置 WrapperStream.set_WriteTimeout(Int32 value) 的 stub</summary>
        </member>
        <member name="P:Aliyun.OSS.Common.Internal.Fakes.StubPartialWrapperStream.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Aliyun.OSS.Common.Internal.Fakes.StubPartialWrapperStream.CanRead">
            <summary>设置 WrapperStream.get_CanRead() 的 stub</summary>
        </member>
        <member name="P:Aliyun.OSS.Common.Internal.Fakes.StubPartialWrapperStream.CanSeek">
            <summary>设置 WrapperStream.get_CanSeek() 的 stub</summary>
        </member>
        <member name="P:Aliyun.OSS.Common.Internal.Fakes.StubPartialWrapperStream.CanTimeout">
            <summary>设置 Stream.get_CanTimeout() 的 stub</summary>
        </member>
        <member name="P:Aliyun.OSS.Common.Internal.Fakes.StubPartialWrapperStream.CanWrite">
            <summary>设置 WrapperStream.get_CanWrite() 的 stub</summary>
        </member>
        <member name="P:Aliyun.OSS.Common.Internal.Fakes.StubPartialWrapperStream.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Aliyun.OSS.Common.Internal.Fakes.StubPartialWrapperStream.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="P:Aliyun.OSS.Common.Internal.Fakes.StubPartialWrapperStream.Length">
            <summary>设置 PartialWrapperStream.get_Length() 的 stub</summary>
        </member>
        <member name="P:Aliyun.OSS.Common.Internal.Fakes.StubPartialWrapperStream.Position">
            <summary>设置 PartialWrapperStream.get_Position() 的 stub</summary>
        </member>
        <member name="P:Aliyun.OSS.Common.Internal.Fakes.StubPartialWrapperStream.ReadTimeout">
            <summary>设置 WrapperStream.get_ReadTimeout() 的 stub</summary>
        </member>
        <member name="P:Aliyun.OSS.Common.Internal.Fakes.StubPartialWrapperStream.WriteTimeout">
            <summary>设置 WrapperStream.get_WriteTimeout() 的 stub</summary>
        </member>
        <member name="T:Aliyun.OSS.Common.Internal.Fakes.StubWrapperStream">
            <summary>Aliyun.OSS.Common.Internal.WrapperStream 的存根类型</summary>
        </member>
        <member name="M:Aliyun.OSS.Common.Internal.Fakes.StubWrapperStream.#ctor(System.IO.Stream)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Aliyun.OSS.Common.Internal.Fakes.StubWrapperStream.AttachBackingFieldToPosition">
            <summary>附加委托以将 StubWrapperStream.Position 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:Aliyun.OSS.Common.Internal.Fakes.StubWrapperStream.AttachBackingFieldToReadTimeout">
            <summary>附加委托以将 StubWrapperStream.ReadTimeout 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:Aliyun.OSS.Common.Internal.Fakes.StubWrapperStream.AttachBackingFieldToWriteTimeout">
            <summary>附加委托以将 StubWrapperStream.WriteTimeout 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:Aliyun.OSS.Common.Internal.Fakes.StubWrapperStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
            <summary>设置 Stream.BeginRead(Byte[] buffer, Int32 offset, Int32 count, AsyncCallback callback, Object state) 的 存根</summary>
        </member>
        <member name="F:Aliyun.OSS.Common.Internal.Fakes.StubWrapperStream.BeginReadByteArrayInt32Int32AsyncCallbackObject">
            <summary>设置 Stream.BeginRead(Byte[] buffer, Int32 offset, Int32 count, AsyncCallback callback, Object state) 的 stub</summary>
        </member>
        <member name="M:Aliyun.OSS.Common.Internal.Fakes.StubWrapperStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
            <summary>设置 Stream.BeginWrite(Byte[] buffer, Int32 offset, Int32 count, AsyncCallback callback, Object state) 的 存根</summary>
        </member>
        <member name="F:Aliyun.OSS.Common.Internal.Fakes.StubWrapperStream.BeginWriteByteArrayInt32Int32AsyncCallbackObject">
            <summary>设置 Stream.BeginWrite(Byte[] buffer, Int32 offset, Int32 count, AsyncCallback callback, Object state) 的 stub</summary>
        </member>
        <member name="F:Aliyun.OSS.Common.Internal.Fakes.StubWrapperStream.CanReadGet">
            <summary>设置 WrapperStream.get_CanRead() 的 stub</summary>
        </member>
        <member name="F:Aliyun.OSS.Common.Internal.Fakes.StubWrapperStream.CanSeekGet">
            <summary>设置 WrapperStream.get_CanSeek() 的 stub</summary>
        </member>
        <member name="F:Aliyun.OSS.Common.Internal.Fakes.StubWrapperStream.CanTimeoutGet">
            <summary>设置 Stream.get_CanTimeout() 的 stub</summary>
        </member>
        <member name="F:Aliyun.OSS.Common.Internal.Fakes.StubWrapperStream.CanWriteGet">
            <summary>设置 WrapperStream.get_CanWrite() 的 stub</summary>
        </member>
        <member name="M:Aliyun.OSS.Common.Internal.Fakes.StubWrapperStream.Close">
            <summary>设置 WrapperStream.Close() 的 存根</summary>
        </member>
        <member name="F:Aliyun.OSS.Common.Internal.Fakes.StubWrapperStream.Close01">
            <summary>设置 WrapperStream.Close() 的 stub</summary>
        </member>
        <member name="M:Aliyun.OSS.Common.Internal.Fakes.StubWrapperStream.CreateWaitHandle">
            <summary>设置 Stream.CreateWaitHandle() 的 存根</summary>
        </member>
        <member name="F:Aliyun.OSS.Common.Internal.Fakes.StubWrapperStream.CreateWaitHandle01">
            <summary>设置 Stream.CreateWaitHandle() 的 stub</summary>
        </member>
        <member name="M:Aliyun.OSS.Common.Internal.Fakes.StubWrapperStream.Dispose(System.Boolean)">
            <summary>设置 Stream.Dispose(Boolean disposing) 的 存根</summary>
        </member>
        <member name="F:Aliyun.OSS.Common.Internal.Fakes.StubWrapperStream.DisposeBoolean">
            <summary>设置 Stream.Dispose(Boolean disposing) 的 stub</summary>
        </member>
        <member name="M:Aliyun.OSS.Common.Internal.Fakes.StubWrapperStream.EndRead(System.IAsyncResult)">
            <summary>设置 Stream.EndRead(IAsyncResult asyncResult) 的 存根</summary>
        </member>
        <member name="F:Aliyun.OSS.Common.Internal.Fakes.StubWrapperStream.EndReadIAsyncResult">
            <summary>设置 Stream.EndRead(IAsyncResult asyncResult) 的 stub</summary>
        </member>
        <member name="M:Aliyun.OSS.Common.Internal.Fakes.StubWrapperStream.EndWrite(System.IAsyncResult)">
            <summary>设置 Stream.EndWrite(IAsyncResult asyncResult) 的 存根</summary>
        </member>
        <member name="F:Aliyun.OSS.Common.Internal.Fakes.StubWrapperStream.EndWriteIAsyncResult">
            <summary>设置 Stream.EndWrite(IAsyncResult asyncResult) 的 stub</summary>
        </member>
        <member name="M:Aliyun.OSS.Common.Internal.Fakes.StubWrapperStream.Flush">
            <summary>设置 WrapperStream.Flush() 的 存根</summary>
        </member>
        <member name="F:Aliyun.OSS.Common.Internal.Fakes.StubWrapperStream.Flush01">
            <summary>设置 WrapperStream.Flush() 的 stub</summary>
        </member>
        <member name="M:Aliyun.OSS.Common.Internal.Fakes.StubWrapperStream.InitializeStub">
            <summary>初始化 type StubWrapperStream 的新实例</summary>
        </member>
        <member name="F:Aliyun.OSS.Common.Internal.Fakes.StubWrapperStream.LengthGet">
            <summary>设置 WrapperStream.get_Length() 的 stub</summary>
        </member>
        <member name="M:Aliyun.OSS.Common.Internal.Fakes.StubWrapperStream.ObjectInvariant">
            <summary>设置 Stream.ObjectInvariant() 的 存根</summary>
        </member>
        <member name="F:Aliyun.OSS.Common.Internal.Fakes.StubWrapperStream.ObjectInvariant01">
            <summary>设置 Stream.ObjectInvariant() 的 stub</summary>
        </member>
        <member name="F:Aliyun.OSS.Common.Internal.Fakes.StubWrapperStream.PositionGet">
            <summary>设置 WrapperStream.get_Position() 的 stub</summary>
        </member>
        <member name="F:Aliyun.OSS.Common.Internal.Fakes.StubWrapperStream.PositionSetInt64">
            <summary>设置 WrapperStream.set_Position(Int64 value) 的 stub</summary>
        </member>
        <member name="M:Aliyun.OSS.Common.Internal.Fakes.StubWrapperStream.Read(System.Byte[],System.Int32,System.Int32)">
            <summary>设置 WrapperStream.Read(Byte[] buffer, Int32 offset, Int32 count) 的 存根</summary>
        </member>
        <member name="M:Aliyun.OSS.Common.Internal.Fakes.StubWrapperStream.ReadByte">
            <summary>设置 Stream.ReadByte() 的 存根</summary>
        </member>
        <member name="F:Aliyun.OSS.Common.Internal.Fakes.StubWrapperStream.ReadByte01">
            <summary>设置 Stream.ReadByte() 的 stub</summary>
        </member>
        <member name="F:Aliyun.OSS.Common.Internal.Fakes.StubWrapperStream.ReadByteArrayInt32Int32">
            <summary>设置 WrapperStream.Read(Byte[] buffer, Int32 offset, Int32 count) 的 stub</summary>
        </member>
        <member name="F:Aliyun.OSS.Common.Internal.Fakes.StubWrapperStream.ReadTimeoutGet">
            <summary>设置 WrapperStream.get_ReadTimeout() 的 stub</summary>
        </member>
        <member name="F:Aliyun.OSS.Common.Internal.Fakes.StubWrapperStream.ReadTimeoutSetInt32">
            <summary>设置 WrapperStream.set_ReadTimeout(Int32 value) 的 stub</summary>
        </member>
        <member name="M:Aliyun.OSS.Common.Internal.Fakes.StubWrapperStream.Seek(System.Int64,System.IO.SeekOrigin)">
            <summary>设置 WrapperStream.Seek(Int64 offset, SeekOrigin origin) 的 存根</summary>
        </member>
        <member name="F:Aliyun.OSS.Common.Internal.Fakes.StubWrapperStream.SeekInt64SeekOrigin">
            <summary>设置 WrapperStream.Seek(Int64 offset, SeekOrigin origin) 的 stub</summary>
        </member>
        <member name="M:Aliyun.OSS.Common.Internal.Fakes.StubWrapperStream.SetLength(System.Int64)">
            <summary>设置 WrapperStream.SetLength(Int64 value) 的 存根</summary>
        </member>
        <member name="F:Aliyun.OSS.Common.Internal.Fakes.StubWrapperStream.SetLengthInt64">
            <summary>设置 WrapperStream.SetLength(Int64 value) 的 stub</summary>
        </member>
        <member name="M:Aliyun.OSS.Common.Internal.Fakes.StubWrapperStream.Write(System.Byte[],System.Int32,System.Int32)">
            <summary>设置 WrapperStream.Write(Byte[] buffer, Int32 offset, Int32 count) 的 存根</summary>
        </member>
        <member name="M:Aliyun.OSS.Common.Internal.Fakes.StubWrapperStream.WriteByte(System.Byte)">
            <summary>设置 Stream.WriteByte(Byte value) 的 存根</summary>
        </member>
        <member name="F:Aliyun.OSS.Common.Internal.Fakes.StubWrapperStream.WriteByteArrayInt32Int32">
            <summary>设置 WrapperStream.Write(Byte[] buffer, Int32 offset, Int32 count) 的 stub</summary>
        </member>
        <member name="F:Aliyun.OSS.Common.Internal.Fakes.StubWrapperStream.WriteByteByte">
            <summary>设置 Stream.WriteByte(Byte value) 的 stub</summary>
        </member>
        <member name="F:Aliyun.OSS.Common.Internal.Fakes.StubWrapperStream.WriteTimeoutGet">
            <summary>设置 WrapperStream.get_WriteTimeout() 的 stub</summary>
        </member>
        <member name="F:Aliyun.OSS.Common.Internal.Fakes.StubWrapperStream.WriteTimeoutSetInt32">
            <summary>设置 WrapperStream.set_WriteTimeout(Int32 value) 的 stub</summary>
        </member>
        <member name="P:Aliyun.OSS.Common.Internal.Fakes.StubWrapperStream.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Aliyun.OSS.Common.Internal.Fakes.StubWrapperStream.CanRead">
            <summary>设置 WrapperStream.get_CanRead() 的 stub</summary>
        </member>
        <member name="P:Aliyun.OSS.Common.Internal.Fakes.StubWrapperStream.CanSeek">
            <summary>设置 WrapperStream.get_CanSeek() 的 stub</summary>
        </member>
        <member name="P:Aliyun.OSS.Common.Internal.Fakes.StubWrapperStream.CanTimeout">
            <summary>设置 Stream.get_CanTimeout() 的 stub</summary>
        </member>
        <member name="P:Aliyun.OSS.Common.Internal.Fakes.StubWrapperStream.CanWrite">
            <summary>设置 WrapperStream.get_CanWrite() 的 stub</summary>
        </member>
        <member name="P:Aliyun.OSS.Common.Internal.Fakes.StubWrapperStream.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Aliyun.OSS.Common.Internal.Fakes.StubWrapperStream.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="P:Aliyun.OSS.Common.Internal.Fakes.StubWrapperStream.Length">
            <summary>设置 WrapperStream.get_Length() 的 stub</summary>
        </member>
        <member name="P:Aliyun.OSS.Common.Internal.Fakes.StubWrapperStream.Position">
            <summary>设置 WrapperStream.get_Position() 的 stub</summary>
        </member>
        <member name="P:Aliyun.OSS.Common.Internal.Fakes.StubWrapperStream.ReadTimeout">
            <summary>设置 WrapperStream.get_ReadTimeout() 的 stub</summary>
        </member>
        <member name="P:Aliyun.OSS.Common.Internal.Fakes.StubWrapperStream.WriteTimeout">
            <summary>设置 WrapperStream.get_WriteTimeout() 的 stub</summary>
        </member>
        <member name="T:Aliyun.OSS.Common.ThirdParty.Fakes.ShimMD5Managed">
            <summary>Aliyun.OSS.Common.ThirdParty.MD5Managed 的填充码类型</summary>
        </member>
        <member name="M:Aliyun.OSS.Common.ThirdParty.Fakes.ShimMD5Managed.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Aliyun.OSS.Common.ThirdParty.Fakes.ShimMD5Managed.#ctor(Aliyun.OSS.Common.ThirdParty.MD5Managed)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Aliyun.OSS.Common.ThirdParty.Fakes.ShimMD5Managed.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Aliyun.OSS.Common.ThirdParty.Fakes.ShimMD5Managed.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:Aliyun.OSS.Common.ThirdParty.Fakes.ShimMD5Managed.Bind(System.IDisposable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:Aliyun.OSS.Common.ThirdParty.Fakes.ShimMD5Managed.Bind(System.Security.Cryptography.ICryptoTransform)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:Aliyun.OSS.Common.ThirdParty.Fakes.ShimMD5Managed.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Aliyun.OSS.Common.ThirdParty.Fakes.ShimMD5Managed.Constructor">
            <summary>设置 MD5Managed.MD5Managed() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Common.ThirdParty.Fakes.ShimMD5Managed.HashCoreByteArrayInt32Int32">
            <summary>设置 MD5Managed.HashCore(Byte[] array, Int32 ibStart, Int32 cbSize) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Common.ThirdParty.Fakes.ShimMD5Managed.HashFinal">
            <summary>设置 MD5Managed.HashFinal() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Common.ThirdParty.Fakes.ShimMD5Managed.Initialize">
            <summary>设置 MD5Managed.Initialize() 的 填充码</summary>
        </member>
        <member name="T:Aliyun.OSS.Common.ThirdParty.Fakes.ShimMD5Managed.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Common.ThirdParty.Fakes.ShimMD5Managed.AllInstances.HashCoreByteArrayInt32Int32">
            <summary>设置 MD5Managed.HashCore(Byte[] array, Int32 ibStart, Int32 cbSize) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Common.ThirdParty.Fakes.ShimMD5Managed.AllInstances.HashFinal">
            <summary>设置 MD5Managed.HashFinal() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Common.ThirdParty.Fakes.ShimMD5Managed.AllInstances.Initialize">
            <summary>设置 MD5Managed.Initialize() 的 填充码</summary>
        </member>
        <member name="T:Aliyun.OSS.Common.ThirdParty.Fakes.StubMD5Managed">
            <summary>Aliyun.OSS.Common.ThirdParty.MD5Managed 的存根类型</summary>
        </member>
        <member name="M:Aliyun.OSS.Common.ThirdParty.Fakes.StubMD5Managed.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="F:Aliyun.OSS.Common.ThirdParty.Fakes.StubMD5Managed.CanReuseTransformGet">
            <summary>设置 HashAlgorithm.get_CanReuseTransform() 的 stub</summary>
        </member>
        <member name="F:Aliyun.OSS.Common.ThirdParty.Fakes.StubMD5Managed.CanTransformMultipleBlocksGet">
            <summary>设置 HashAlgorithm.get_CanTransformMultipleBlocks() 的 stub</summary>
        </member>
        <member name="M:Aliyun.OSS.Common.ThirdParty.Fakes.StubMD5Managed.Dispose(System.Boolean)">
            <summary>设置 HashAlgorithm.Dispose(Boolean disposing) 的 存根</summary>
        </member>
        <member name="F:Aliyun.OSS.Common.ThirdParty.Fakes.StubMD5Managed.DisposeBoolean">
            <summary>设置 HashAlgorithm.Dispose(Boolean disposing) 的 stub</summary>
        </member>
        <member name="M:Aliyun.OSS.Common.ThirdParty.Fakes.StubMD5Managed.HashCore(System.Byte[],System.Int32,System.Int32)">
            <summary>设置 MD5Managed.HashCore(Byte[] array, Int32 ibStart, Int32 cbSize) 的 存根</summary>
        </member>
        <member name="F:Aliyun.OSS.Common.ThirdParty.Fakes.StubMD5Managed.HashCoreByteArrayInt32Int32">
            <summary>设置 MD5Managed.HashCore(Byte[] array, Int32 ibStart, Int32 cbSize) 的 stub</summary>
        </member>
        <member name="M:Aliyun.OSS.Common.ThirdParty.Fakes.StubMD5Managed.HashFinal">
            <summary>设置 MD5Managed.HashFinal() 的 存根</summary>
        </member>
        <member name="F:Aliyun.OSS.Common.ThirdParty.Fakes.StubMD5Managed.HashFinal01">
            <summary>设置 MD5Managed.HashFinal() 的 stub</summary>
        </member>
        <member name="F:Aliyun.OSS.Common.ThirdParty.Fakes.StubMD5Managed.HashGet">
            <summary>设置 HashAlgorithm.get_Hash() 的 stub</summary>
        </member>
        <member name="F:Aliyun.OSS.Common.ThirdParty.Fakes.StubMD5Managed.HashSizeGet">
            <summary>设置 HashAlgorithm.get_HashSize() 的 stub</summary>
        </member>
        <member name="M:Aliyun.OSS.Common.ThirdParty.Fakes.StubMD5Managed.Initialize">
            <summary>设置 MD5Managed.Initialize() 的 存根</summary>
        </member>
        <member name="F:Aliyun.OSS.Common.ThirdParty.Fakes.StubMD5Managed.Initialize01">
            <summary>设置 MD5Managed.Initialize() 的 stub</summary>
        </member>
        <member name="M:Aliyun.OSS.Common.ThirdParty.Fakes.StubMD5Managed.InitializeStub">
            <summary>初始化 type StubMD5Managed 的新实例</summary>
        </member>
        <member name="F:Aliyun.OSS.Common.ThirdParty.Fakes.StubMD5Managed.InputBlockSizeGet">
            <summary>设置 HashAlgorithm.get_InputBlockSize() 的 stub</summary>
        </member>
        <member name="F:Aliyun.OSS.Common.ThirdParty.Fakes.StubMD5Managed.OutputBlockSizeGet">
            <summary>设置 HashAlgorithm.get_OutputBlockSize() 的 stub</summary>
        </member>
        <member name="P:Aliyun.OSS.Common.ThirdParty.Fakes.StubMD5Managed.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Aliyun.OSS.Common.ThirdParty.Fakes.StubMD5Managed.CanReuseTransform">
            <summary>设置 HashAlgorithm.get_CanReuseTransform() 的 stub</summary>
        </member>
        <member name="P:Aliyun.OSS.Common.ThirdParty.Fakes.StubMD5Managed.CanTransformMultipleBlocks">
            <summary>设置 HashAlgorithm.get_CanTransformMultipleBlocks() 的 stub</summary>
        </member>
        <member name="P:Aliyun.OSS.Common.ThirdParty.Fakes.StubMD5Managed.Hash">
            <summary>设置 HashAlgorithm.get_Hash() 的 stub</summary>
        </member>
        <member name="P:Aliyun.OSS.Common.ThirdParty.Fakes.StubMD5Managed.HashSize">
            <summary>设置 HashAlgorithm.get_HashSize() 的 stub</summary>
        </member>
        <member name="P:Aliyun.OSS.Common.ThirdParty.Fakes.StubMD5Managed.InputBlockSize">
            <summary>设置 HashAlgorithm.get_InputBlockSize() 的 stub</summary>
        </member>
        <member name="P:Aliyun.OSS.Common.ThirdParty.Fakes.StubMD5Managed.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Aliyun.OSS.Common.ThirdParty.Fakes.StubMD5Managed.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="P:Aliyun.OSS.Common.ThirdParty.Fakes.StubMD5Managed.OutputBlockSize">
            <summary>设置 HashAlgorithm.get_OutputBlockSize() 的 stub</summary>
        </member>
        <member name="T:Aliyun.OSS.Fakes.ShimAbortMultipartUploadRequest">
            <summary>Aliyun.OSS.AbortMultipartUploadRequest 的填充码类型</summary>
        </member>
        <member name="M:Aliyun.OSS.Fakes.ShimAbortMultipartUploadRequest.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Aliyun.OSS.Fakes.ShimAbortMultipartUploadRequest.#ctor(Aliyun.OSS.AbortMultipartUploadRequest)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Aliyun.OSS.Fakes.ShimAbortMultipartUploadRequest.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Aliyun.OSS.Fakes.ShimAbortMultipartUploadRequest.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimAbortMultipartUploadRequest.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimAbortMultipartUploadRequest.BucketNameGet">
            <summary>设置 AbortMultipartUploadRequest.get_BucketName() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimAbortMultipartUploadRequest.BucketNameSetString">
            <summary>设置 AbortMultipartUploadRequest.set_BucketName(String value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimAbortMultipartUploadRequest.ConstructorStringStringString">
            <summary>设置 AbortMultipartUploadRequest.AbortMultipartUploadRequest(String bucketName, String key, String uploadId) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimAbortMultipartUploadRequest.KeyGet">
            <summary>设置 AbortMultipartUploadRequest.get_Key() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimAbortMultipartUploadRequest.KeySetString">
            <summary>设置 AbortMultipartUploadRequest.set_Key(String value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimAbortMultipartUploadRequest.UploadIdGet">
            <summary>设置 AbortMultipartUploadRequest.get_UploadId() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimAbortMultipartUploadRequest.UploadIdSetString">
            <summary>设置 AbortMultipartUploadRequest.set_UploadId(String value) 的 填充码</summary>
        </member>
        <member name="T:Aliyun.OSS.Fakes.ShimAbortMultipartUploadRequest.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimAbortMultipartUploadRequest.AllInstances.BucketNameGet">
            <summary>设置 AbortMultipartUploadRequest.get_BucketName() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimAbortMultipartUploadRequest.AllInstances.BucketNameSetString">
            <summary>设置 AbortMultipartUploadRequest.set_BucketName(String value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimAbortMultipartUploadRequest.AllInstances.KeyGet">
            <summary>设置 AbortMultipartUploadRequest.get_Key() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimAbortMultipartUploadRequest.AllInstances.KeySetString">
            <summary>设置 AbortMultipartUploadRequest.set_Key(String value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimAbortMultipartUploadRequest.AllInstances.UploadIdGet">
            <summary>设置 AbortMultipartUploadRequest.get_UploadId() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimAbortMultipartUploadRequest.AllInstances.UploadIdSetString">
            <summary>设置 AbortMultipartUploadRequest.set_UploadId(String value) 的 填充码</summary>
        </member>
        <member name="T:Aliyun.OSS.Fakes.ShimAccessControlList">
            <summary>Aliyun.OSS.AccessControlList 的填充码类型</summary>
        </member>
        <member name="M:Aliyun.OSS.Fakes.ShimAccessControlList.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Aliyun.OSS.Fakes.ShimAccessControlList.#ctor(Aliyun.OSS.AccessControlList)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Aliyun.OSS.Fakes.ShimAccessControlList.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Aliyun.OSS.Fakes.ShimAccessControlList.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimAccessControlList.ACLGet">
            <summary>设置 AccessControlList.get_ACL() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimAccessControlList.ACLSetCannedAccessControlList">
            <summary>设置 AccessControlList.set_ACL(CannedAccessControlList value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimAccessControlList.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimAccessControlList.Constructor">
            <summary>设置 AccessControlList.AccessControlList() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimAccessControlList.GrantPermissionIGranteePermission">
            <summary>设置 AccessControlList.GrantPermission(IGrantee grantee, Permission permission) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimAccessControlList.GrantsGet">
            <summary>设置 AccessControlList.get_Grants() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimAccessControlList.OwnerGet">
            <summary>设置 AccessControlList.get_Owner() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimAccessControlList.OwnerSetOwner">
            <summary>设置 AccessControlList.set_Owner(Owner value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimAccessControlList.RevokeAllPermissionsIGrantee">
            <summary>设置 AccessControlList.RevokeAllPermissions(IGrantee grantee) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimAccessControlList.ToString">
            <summary>设置 AccessControlList.ToString() 的 填充码</summary>
        </member>
        <member name="T:Aliyun.OSS.Fakes.ShimAccessControlList.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimAccessControlList.AllInstances.ACLGet">
            <summary>设置 AccessControlList.get_ACL() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimAccessControlList.AllInstances.ACLSetCannedAccessControlList">
            <summary>设置 AccessControlList.set_ACL(CannedAccessControlList value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimAccessControlList.AllInstances.GrantPermissionIGranteePermission">
            <summary>设置 AccessControlList.GrantPermission(IGrantee grantee, Permission permission) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimAccessControlList.AllInstances.GrantsGet">
            <summary>设置 AccessControlList.get_Grants() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimAccessControlList.AllInstances.OwnerGet">
            <summary>设置 AccessControlList.get_Owner() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimAccessControlList.AllInstances.OwnerSetOwner">
            <summary>设置 AccessControlList.set_Owner(Owner value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimAccessControlList.AllInstances.RevokeAllPermissionsIGrantee">
            <summary>设置 AccessControlList.RevokeAllPermissions(IGrantee grantee) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimAccessControlList.AllInstances.ToString01">
            <summary>设置 AccessControlList.ToString() 的 填充码</summary>
        </member>
        <member name="T:Aliyun.OSS.Fakes.ShimAppendObjectRequest">
            <summary>Aliyun.OSS.AppendObjectRequest 的填充码类型</summary>
        </member>
        <member name="M:Aliyun.OSS.Fakes.ShimAppendObjectRequest.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Aliyun.OSS.Fakes.ShimAppendObjectRequest.#ctor(Aliyun.OSS.AppendObjectRequest)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Aliyun.OSS.Fakes.ShimAppendObjectRequest.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Aliyun.OSS.Fakes.ShimAppendObjectRequest.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimAppendObjectRequest.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimAppendObjectRequest.BucketNameGet">
            <summary>设置 AppendObjectRequest.get_BucketName() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimAppendObjectRequest.BucketNameSetString">
            <summary>设置 AppendObjectRequest.set_BucketName(String value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimAppendObjectRequest.ConstructorStringString">
            <summary>设置 AppendObjectRequest.AppendObjectRequest(String bucketName, String key) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimAppendObjectRequest.ContentGet">
            <summary>设置 AppendObjectRequest.get_Content() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimAppendObjectRequest.ContentSetStream">
            <summary>设置 AppendObjectRequest.set_Content(Stream value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimAppendObjectRequest.KeyGet">
            <summary>设置 AppendObjectRequest.get_Key() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimAppendObjectRequest.KeySetString">
            <summary>设置 AppendObjectRequest.set_Key(String value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimAppendObjectRequest.ObjectMetadataGet">
            <summary>设置 AppendObjectRequest.get_ObjectMetadata() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimAppendObjectRequest.ObjectMetadataSetObjectMetadata">
            <summary>设置 AppendObjectRequest.set_ObjectMetadata(ObjectMetadata value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimAppendObjectRequest.PopulateIDictionaryOfStringString">
            <summary>设置 AppendObjectRequest.Populate(IDictionary`2&lt;String,String&gt; headers) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimAppendObjectRequest.PositionGet">
            <summary>设置 AppendObjectRequest.get_Position() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimAppendObjectRequest.PositionSetInt64">
            <summary>设置 AppendObjectRequest.set_Position(Int64 value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimAppendObjectRequest.StreamTransferProgressGet">
            <summary>设置 AppendObjectRequest.get_StreamTransferProgress() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimAppendObjectRequest.StreamTransferProgressSetEventHandlerOfStreamTransferProgressArgs">
            <summary>设置 AppendObjectRequest.set_StreamTransferProgress(EventHandler`1&lt;StreamTransferProgressArgs&gt; value) 的 填充码</summary>
        </member>
        <member name="T:Aliyun.OSS.Fakes.ShimAppendObjectRequest.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimAppendObjectRequest.AllInstances.BucketNameGet">
            <summary>设置 AppendObjectRequest.get_BucketName() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimAppendObjectRequest.AllInstances.BucketNameSetString">
            <summary>设置 AppendObjectRequest.set_BucketName(String value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimAppendObjectRequest.AllInstances.ContentGet">
            <summary>设置 AppendObjectRequest.get_Content() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimAppendObjectRequest.AllInstances.ContentSetStream">
            <summary>设置 AppendObjectRequest.set_Content(Stream value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimAppendObjectRequest.AllInstances.KeyGet">
            <summary>设置 AppendObjectRequest.get_Key() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimAppendObjectRequest.AllInstances.KeySetString">
            <summary>设置 AppendObjectRequest.set_Key(String value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimAppendObjectRequest.AllInstances.ObjectMetadataGet">
            <summary>设置 AppendObjectRequest.get_ObjectMetadata() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimAppendObjectRequest.AllInstances.ObjectMetadataSetObjectMetadata">
            <summary>设置 AppendObjectRequest.set_ObjectMetadata(ObjectMetadata value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimAppendObjectRequest.AllInstances.PopulateIDictionaryOfStringString">
            <summary>设置 AppendObjectRequest.Populate(IDictionary`2&lt;String,String&gt; headers) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimAppendObjectRequest.AllInstances.PositionGet">
            <summary>设置 AppendObjectRequest.get_Position() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimAppendObjectRequest.AllInstances.PositionSetInt64">
            <summary>设置 AppendObjectRequest.set_Position(Int64 value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimAppendObjectRequest.AllInstances.StreamTransferProgressGet">
            <summary>设置 AppendObjectRequest.get_StreamTransferProgress() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimAppendObjectRequest.AllInstances.StreamTransferProgressSetEventHandlerOfStreamTransferProgressArgs">
            <summary>设置 AppendObjectRequest.set_StreamTransferProgress(EventHandler`1&lt;StreamTransferProgressArgs&gt; value) 的 填充码</summary>
        </member>
        <member name="T:Aliyun.OSS.Fakes.ShimAppendObjectResult">
            <summary>Aliyun.OSS.AppendObjectResult 的填充码类型</summary>
        </member>
        <member name="M:Aliyun.OSS.Fakes.ShimAppendObjectResult.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Aliyun.OSS.Fakes.ShimAppendObjectResult.#ctor(Aliyun.OSS.AppendObjectResult)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Aliyun.OSS.Fakes.ShimAppendObjectResult.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Aliyun.OSS.Fakes.ShimAppendObjectResult.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimAppendObjectResult.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimAppendObjectResult.Constructor">
            <summary>设置 AppendObjectResult.AppendObjectResult() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimAppendObjectResult.ETagGet">
            <summary>设置 AppendObjectResult.get_ETag() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimAppendObjectResult.ETagSetString">
            <summary>设置 AppendObjectResult.set_ETag(String value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimAppendObjectResult.HashCrc64EcmaGet">
            <summary>设置 AppendObjectResult.get_HashCrc64Ecma() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimAppendObjectResult.HashCrc64EcmaSetUInt64">
            <summary>设置 AppendObjectResult.set_HashCrc64Ecma(UInt64 value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimAppendObjectResult.NextAppendPositionGet">
            <summary>设置 AppendObjectResult.get_NextAppendPosition() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimAppendObjectResult.NextAppendPositionSetInt64">
            <summary>设置 AppendObjectResult.set_NextAppendPosition(Int64 value) 的 填充码</summary>
        </member>
        <member name="T:Aliyun.OSS.Fakes.ShimAppendObjectResult.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimAppendObjectResult.AllInstances.ETagGet">
            <summary>设置 AppendObjectResult.get_ETag() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimAppendObjectResult.AllInstances.ETagSetString">
            <summary>设置 AppendObjectResult.set_ETag(String value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimAppendObjectResult.AllInstances.HashCrc64EcmaGet">
            <summary>设置 AppendObjectResult.get_HashCrc64Ecma() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimAppendObjectResult.AllInstances.HashCrc64EcmaSetUInt64">
            <summary>设置 AppendObjectResult.set_HashCrc64Ecma(UInt64 value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimAppendObjectResult.AllInstances.NextAppendPositionGet">
            <summary>设置 AppendObjectResult.get_NextAppendPosition() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimAppendObjectResult.AllInstances.NextAppendPositionSetInt64">
            <summary>设置 AppendObjectResult.set_NextAppendPosition(Int64 value) 的 填充码</summary>
        </member>
        <member name="T:Aliyun.OSS.Fakes.ShimBucket">
            <summary>Aliyun.OSS.Bucket 的填充码类型</summary>
        </member>
        <member name="M:Aliyun.OSS.Fakes.ShimBucket.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Aliyun.OSS.Fakes.ShimBucket.#ctor(Aliyun.OSS.Bucket)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Aliyun.OSS.Fakes.ShimBucket.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Aliyun.OSS.Fakes.ShimBucket.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimBucket.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimBucket.ConstructorString">
            <summary>设置 Bucket.Bucket(String name) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimBucket.CreationDateGet">
            <summary>设置 Bucket.get_CreationDate() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimBucket.CreationDateSetDateTime">
            <summary>设置 Bucket.set_CreationDate(DateTime value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimBucket.LocationGet">
            <summary>设置 Bucket.get_Location() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimBucket.LocationSetString">
            <summary>设置 Bucket.set_Location(String value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimBucket.NameGet">
            <summary>设置 Bucket.get_Name() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimBucket.NameSetString">
            <summary>设置 Bucket.set_Name(String value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimBucket.OwnerGet">
            <summary>设置 Bucket.get_Owner() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimBucket.OwnerSetOwner">
            <summary>设置 Bucket.set_Owner(Owner value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimBucket.ToString">
            <summary>设置 Bucket.ToString() 的 填充码</summary>
        </member>
        <member name="T:Aliyun.OSS.Fakes.ShimBucket.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimBucket.AllInstances.CreationDateGet">
            <summary>设置 Bucket.get_CreationDate() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimBucket.AllInstances.CreationDateSetDateTime">
            <summary>设置 Bucket.set_CreationDate(DateTime value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimBucket.AllInstances.LocationGet">
            <summary>设置 Bucket.get_Location() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimBucket.AllInstances.LocationSetString">
            <summary>设置 Bucket.set_Location(String value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimBucket.AllInstances.NameGet">
            <summary>设置 Bucket.get_Name() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimBucket.AllInstances.NameSetString">
            <summary>设置 Bucket.set_Name(String value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimBucket.AllInstances.OwnerGet">
            <summary>设置 Bucket.get_Owner() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimBucket.AllInstances.OwnerSetOwner">
            <summary>设置 Bucket.set_Owner(Owner value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimBucket.AllInstances.ToString01">
            <summary>设置 Bucket.ToString() 的 填充码</summary>
        </member>
        <member name="T:Aliyun.OSS.Fakes.ShimBucketLoggingResult">
            <summary>Aliyun.OSS.BucketLoggingResult 的填充码类型</summary>
        </member>
        <member name="M:Aliyun.OSS.Fakes.ShimBucketLoggingResult.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Aliyun.OSS.Fakes.ShimBucketLoggingResult.#ctor(Aliyun.OSS.BucketLoggingResult)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Aliyun.OSS.Fakes.ShimBucketLoggingResult.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Aliyun.OSS.Fakes.ShimBucketLoggingResult.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimBucketLoggingResult.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimBucketLoggingResult.Constructor">
            <summary>设置 BucketLoggingResult.BucketLoggingResult() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimBucketLoggingResult.TargetBucketGet">
            <summary>设置 BucketLoggingResult.get_TargetBucket() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimBucketLoggingResult.TargetBucketSetString">
            <summary>设置 BucketLoggingResult.set_TargetBucket(String value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimBucketLoggingResult.TargetPrefixGet">
            <summary>设置 BucketLoggingResult.get_TargetPrefix() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimBucketLoggingResult.TargetPrefixSetString">
            <summary>设置 BucketLoggingResult.set_TargetPrefix(String value) 的 填充码</summary>
        </member>
        <member name="T:Aliyun.OSS.Fakes.ShimBucketLoggingResult.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimBucketLoggingResult.AllInstances.TargetBucketGet">
            <summary>设置 BucketLoggingResult.get_TargetBucket() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimBucketLoggingResult.AllInstances.TargetBucketSetString">
            <summary>设置 BucketLoggingResult.set_TargetBucket(String value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimBucketLoggingResult.AllInstances.TargetPrefixGet">
            <summary>设置 BucketLoggingResult.get_TargetPrefix() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimBucketLoggingResult.AllInstances.TargetPrefixSetString">
            <summary>设置 BucketLoggingResult.set_TargetPrefix(String value) 的 填充码</summary>
        </member>
        <member name="T:Aliyun.OSS.Fakes.ShimBucketWebsiteResult">
            <summary>Aliyun.OSS.BucketWebsiteResult 的填充码类型</summary>
        </member>
        <member name="M:Aliyun.OSS.Fakes.ShimBucketWebsiteResult.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Aliyun.OSS.Fakes.ShimBucketWebsiteResult.#ctor(Aliyun.OSS.BucketWebsiteResult)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Aliyun.OSS.Fakes.ShimBucketWebsiteResult.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Aliyun.OSS.Fakes.ShimBucketWebsiteResult.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimBucketWebsiteResult.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimBucketWebsiteResult.Constructor">
            <summary>设置 BucketWebsiteResult.BucketWebsiteResult() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimBucketWebsiteResult.ErrorDocumentGet">
            <summary>设置 BucketWebsiteResult.get_ErrorDocument() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimBucketWebsiteResult.ErrorDocumentSetString">
            <summary>设置 BucketWebsiteResult.set_ErrorDocument(String value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimBucketWebsiteResult.IndexDocumentGet">
            <summary>设置 BucketWebsiteResult.get_IndexDocument() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimBucketWebsiteResult.IndexDocumentSetString">
            <summary>设置 BucketWebsiteResult.set_IndexDocument(String value) 的 填充码</summary>
        </member>
        <member name="T:Aliyun.OSS.Fakes.ShimBucketWebsiteResult.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimBucketWebsiteResult.AllInstances.ErrorDocumentGet">
            <summary>设置 BucketWebsiteResult.get_ErrorDocument() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimBucketWebsiteResult.AllInstances.ErrorDocumentSetString">
            <summary>设置 BucketWebsiteResult.set_ErrorDocument(String value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimBucketWebsiteResult.AllInstances.IndexDocumentGet">
            <summary>设置 BucketWebsiteResult.get_IndexDocument() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimBucketWebsiteResult.AllInstances.IndexDocumentSetString">
            <summary>设置 BucketWebsiteResult.set_IndexDocument(String value) 的 填充码</summary>
        </member>
        <member name="T:Aliyun.OSS.Fakes.ShimCORSRule">
            <summary>Aliyun.OSS.CORSRule 的填充码类型</summary>
        </member>
        <member name="M:Aliyun.OSS.Fakes.ShimCORSRule.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Aliyun.OSS.Fakes.ShimCORSRule.#ctor(Aliyun.OSS.CORSRule)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Aliyun.OSS.Fakes.ShimCORSRule.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Aliyun.OSS.Fakes.ShimCORSRule.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimCORSRule.AddAllowedHeaderString">
            <summary>设置 CORSRule.AddAllowedHeader(String allowedHeader) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimCORSRule.AddAllowedMethodString">
            <summary>设置 CORSRule.AddAllowedMethod(String allowedMethod) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimCORSRule.AddAllowedOriginString">
            <summary>设置 CORSRule.AddAllowedOrigin(String allowedOrigin) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimCORSRule.AddExposeHeaderString">
            <summary>设置 CORSRule.AddExposeHeader(String exposedHeader) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimCORSRule.AllowedHeadersGet">
            <summary>设置 CORSRule.get_AllowedHeaders() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimCORSRule.AllowedHeadersSetIListOfString">
            <summary>设置 CORSRule.set_AllowedHeaders(IList`1&lt;String&gt; value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimCORSRule.AllowedMethodsGet">
            <summary>设置 CORSRule.get_AllowedMethods() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimCORSRule.AllowedMethodsSetIListOfString">
            <summary>设置 CORSRule.set_AllowedMethods(IList`1&lt;String&gt; value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimCORSRule.AllowedOriginsGet">
            <summary>设置 CORSRule.get_AllowedOrigins() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimCORSRule.AllowedOriginsSetIListOfString">
            <summary>设置 CORSRule.set_AllowedOrigins(IList`1&lt;String&gt; value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimCORSRule.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimCORSRule.Constructor">
            <summary>设置 CORSRule.CORSRule() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimCORSRule.CountOfAsteriskIEnumerableOfString">
            <summary>设置 CORSRule.CountOfAsterisk(IEnumerable`1&lt;String&gt; items) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimCORSRule.ExposeHeadersGet">
            <summary>设置 CORSRule.get_ExposeHeaders() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimCORSRule.ExposeHeadersSetIListOfString">
            <summary>设置 CORSRule.set_ExposeHeaders(IList`1&lt;String&gt; value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimCORSRule.InAllowedMethodsString">
            <summary>设置 CORSRule.InAllowedMethods(String allowedMethod) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimCORSRule.MaxAgeSecondsGet">
            <summary>设置 CORSRule.get_MaxAgeSeconds() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimCORSRule.MaxAgeSecondsSetInt32">
            <summary>设置 CORSRule.set_MaxAgeSeconds(Int32 value) 的 填充码</summary>
        </member>
        <member name="T:Aliyun.OSS.Fakes.ShimCORSRule.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimCORSRule.AllInstances.AddAllowedHeaderString">
            <summary>设置 CORSRule.AddAllowedHeader(String allowedHeader) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimCORSRule.AllInstances.AddAllowedMethodString">
            <summary>设置 CORSRule.AddAllowedMethod(String allowedMethod) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimCORSRule.AllInstances.AddAllowedOriginString">
            <summary>设置 CORSRule.AddAllowedOrigin(String allowedOrigin) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimCORSRule.AllInstances.AddExposeHeaderString">
            <summary>设置 CORSRule.AddExposeHeader(String exposedHeader) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimCORSRule.AllInstances.AllowedHeadersGet">
            <summary>设置 CORSRule.get_AllowedHeaders() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimCORSRule.AllInstances.AllowedHeadersSetIListOfString">
            <summary>设置 CORSRule.set_AllowedHeaders(IList`1&lt;String&gt; value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimCORSRule.AllInstances.AllowedMethodsGet">
            <summary>设置 CORSRule.get_AllowedMethods() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimCORSRule.AllInstances.AllowedMethodsSetIListOfString">
            <summary>设置 CORSRule.set_AllowedMethods(IList`1&lt;String&gt; value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimCORSRule.AllInstances.AllowedOriginsGet">
            <summary>设置 CORSRule.get_AllowedOrigins() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimCORSRule.AllInstances.AllowedOriginsSetIListOfString">
            <summary>设置 CORSRule.set_AllowedOrigins(IList`1&lt;String&gt; value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimCORSRule.AllInstances.ExposeHeadersGet">
            <summary>设置 CORSRule.get_ExposeHeaders() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimCORSRule.AllInstances.ExposeHeadersSetIListOfString">
            <summary>设置 CORSRule.set_ExposeHeaders(IList`1&lt;String&gt; value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimCORSRule.AllInstances.MaxAgeSecondsGet">
            <summary>设置 CORSRule.get_MaxAgeSeconds() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimCORSRule.AllInstances.MaxAgeSecondsSetInt32">
            <summary>设置 CORSRule.set_MaxAgeSeconds(Int32 value) 的 填充码</summary>
        </member>
        <member name="T:Aliyun.OSS.Fakes.ShimCompleteMultipartUploadRequest">
            <summary>Aliyun.OSS.CompleteMultipartUploadRequest 的填充码类型</summary>
        </member>
        <member name="M:Aliyun.OSS.Fakes.ShimCompleteMultipartUploadRequest.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Aliyun.OSS.Fakes.ShimCompleteMultipartUploadRequest.#ctor(Aliyun.OSS.CompleteMultipartUploadRequest)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Aliyun.OSS.Fakes.ShimCompleteMultipartUploadRequest.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Aliyun.OSS.Fakes.ShimCompleteMultipartUploadRequest.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimCompleteMultipartUploadRequest.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimCompleteMultipartUploadRequest.BucketNameGet">
            <summary>设置 CompleteMultipartUploadRequest.get_BucketName() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimCompleteMultipartUploadRequest.BucketNameSetString">
            <summary>设置 CompleteMultipartUploadRequest.set_BucketName(String value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimCompleteMultipartUploadRequest.ConstructorStringStringString">
            <summary>设置 CompleteMultipartUploadRequest.CompleteMultipartUploadRequest(String bucketName, String key, String uploadId) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimCompleteMultipartUploadRequest.IsCallbackRequest">
            <summary>设置 CompleteMultipartUploadRequest.IsCallbackRequest() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimCompleteMultipartUploadRequest.IsNeedResponseStream">
            <summary>设置 CompleteMultipartUploadRequest.IsNeedResponseStream() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimCompleteMultipartUploadRequest.KeyGet">
            <summary>设置 CompleteMultipartUploadRequest.get_Key() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimCompleteMultipartUploadRequest.KeySetString">
            <summary>设置 CompleteMultipartUploadRequest.set_Key(String value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimCompleteMultipartUploadRequest.MetadataGet">
            <summary>设置 CompleteMultipartUploadRequest.get_Metadata() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimCompleteMultipartUploadRequest.MetadataSetObjectMetadata">
            <summary>设置 CompleteMultipartUploadRequest.set_Metadata(ObjectMetadata value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimCompleteMultipartUploadRequest.PartETagsGet">
            <summary>设置 CompleteMultipartUploadRequest.get_PartETags() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimCompleteMultipartUploadRequest.UploadIdGet">
            <summary>设置 CompleteMultipartUploadRequest.get_UploadId() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimCompleteMultipartUploadRequest.UploadIdSetString">
            <summary>设置 CompleteMultipartUploadRequest.set_UploadId(String value) 的 填充码</summary>
        </member>
        <member name="T:Aliyun.OSS.Fakes.ShimCompleteMultipartUploadRequest.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimCompleteMultipartUploadRequest.AllInstances.BucketNameGet">
            <summary>设置 CompleteMultipartUploadRequest.get_BucketName() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimCompleteMultipartUploadRequest.AllInstances.BucketNameSetString">
            <summary>设置 CompleteMultipartUploadRequest.set_BucketName(String value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimCompleteMultipartUploadRequest.AllInstances.IsCallbackRequest">
            <summary>设置 CompleteMultipartUploadRequest.IsCallbackRequest() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimCompleteMultipartUploadRequest.AllInstances.IsNeedResponseStream">
            <summary>设置 CompleteMultipartUploadRequest.IsNeedResponseStream() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimCompleteMultipartUploadRequest.AllInstances.KeyGet">
            <summary>设置 CompleteMultipartUploadRequest.get_Key() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimCompleteMultipartUploadRequest.AllInstances.KeySetString">
            <summary>设置 CompleteMultipartUploadRequest.set_Key(String value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimCompleteMultipartUploadRequest.AllInstances.MetadataGet">
            <summary>设置 CompleteMultipartUploadRequest.get_Metadata() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimCompleteMultipartUploadRequest.AllInstances.MetadataSetObjectMetadata">
            <summary>设置 CompleteMultipartUploadRequest.set_Metadata(ObjectMetadata value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimCompleteMultipartUploadRequest.AllInstances.PartETagsGet">
            <summary>设置 CompleteMultipartUploadRequest.get_PartETags() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimCompleteMultipartUploadRequest.AllInstances.UploadIdGet">
            <summary>设置 CompleteMultipartUploadRequest.get_UploadId() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimCompleteMultipartUploadRequest.AllInstances.UploadIdSetString">
            <summary>设置 CompleteMultipartUploadRequest.set_UploadId(String value) 的 填充码</summary>
        </member>
        <member name="T:Aliyun.OSS.Fakes.ShimCompleteMultipartUploadResult">
            <summary>Aliyun.OSS.CompleteMultipartUploadResult 的填充码类型</summary>
        </member>
        <member name="M:Aliyun.OSS.Fakes.ShimCompleteMultipartUploadResult.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Aliyun.OSS.Fakes.ShimCompleteMultipartUploadResult.#ctor(Aliyun.OSS.CompleteMultipartUploadResult)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Aliyun.OSS.Fakes.ShimCompleteMultipartUploadResult.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Aliyun.OSS.Fakes.ShimCompleteMultipartUploadResult.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:Aliyun.OSS.Fakes.ShimCompleteMultipartUploadResult.Bind(System.IDisposable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimCompleteMultipartUploadResult.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimCompleteMultipartUploadResult.BucketNameGet">
            <summary>设置 CompleteMultipartUploadResult.get_BucketName() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimCompleteMultipartUploadResult.BucketNameSetString">
            <summary>设置 CompleteMultipartUploadResult.set_BucketName(String value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimCompleteMultipartUploadResult.Constructor">
            <summary>设置 CompleteMultipartUploadResult.CompleteMultipartUploadResult() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimCompleteMultipartUploadResult.KeyGet">
            <summary>设置 CompleteMultipartUploadResult.get_Key() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimCompleteMultipartUploadResult.KeySetString">
            <summary>设置 CompleteMultipartUploadResult.set_Key(String value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimCompleteMultipartUploadResult.LocationGet">
            <summary>设置 CompleteMultipartUploadResult.get_Location() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimCompleteMultipartUploadResult.LocationSetString">
            <summary>设置 CompleteMultipartUploadResult.set_Location(String value) 的 填充码</summary>
        </member>
        <member name="T:Aliyun.OSS.Fakes.ShimCompleteMultipartUploadResult.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimCompleteMultipartUploadResult.AllInstances.BucketNameGet">
            <summary>设置 CompleteMultipartUploadResult.get_BucketName() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimCompleteMultipartUploadResult.AllInstances.BucketNameSetString">
            <summary>设置 CompleteMultipartUploadResult.set_BucketName(String value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimCompleteMultipartUploadResult.AllInstances.KeyGet">
            <summary>设置 CompleteMultipartUploadResult.get_Key() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimCompleteMultipartUploadResult.AllInstances.KeySetString">
            <summary>设置 CompleteMultipartUploadResult.set_Key(String value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimCompleteMultipartUploadResult.AllInstances.LocationGet">
            <summary>设置 CompleteMultipartUploadResult.get_Location() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimCompleteMultipartUploadResult.AllInstances.LocationSetString">
            <summary>设置 CompleteMultipartUploadResult.set_Location(String value) 的 填充码</summary>
        </member>
        <member name="T:Aliyun.OSS.Fakes.ShimCopyObjectRequest">
            <summary>Aliyun.OSS.CopyObjectRequest 的填充码类型</summary>
        </member>
        <member name="M:Aliyun.OSS.Fakes.ShimCopyObjectRequest.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Aliyun.OSS.Fakes.ShimCopyObjectRequest.#ctor(Aliyun.OSS.CopyObjectRequest)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Aliyun.OSS.Fakes.ShimCopyObjectRequest.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Aliyun.OSS.Fakes.ShimCopyObjectRequest.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimCopyObjectRequest.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimCopyObjectRequest.ConstructorStringStringStringString">
            <summary>设置 CopyObjectRequest.CopyObjectRequest(String sourceBucketName, String sourceKey, String destinationBucketName, String destinationKey) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimCopyObjectRequest.DestinationBucketNameGet">
            <summary>设置 CopyObjectRequest.get_DestinationBucketName() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimCopyObjectRequest.DestinationBucketNameSetString">
            <summary>设置 CopyObjectRequest.set_DestinationBucketName(String value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimCopyObjectRequest.DestinationKeyGet">
            <summary>设置 CopyObjectRequest.get_DestinationKey() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimCopyObjectRequest.DestinationKeySetString">
            <summary>设置 CopyObjectRequest.set_DestinationKey(String value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimCopyObjectRequest.MatchingETagConstraintsGet">
            <summary>设置 CopyObjectRequest.get_MatchingETagConstraints() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimCopyObjectRequest.ModifiedSinceConstraintGet">
            <summary>设置 CopyObjectRequest.get_ModifiedSinceConstraint() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimCopyObjectRequest.ModifiedSinceConstraintSetNullableOfDateTime">
            <summary>设置 CopyObjectRequest.set_ModifiedSinceConstraint(Nullable`1&lt;DateTime&gt; value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimCopyObjectRequest.NewObjectMetadataGet">
            <summary>设置 CopyObjectRequest.get_NewObjectMetadata() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimCopyObjectRequest.NewObjectMetadataSetObjectMetadata">
            <summary>设置 CopyObjectRequest.set_NewObjectMetadata(ObjectMetadata value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimCopyObjectRequest.NonmatchingETagConstraintsGet">
            <summary>设置 CopyObjectRequest.get_NonmatchingETagConstraints() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimCopyObjectRequest.PopulateIDictionaryOfStringString">
            <summary>设置 CopyObjectRequest.Populate(IDictionary`2&lt;String,String&gt; headers) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimCopyObjectRequest.SourceBucketNameGet">
            <summary>设置 CopyObjectRequest.get_SourceBucketName() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimCopyObjectRequest.SourceBucketNameSetString">
            <summary>设置 CopyObjectRequest.set_SourceBucketName(String value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimCopyObjectRequest.SourceKeyGet">
            <summary>设置 CopyObjectRequest.get_SourceKey() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimCopyObjectRequest.SourceKeySetString">
            <summary>设置 CopyObjectRequest.set_SourceKey(String value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimCopyObjectRequest.UnmodifiedSinceConstraintGet">
            <summary>设置 CopyObjectRequest.get_UnmodifiedSinceConstraint() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimCopyObjectRequest.UnmodifiedSinceConstraintSetNullableOfDateTime">
            <summary>设置 CopyObjectRequest.set_UnmodifiedSinceConstraint(Nullable`1&lt;DateTime&gt; value) 的 填充码</summary>
        </member>
        <member name="T:Aliyun.OSS.Fakes.ShimCopyObjectRequest.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimCopyObjectRequest.AllInstances.DestinationBucketNameGet">
            <summary>设置 CopyObjectRequest.get_DestinationBucketName() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimCopyObjectRequest.AllInstances.DestinationBucketNameSetString">
            <summary>设置 CopyObjectRequest.set_DestinationBucketName(String value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimCopyObjectRequest.AllInstances.DestinationKeyGet">
            <summary>设置 CopyObjectRequest.get_DestinationKey() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimCopyObjectRequest.AllInstances.DestinationKeySetString">
            <summary>设置 CopyObjectRequest.set_DestinationKey(String value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimCopyObjectRequest.AllInstances.MatchingETagConstraintsGet">
            <summary>设置 CopyObjectRequest.get_MatchingETagConstraints() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimCopyObjectRequest.AllInstances.ModifiedSinceConstraintGet">
            <summary>设置 CopyObjectRequest.get_ModifiedSinceConstraint() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimCopyObjectRequest.AllInstances.ModifiedSinceConstraintSetNullableOfDateTime">
            <summary>设置 CopyObjectRequest.set_ModifiedSinceConstraint(Nullable`1&lt;DateTime&gt; value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimCopyObjectRequest.AllInstances.NewObjectMetadataGet">
            <summary>设置 CopyObjectRequest.get_NewObjectMetadata() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimCopyObjectRequest.AllInstances.NewObjectMetadataSetObjectMetadata">
            <summary>设置 CopyObjectRequest.set_NewObjectMetadata(ObjectMetadata value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimCopyObjectRequest.AllInstances.NonmatchingETagConstraintsGet">
            <summary>设置 CopyObjectRequest.get_NonmatchingETagConstraints() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimCopyObjectRequest.AllInstances.PopulateIDictionaryOfStringString">
            <summary>设置 CopyObjectRequest.Populate(IDictionary`2&lt;String,String&gt; headers) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimCopyObjectRequest.AllInstances.SourceBucketNameGet">
            <summary>设置 CopyObjectRequest.get_SourceBucketName() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimCopyObjectRequest.AllInstances.SourceBucketNameSetString">
            <summary>设置 CopyObjectRequest.set_SourceBucketName(String value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimCopyObjectRequest.AllInstances.SourceKeyGet">
            <summary>设置 CopyObjectRequest.get_SourceKey() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimCopyObjectRequest.AllInstances.SourceKeySetString">
            <summary>设置 CopyObjectRequest.set_SourceKey(String value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimCopyObjectRequest.AllInstances.UnmodifiedSinceConstraintGet">
            <summary>设置 CopyObjectRequest.get_UnmodifiedSinceConstraint() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimCopyObjectRequest.AllInstances.UnmodifiedSinceConstraintSetNullableOfDateTime">
            <summary>设置 CopyObjectRequest.set_UnmodifiedSinceConstraint(Nullable`1&lt;DateTime&gt; value) 的 填充码</summary>
        </member>
        <member name="T:Aliyun.OSS.Fakes.ShimCopyObjectResult">
            <summary>Aliyun.OSS.CopyObjectResult 的填充码类型</summary>
        </member>
        <member name="M:Aliyun.OSS.Fakes.ShimCopyObjectResult.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Aliyun.OSS.Fakes.ShimCopyObjectResult.#ctor(Aliyun.OSS.CopyObjectResult)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Aliyun.OSS.Fakes.ShimCopyObjectResult.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Aliyun.OSS.Fakes.ShimCopyObjectResult.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimCopyObjectResult.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimCopyObjectResult.Constructor">
            <summary>设置 CopyObjectResult.CopyObjectResult() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimCopyObjectResult.ETagGet">
            <summary>设置 CopyObjectResult.get_ETag() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimCopyObjectResult.ETagSetString">
            <summary>设置 CopyObjectResult.set_ETag(String value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimCopyObjectResult.LastModifiedGet">
            <summary>设置 CopyObjectResult.get_LastModified() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimCopyObjectResult.LastModifiedSetDateTime">
            <summary>设置 CopyObjectResult.set_LastModified(DateTime value) 的 填充码</summary>
        </member>
        <member name="T:Aliyun.OSS.Fakes.ShimCopyObjectResult.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimCopyObjectResult.AllInstances.ETagGet">
            <summary>设置 CopyObjectResult.get_ETag() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimCopyObjectResult.AllInstances.ETagSetString">
            <summary>设置 CopyObjectResult.set_ETag(String value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimCopyObjectResult.AllInstances.LastModifiedGet">
            <summary>设置 CopyObjectResult.get_LastModified() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimCopyObjectResult.AllInstances.LastModifiedSetDateTime">
            <summary>设置 CopyObjectResult.set_LastModified(DateTime value) 的 填充码</summary>
        </member>
        <member name="T:Aliyun.OSS.Fakes.ShimDeleteObjectsRequest">
            <summary>Aliyun.OSS.DeleteObjectsRequest 的填充码类型</summary>
        </member>
        <member name="M:Aliyun.OSS.Fakes.ShimDeleteObjectsRequest.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Aliyun.OSS.Fakes.ShimDeleteObjectsRequest.#ctor(Aliyun.OSS.DeleteObjectsRequest)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Aliyun.OSS.Fakes.ShimDeleteObjectsRequest.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Aliyun.OSS.Fakes.ShimDeleteObjectsRequest.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimDeleteObjectsRequest.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimDeleteObjectsRequest.BucketNameGet">
            <summary>设置 DeleteObjectsRequest.get_BucketName() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimDeleteObjectsRequest.BucketNameSetString">
            <summary>设置 DeleteObjectsRequest.set_BucketName(String value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimDeleteObjectsRequest.ConstructorStringIListOfString">
            <summary>设置 DeleteObjectsRequest.DeleteObjectsRequest(String bucketName, IList`1&lt;String&gt; keys) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimDeleteObjectsRequest.ConstructorStringIListOfStringBoolean">
            <summary>设置 DeleteObjectsRequest.DeleteObjectsRequest(String bucketName, IList`1&lt;String&gt; keys, Boolean quiet) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimDeleteObjectsRequest.EncodingTypeGet">
            <summary>设置 DeleteObjectsRequest.get_EncodingType() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimDeleteObjectsRequest.EncodingTypeSetString">
            <summary>设置 DeleteObjectsRequest.set_EncodingType(String value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimDeleteObjectsRequest.KeysGet">
            <summary>设置 DeleteObjectsRequest.get_Keys() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimDeleteObjectsRequest.QuietGet">
            <summary>设置 DeleteObjectsRequest.get_Quiet() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimDeleteObjectsRequest.QuietSetBoolean">
            <summary>设置 DeleteObjectsRequest.set_Quiet(Boolean value) 的 填充码</summary>
        </member>
        <member name="T:Aliyun.OSS.Fakes.ShimDeleteObjectsRequest.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimDeleteObjectsRequest.AllInstances.BucketNameGet">
            <summary>设置 DeleteObjectsRequest.get_BucketName() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimDeleteObjectsRequest.AllInstances.BucketNameSetString">
            <summary>设置 DeleteObjectsRequest.set_BucketName(String value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimDeleteObjectsRequest.AllInstances.EncodingTypeGet">
            <summary>设置 DeleteObjectsRequest.get_EncodingType() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimDeleteObjectsRequest.AllInstances.EncodingTypeSetString">
            <summary>设置 DeleteObjectsRequest.set_EncodingType(String value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimDeleteObjectsRequest.AllInstances.KeysGet">
            <summary>设置 DeleteObjectsRequest.get_Keys() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimDeleteObjectsRequest.AllInstances.QuietGet">
            <summary>设置 DeleteObjectsRequest.get_Quiet() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimDeleteObjectsRequest.AllInstances.QuietSetBoolean">
            <summary>设置 DeleteObjectsRequest.set_Quiet(Boolean value) 的 填充码</summary>
        </member>
        <member name="T:Aliyun.OSS.Fakes.ShimDeleteObjectsResult">
            <summary>Aliyun.OSS.DeleteObjectsResult 的填充码类型</summary>
        </member>
        <member name="M:Aliyun.OSS.Fakes.ShimDeleteObjectsResult.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Aliyun.OSS.Fakes.ShimDeleteObjectsResult.#ctor(Aliyun.OSS.DeleteObjectsResult)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Aliyun.OSS.Fakes.ShimDeleteObjectsResult.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Aliyun.OSS.Fakes.ShimDeleteObjectsResult.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimDeleteObjectsResult.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimDeleteObjectsResult.Constructor">
            <summary>设置 DeleteObjectsResult.DeleteObjectsResult() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimDeleteObjectsResult.EncodingTypeGet">
            <summary>设置 DeleteObjectsResult.get_EncodingType() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimDeleteObjectsResult.EncodingTypeSetString">
            <summary>设置 DeleteObjectsResult.set_EncodingType(String value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimDeleteObjectsResult.KeysGet">
            <summary>设置 DeleteObjectsResult.get_Keys() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimDeleteObjectsResult.KeysSetDeleteObjectsResultDeletedObjectArray">
            <summary>设置 DeleteObjectsResult.set_Keys(DeletedObject[] value) 的 填充码</summary>
        </member>
        <member name="T:Aliyun.OSS.Fakes.ShimDeleteObjectsResult.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimDeleteObjectsResult.AllInstances.EncodingTypeGet">
            <summary>设置 DeleteObjectsResult.get_EncodingType() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimDeleteObjectsResult.AllInstances.EncodingTypeSetString">
            <summary>设置 DeleteObjectsResult.set_EncodingType(String value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimDeleteObjectsResult.AllInstances.KeysGet">
            <summary>设置 DeleteObjectsResult.get_Keys() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimDeleteObjectsResult.AllInstances.KeysSetDeleteObjectsResultDeletedObjectArray">
            <summary>设置 DeleteObjectsResult.set_Keys(DeletedObject[] value) 的 填充码</summary>
        </member>
        <member name="T:Aliyun.OSS.Fakes.ShimDeleteObjectsResult.ShimDeletedObject">
            <summary>Aliyun.OSS.DeleteObjectsResult+DeletedObject 的填充码类型</summary>
        </member>
        <member name="M:Aliyun.OSS.Fakes.ShimDeleteObjectsResult.ShimDeletedObject.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Aliyun.OSS.Fakes.ShimDeleteObjectsResult.ShimDeletedObject.#ctor(Aliyun.OSS.DeleteObjectsResult.DeletedObject)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Aliyun.OSS.Fakes.ShimDeleteObjectsResult.ShimDeletedObject.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Aliyun.OSS.Fakes.ShimDeleteObjectsResult.ShimDeletedObject.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimDeleteObjectsResult.ShimDeletedObject.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimDeleteObjectsResult.ShimDeletedObject.Constructor">
            <summary>设置 DeletedObject.DeletedObject() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimDeleteObjectsResult.ShimDeletedObject.KeyGet">
            <summary>设置 DeletedObject.get_Key() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimDeleteObjectsResult.ShimDeletedObject.KeySetString">
            <summary>设置 DeletedObject.set_Key(String value) 的 填充码</summary>
        </member>
        <member name="T:Aliyun.OSS.Fakes.ShimDeleteObjectsResult.ShimDeletedObject.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimDeleteObjectsResult.ShimDeletedObject.AllInstances.KeyGet">
            <summary>设置 DeletedObject.get_Key() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimDeleteObjectsResult.ShimDeletedObject.AllInstances.KeySetString">
            <summary>设置 DeletedObject.set_Key(String value) 的 填充码</summary>
        </member>
        <member name="T:Aliyun.OSS.Fakes.ShimGeneratePresignedUriRequest">
            <summary>Aliyun.OSS.GeneratePresignedUriRequest 的填充码类型</summary>
        </member>
        <member name="M:Aliyun.OSS.Fakes.ShimGeneratePresignedUriRequest.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Aliyun.OSS.Fakes.ShimGeneratePresignedUriRequest.#ctor(Aliyun.OSS.GeneratePresignedUriRequest)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Aliyun.OSS.Fakes.ShimGeneratePresignedUriRequest.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Aliyun.OSS.Fakes.ShimGeneratePresignedUriRequest.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimGeneratePresignedUriRequest.AddQueryParamStringString">
            <summary>设置 GeneratePresignedUriRequest.AddQueryParam(String param, String value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimGeneratePresignedUriRequest.AddUserMetadataStringString">
            <summary>设置 GeneratePresignedUriRequest.AddUserMetadata(String metaItem, String value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimGeneratePresignedUriRequest.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimGeneratePresignedUriRequest.BucketNameGet">
            <summary>设置 GeneratePresignedUriRequest.get_BucketName() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimGeneratePresignedUriRequest.BucketNameSetString">
            <summary>设置 GeneratePresignedUriRequest.set_BucketName(String value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimGeneratePresignedUriRequest.CallbackGet">
            <summary>设置 GeneratePresignedUriRequest.get_Callback() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimGeneratePresignedUriRequest.CallbackSetString">
            <summary>设置 GeneratePresignedUriRequest.set_Callback(String value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimGeneratePresignedUriRequest.CallbackVarGet">
            <summary>设置 GeneratePresignedUriRequest.get_CallbackVar() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimGeneratePresignedUriRequest.CallbackVarSetString">
            <summary>设置 GeneratePresignedUriRequest.set_CallbackVar(String value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimGeneratePresignedUriRequest.ConstructorStringString">
            <summary>设置 GeneratePresignedUriRequest.GeneratePresignedUriRequest(String bucketName, String key) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimGeneratePresignedUriRequest.ConstructorStringStringSignHttpMethod">
            <summary>设置 GeneratePresignedUriRequest.GeneratePresignedUriRequest(String bucketName, String key, SignHttpMethod httpMethod) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimGeneratePresignedUriRequest.ContentMd5Get">
            <summary>设置 GeneratePresignedUriRequest.get_ContentMd5() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimGeneratePresignedUriRequest.ContentMd5SetString">
            <summary>设置 GeneratePresignedUriRequest.set_ContentMd5(String value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimGeneratePresignedUriRequest.ContentTypeGet">
            <summary>设置 GeneratePresignedUriRequest.get_ContentType() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimGeneratePresignedUriRequest.ContentTypeSetString">
            <summary>设置 GeneratePresignedUriRequest.set_ContentType(String value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimGeneratePresignedUriRequest.ExpirationGet">
            <summary>设置 GeneratePresignedUriRequest.get_Expiration() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimGeneratePresignedUriRequest.ExpirationSetDateTime">
            <summary>设置 GeneratePresignedUriRequest.set_Expiration(DateTime value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimGeneratePresignedUriRequest.KeyGet">
            <summary>设置 GeneratePresignedUriRequest.get_Key() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimGeneratePresignedUriRequest.KeySetString">
            <summary>设置 GeneratePresignedUriRequest.set_Key(String value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimGeneratePresignedUriRequest.MethodGet">
            <summary>设置 GeneratePresignedUriRequest.get_Method() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimGeneratePresignedUriRequest.MethodSetSignHttpMethod">
            <summary>设置 GeneratePresignedUriRequest.set_Method(SignHttpMethod value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimGeneratePresignedUriRequest.ProcessGet">
            <summary>设置 GeneratePresignedUriRequest.get_Process() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimGeneratePresignedUriRequest.ProcessSetString">
            <summary>设置 GeneratePresignedUriRequest.set_Process(String value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimGeneratePresignedUriRequest.QueryParamsGet">
            <summary>设置 GeneratePresignedUriRequest.get_QueryParams() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimGeneratePresignedUriRequest.QueryParamsSetIDictionaryOfStringString">
            <summary>设置 GeneratePresignedUriRequest.set_QueryParams(IDictionary`2&lt;String,String&gt; value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimGeneratePresignedUriRequest.ResponseHeadersGet">
            <summary>设置 GeneratePresignedUriRequest.get_ResponseHeaders() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimGeneratePresignedUriRequest.ResponseHeadersSetResponseHeaderOverrides">
            <summary>设置 GeneratePresignedUriRequest.set_ResponseHeaders(ResponseHeaderOverrides value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimGeneratePresignedUriRequest.UserMetadataGet">
            <summary>设置 GeneratePresignedUriRequest.get_UserMetadata() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimGeneratePresignedUriRequest.UserMetadataSetIDictionaryOfStringString">
            <summary>设置 GeneratePresignedUriRequest.set_UserMetadata(IDictionary`2&lt;String,String&gt; value) 的 填充码</summary>
        </member>
        <member name="T:Aliyun.OSS.Fakes.ShimGeneratePresignedUriRequest.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimGeneratePresignedUriRequest.AllInstances.AddQueryParamStringString">
            <summary>设置 GeneratePresignedUriRequest.AddQueryParam(String param, String value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimGeneratePresignedUriRequest.AllInstances.AddUserMetadataStringString">
            <summary>设置 GeneratePresignedUriRequest.AddUserMetadata(String metaItem, String value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimGeneratePresignedUriRequest.AllInstances.BucketNameGet">
            <summary>设置 GeneratePresignedUriRequest.get_BucketName() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimGeneratePresignedUriRequest.AllInstances.BucketNameSetString">
            <summary>设置 GeneratePresignedUriRequest.set_BucketName(String value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimGeneratePresignedUriRequest.AllInstances.CallbackGet">
            <summary>设置 GeneratePresignedUriRequest.get_Callback() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimGeneratePresignedUriRequest.AllInstances.CallbackSetString">
            <summary>设置 GeneratePresignedUriRequest.set_Callback(String value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimGeneratePresignedUriRequest.AllInstances.CallbackVarGet">
            <summary>设置 GeneratePresignedUriRequest.get_CallbackVar() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimGeneratePresignedUriRequest.AllInstances.CallbackVarSetString">
            <summary>设置 GeneratePresignedUriRequest.set_CallbackVar(String value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimGeneratePresignedUriRequest.AllInstances.ContentMd5Get">
            <summary>设置 GeneratePresignedUriRequest.get_ContentMd5() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimGeneratePresignedUriRequest.AllInstances.ContentMd5SetString">
            <summary>设置 GeneratePresignedUriRequest.set_ContentMd5(String value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimGeneratePresignedUriRequest.AllInstances.ContentTypeGet">
            <summary>设置 GeneratePresignedUriRequest.get_ContentType() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimGeneratePresignedUriRequest.AllInstances.ContentTypeSetString">
            <summary>设置 GeneratePresignedUriRequest.set_ContentType(String value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimGeneratePresignedUriRequest.AllInstances.ExpirationGet">
            <summary>设置 GeneratePresignedUriRequest.get_Expiration() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimGeneratePresignedUriRequest.AllInstances.ExpirationSetDateTime">
            <summary>设置 GeneratePresignedUriRequest.set_Expiration(DateTime value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimGeneratePresignedUriRequest.AllInstances.KeyGet">
            <summary>设置 GeneratePresignedUriRequest.get_Key() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimGeneratePresignedUriRequest.AllInstances.KeySetString">
            <summary>设置 GeneratePresignedUriRequest.set_Key(String value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimGeneratePresignedUriRequest.AllInstances.MethodGet">
            <summary>设置 GeneratePresignedUriRequest.get_Method() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimGeneratePresignedUriRequest.AllInstances.MethodSetSignHttpMethod">
            <summary>设置 GeneratePresignedUriRequest.set_Method(SignHttpMethod value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimGeneratePresignedUriRequest.AllInstances.ProcessGet">
            <summary>设置 GeneratePresignedUriRequest.get_Process() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimGeneratePresignedUriRequest.AllInstances.ProcessSetString">
            <summary>设置 GeneratePresignedUriRequest.set_Process(String value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimGeneratePresignedUriRequest.AllInstances.QueryParamsGet">
            <summary>设置 GeneratePresignedUriRequest.get_QueryParams() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimGeneratePresignedUriRequest.AllInstances.QueryParamsSetIDictionaryOfStringString">
            <summary>设置 GeneratePresignedUriRequest.set_QueryParams(IDictionary`2&lt;String,String&gt; value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimGeneratePresignedUriRequest.AllInstances.ResponseHeadersGet">
            <summary>设置 GeneratePresignedUriRequest.get_ResponseHeaders() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimGeneratePresignedUriRequest.AllInstances.ResponseHeadersSetResponseHeaderOverrides">
            <summary>设置 GeneratePresignedUriRequest.set_ResponseHeaders(ResponseHeaderOverrides value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimGeneratePresignedUriRequest.AllInstances.UserMetadataGet">
            <summary>设置 GeneratePresignedUriRequest.get_UserMetadata() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimGeneratePresignedUriRequest.AllInstances.UserMetadataSetIDictionaryOfStringString">
            <summary>设置 GeneratePresignedUriRequest.set_UserMetadata(IDictionary`2&lt;String,String&gt; value) 的 填充码</summary>
        </member>
        <member name="T:Aliyun.OSS.Fakes.ShimGetObjectRequest">
            <summary>Aliyun.OSS.GetObjectRequest 的填充码类型</summary>
        </member>
        <member name="M:Aliyun.OSS.Fakes.ShimGetObjectRequest.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Aliyun.OSS.Fakes.ShimGetObjectRequest.#ctor(Aliyun.OSS.GetObjectRequest)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Aliyun.OSS.Fakes.ShimGetObjectRequest.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Aliyun.OSS.Fakes.ShimGetObjectRequest.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimGetObjectRequest.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimGetObjectRequest.BucketNameGet">
            <summary>设置 GetObjectRequest.get_BucketName() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimGetObjectRequest.BucketNameSetString">
            <summary>设置 GetObjectRequest.set_BucketName(String value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimGetObjectRequest.ConstructorStringString">
            <summary>设置 GetObjectRequest.GetObjectRequest(String bucketName, String key) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimGetObjectRequest.ConstructorStringStringString">
            <summary>设置 GetObjectRequest.GetObjectRequest(String bucketName, String key, String process) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimGetObjectRequest.KeyGet">
            <summary>设置 GetObjectRequest.get_Key() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimGetObjectRequest.KeySetString">
            <summary>设置 GetObjectRequest.set_Key(String value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimGetObjectRequest.MatchingETagConstraintsGet">
            <summary>设置 GetObjectRequest.get_MatchingETagConstraints() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimGetObjectRequest.ModifiedSinceConstraintGet">
            <summary>设置 GetObjectRequest.get_ModifiedSinceConstraint() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimGetObjectRequest.ModifiedSinceConstraintSetNullableOfDateTime">
            <summary>设置 GetObjectRequest.set_ModifiedSinceConstraint(Nullable`1&lt;DateTime&gt; value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimGetObjectRequest.NonmatchingETagConstraintsGet">
            <summary>设置 GetObjectRequest.get_NonmatchingETagConstraints() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimGetObjectRequest.PopulateIDictionaryOfStringString">
            <summary>设置 GetObjectRequest.Populate(IDictionary`2&lt;String,String&gt; headers) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimGetObjectRequest.ProcessGet">
            <summary>设置 GetObjectRequest.get_Process() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimGetObjectRequest.ProcessSetString">
            <summary>设置 GetObjectRequest.set_Process(String value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimGetObjectRequest.RangeGet">
            <summary>设置 GetObjectRequest.get_Range() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimGetObjectRequest.RangeSetInt64Array">
            <summary>设置 GetObjectRequest.set_Range(Int64[] value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimGetObjectRequest.ResponseHeadersGet">
            <summary>设置 GetObjectRequest.get_ResponseHeaders() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimGetObjectRequest.SetRangeInt64Int64">
            <summary>设置 GetObjectRequest.SetRange(Int64 start, Int64 end) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimGetObjectRequest.StreamTransferProgressGet">
            <summary>设置 GetObjectRequest.get_StreamTransferProgress() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimGetObjectRequest.StreamTransferProgressSetEventHandlerOfStreamTransferProgressArgs">
            <summary>设置 GetObjectRequest.set_StreamTransferProgress(EventHandler`1&lt;StreamTransferProgressArgs&gt; value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimGetObjectRequest.UnmodifiedSinceConstraintGet">
            <summary>设置 GetObjectRequest.get_UnmodifiedSinceConstraint() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimGetObjectRequest.UnmodifiedSinceConstraintSetNullableOfDateTime">
            <summary>设置 GetObjectRequest.set_UnmodifiedSinceConstraint(Nullable`1&lt;DateTime&gt; value) 的 填充码</summary>
        </member>
        <member name="T:Aliyun.OSS.Fakes.ShimGetObjectRequest.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimGetObjectRequest.AllInstances.BucketNameGet">
            <summary>设置 GetObjectRequest.get_BucketName() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimGetObjectRequest.AllInstances.BucketNameSetString">
            <summary>设置 GetObjectRequest.set_BucketName(String value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimGetObjectRequest.AllInstances.KeyGet">
            <summary>设置 GetObjectRequest.get_Key() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimGetObjectRequest.AllInstances.KeySetString">
            <summary>设置 GetObjectRequest.set_Key(String value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimGetObjectRequest.AllInstances.MatchingETagConstraintsGet">
            <summary>设置 GetObjectRequest.get_MatchingETagConstraints() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimGetObjectRequest.AllInstances.ModifiedSinceConstraintGet">
            <summary>设置 GetObjectRequest.get_ModifiedSinceConstraint() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimGetObjectRequest.AllInstances.ModifiedSinceConstraintSetNullableOfDateTime">
            <summary>设置 GetObjectRequest.set_ModifiedSinceConstraint(Nullable`1&lt;DateTime&gt; value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimGetObjectRequest.AllInstances.NonmatchingETagConstraintsGet">
            <summary>设置 GetObjectRequest.get_NonmatchingETagConstraints() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimGetObjectRequest.AllInstances.PopulateIDictionaryOfStringString">
            <summary>设置 GetObjectRequest.Populate(IDictionary`2&lt;String,String&gt; headers) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimGetObjectRequest.AllInstances.ProcessGet">
            <summary>设置 GetObjectRequest.get_Process() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimGetObjectRequest.AllInstances.ProcessSetString">
            <summary>设置 GetObjectRequest.set_Process(String value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimGetObjectRequest.AllInstances.RangeGet">
            <summary>设置 GetObjectRequest.get_Range() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimGetObjectRequest.AllInstances.RangeSetInt64Array">
            <summary>设置 GetObjectRequest.set_Range(Int64[] value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimGetObjectRequest.AllInstances.ResponseHeadersGet">
            <summary>设置 GetObjectRequest.get_ResponseHeaders() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimGetObjectRequest.AllInstances.SetRangeInt64Int64">
            <summary>设置 GetObjectRequest.SetRange(Int64 start, Int64 end) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimGetObjectRequest.AllInstances.StreamTransferProgressGet">
            <summary>设置 GetObjectRequest.get_StreamTransferProgress() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimGetObjectRequest.AllInstances.StreamTransferProgressSetEventHandlerOfStreamTransferProgressArgs">
            <summary>设置 GetObjectRequest.set_StreamTransferProgress(EventHandler`1&lt;StreamTransferProgressArgs&gt; value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimGetObjectRequest.AllInstances.UnmodifiedSinceConstraintGet">
            <summary>设置 GetObjectRequest.get_UnmodifiedSinceConstraint() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimGetObjectRequest.AllInstances.UnmodifiedSinceConstraintSetNullableOfDateTime">
            <summary>设置 GetObjectRequest.set_UnmodifiedSinceConstraint(Nullable`1&lt;DateTime&gt; value) 的 填充码</summary>
        </member>
        <member name="T:Aliyun.OSS.Fakes.ShimGrant">
            <summary>Aliyun.OSS.Grant 的填充码类型</summary>
        </member>
        <member name="M:Aliyun.OSS.Fakes.ShimGrant.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Aliyun.OSS.Fakes.ShimGrant.#ctor(Aliyun.OSS.Grant)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Aliyun.OSS.Fakes.ShimGrant.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Aliyun.OSS.Fakes.ShimGrant.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimGrant.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimGrant.ConstructorIGranteePermission">
            <summary>设置 Grant.Grant(IGrantee grantee, Permission permission) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimGrant.EqualsObject">
            <summary>设置 Grant.Equals(Object obj) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimGrant.GetHashCode">
            <summary>设置 Grant.GetHashCode() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimGrant.GranteeGet">
            <summary>设置 Grant.get_Grantee() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimGrant.GranteeSetIGrantee">
            <summary>设置 Grant.set_Grantee(IGrantee value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimGrant.PermissionGet">
            <summary>设置 Grant.get_Permission() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimGrant.PermissionSetPermission">
            <summary>设置 Grant.set_Permission(Permission value) 的 填充码</summary>
        </member>
        <member name="T:Aliyun.OSS.Fakes.ShimGrant.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimGrant.AllInstances.EqualsObject">
            <summary>设置 Grant.Equals(Object obj) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimGrant.AllInstances.GetHashCode01">
            <summary>设置 Grant.GetHashCode() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimGrant.AllInstances.GranteeGet">
            <summary>设置 Grant.get_Grantee() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimGrant.AllInstances.GranteeSetIGrantee">
            <summary>设置 Grant.set_Grantee(IGrantee value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimGrant.AllInstances.PermissionGet">
            <summary>设置 Grant.get_Permission() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimGrant.AllInstances.PermissionSetPermission">
            <summary>设置 Grant.set_Permission(Permission value) 的 填充码</summary>
        </member>
        <member name="T:Aliyun.OSS.Fakes.ShimGroupGrantee">
            <summary>Aliyun.OSS.GroupGrantee 的填充码类型</summary>
        </member>
        <member name="M:Aliyun.OSS.Fakes.ShimGroupGrantee.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Aliyun.OSS.Fakes.ShimGroupGrantee.#ctor(Aliyun.OSS.GroupGrantee)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Aliyun.OSS.Fakes.ShimGroupGrantee.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Aliyun.OSS.Fakes.ShimGroupGrantee.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:Aliyun.OSS.Fakes.ShimGroupGrantee.Bind(Aliyun.OSS.IGrantee)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimGroupGrantee.AllUsersGet">
            <summary>设置 GroupGrantee.get_AllUsers() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimGroupGrantee.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimGroupGrantee.ConstructorString">
            <summary>设置 GroupGrantee.GroupGrantee(String identifier) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimGroupGrantee.EqualsObject">
            <summary>设置 GroupGrantee.Equals(Object obj) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimGroupGrantee.GetHashCode">
            <summary>设置 GroupGrantee.GetHashCode() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimGroupGrantee.IdentifierGet">
            <summary>设置 GroupGrantee.get_Identifier() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimGroupGrantee.IdentifierSetString">
            <summary>设置 GroupGrantee.set_Identifier(String value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimGroupGrantee.StaticConstructor">
            <summary>设置 GroupGrantee.GroupGrantee() 的 填充码</summary>
        </member>
        <member name="T:Aliyun.OSS.Fakes.ShimGroupGrantee.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimGroupGrantee.AllInstances.EqualsObject">
            <summary>设置 GroupGrantee.Equals(Object obj) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimGroupGrantee.AllInstances.GetHashCode01">
            <summary>设置 GroupGrantee.GetHashCode() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimGroupGrantee.AllInstances.IdentifierGet">
            <summary>设置 GroupGrantee.get_Identifier() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimGroupGrantee.AllInstances.IdentifierSetString">
            <summary>设置 GroupGrantee.set_Identifier(String value) 的 填充码</summary>
        </member>
        <member name="T:Aliyun.OSS.Fakes.ShimInitiateMultipartUploadRequest">
            <summary>Aliyun.OSS.InitiateMultipartUploadRequest 的填充码类型</summary>
        </member>
        <member name="M:Aliyun.OSS.Fakes.ShimInitiateMultipartUploadRequest.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Aliyun.OSS.Fakes.ShimInitiateMultipartUploadRequest.#ctor(Aliyun.OSS.InitiateMultipartUploadRequest)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Aliyun.OSS.Fakes.ShimInitiateMultipartUploadRequest.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Aliyun.OSS.Fakes.ShimInitiateMultipartUploadRequest.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimInitiateMultipartUploadRequest.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimInitiateMultipartUploadRequest.BucketNameGet">
            <summary>设置 InitiateMultipartUploadRequest.get_BucketName() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimInitiateMultipartUploadRequest.BucketNameSetString">
            <summary>设置 InitiateMultipartUploadRequest.set_BucketName(String value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimInitiateMultipartUploadRequest.ConstructorStringString">
            <summary>设置 InitiateMultipartUploadRequest.InitiateMultipartUploadRequest(String bucketName, String key) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimInitiateMultipartUploadRequest.ConstructorStringStringObjectMetadata">
            <summary>设置 InitiateMultipartUploadRequest.InitiateMultipartUploadRequest(String bucketName, String key, ObjectMetadata objectMetadata) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimInitiateMultipartUploadRequest.EncodingTypeGet">
            <summary>设置 InitiateMultipartUploadRequest.get_EncodingType() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimInitiateMultipartUploadRequest.EncodingTypeSetString">
            <summary>设置 InitiateMultipartUploadRequest.set_EncodingType(String value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimInitiateMultipartUploadRequest.KeyGet">
            <summary>设置 InitiateMultipartUploadRequest.get_Key() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimInitiateMultipartUploadRequest.KeySetString">
            <summary>设置 InitiateMultipartUploadRequest.set_Key(String value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimInitiateMultipartUploadRequest.ObjectMetadataGet">
            <summary>设置 InitiateMultipartUploadRequest.get_ObjectMetadata() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimInitiateMultipartUploadRequest.ObjectMetadataSetObjectMetadata">
            <summary>设置 InitiateMultipartUploadRequest.set_ObjectMetadata(ObjectMetadata value) 的 填充码</summary>
        </member>
        <member name="T:Aliyun.OSS.Fakes.ShimInitiateMultipartUploadRequest.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimInitiateMultipartUploadRequest.AllInstances.BucketNameGet">
            <summary>设置 InitiateMultipartUploadRequest.get_BucketName() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimInitiateMultipartUploadRequest.AllInstances.BucketNameSetString">
            <summary>设置 InitiateMultipartUploadRequest.set_BucketName(String value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimInitiateMultipartUploadRequest.AllInstances.EncodingTypeGet">
            <summary>设置 InitiateMultipartUploadRequest.get_EncodingType() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimInitiateMultipartUploadRequest.AllInstances.EncodingTypeSetString">
            <summary>设置 InitiateMultipartUploadRequest.set_EncodingType(String value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimInitiateMultipartUploadRequest.AllInstances.KeyGet">
            <summary>设置 InitiateMultipartUploadRequest.get_Key() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimInitiateMultipartUploadRequest.AllInstances.KeySetString">
            <summary>设置 InitiateMultipartUploadRequest.set_Key(String value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimInitiateMultipartUploadRequest.AllInstances.ObjectMetadataGet">
            <summary>设置 InitiateMultipartUploadRequest.get_ObjectMetadata() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimInitiateMultipartUploadRequest.AllInstances.ObjectMetadataSetObjectMetadata">
            <summary>设置 InitiateMultipartUploadRequest.set_ObjectMetadata(ObjectMetadata value) 的 填充码</summary>
        </member>
        <member name="T:Aliyun.OSS.Fakes.ShimInitiateMultipartUploadResult">
            <summary>Aliyun.OSS.InitiateMultipartUploadResult 的填充码类型</summary>
        </member>
        <member name="M:Aliyun.OSS.Fakes.ShimInitiateMultipartUploadResult.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Aliyun.OSS.Fakes.ShimInitiateMultipartUploadResult.#ctor(Aliyun.OSS.InitiateMultipartUploadResult)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Aliyun.OSS.Fakes.ShimInitiateMultipartUploadResult.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Aliyun.OSS.Fakes.ShimInitiateMultipartUploadResult.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimInitiateMultipartUploadResult.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimInitiateMultipartUploadResult.BucketNameGet">
            <summary>设置 InitiateMultipartUploadResult.get_BucketName() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimInitiateMultipartUploadResult.BucketNameSetString">
            <summary>设置 InitiateMultipartUploadResult.set_BucketName(String value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimInitiateMultipartUploadResult.Constructor">
            <summary>设置 InitiateMultipartUploadResult.InitiateMultipartUploadResult() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimInitiateMultipartUploadResult.KeyGet">
            <summary>设置 InitiateMultipartUploadResult.get_Key() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimInitiateMultipartUploadResult.KeySetString">
            <summary>设置 InitiateMultipartUploadResult.set_Key(String value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimInitiateMultipartUploadResult.UploadIdGet">
            <summary>设置 InitiateMultipartUploadResult.get_UploadId() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimInitiateMultipartUploadResult.UploadIdSetString">
            <summary>设置 InitiateMultipartUploadResult.set_UploadId(String value) 的 填充码</summary>
        </member>
        <member name="T:Aliyun.OSS.Fakes.ShimInitiateMultipartUploadResult.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimInitiateMultipartUploadResult.AllInstances.BucketNameGet">
            <summary>设置 InitiateMultipartUploadResult.get_BucketName() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimInitiateMultipartUploadResult.AllInstances.BucketNameSetString">
            <summary>设置 InitiateMultipartUploadResult.set_BucketName(String value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimInitiateMultipartUploadResult.AllInstances.KeyGet">
            <summary>设置 InitiateMultipartUploadResult.get_Key() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimInitiateMultipartUploadResult.AllInstances.KeySetString">
            <summary>设置 InitiateMultipartUploadResult.set_Key(String value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimInitiateMultipartUploadResult.AllInstances.UploadIdGet">
            <summary>设置 InitiateMultipartUploadResult.get_UploadId() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimInitiateMultipartUploadResult.AllInstances.UploadIdSetString">
            <summary>设置 InitiateMultipartUploadResult.set_UploadId(String value) 的 填充码</summary>
        </member>
        <member name="T:Aliyun.OSS.Fakes.ShimLifecycleRule">
            <summary>Aliyun.OSS.LifecycleRule 的填充码类型</summary>
        </member>
        <member name="M:Aliyun.OSS.Fakes.ShimLifecycleRule.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Aliyun.OSS.Fakes.ShimLifecycleRule.#ctor(Aliyun.OSS.LifecycleRule)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Aliyun.OSS.Fakes.ShimLifecycleRule.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Aliyun.OSS.Fakes.ShimLifecycleRule.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimLifecycleRule.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimLifecycleRule.Constructor">
            <summary>设置 LifecycleRule.LifecycleRule() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimLifecycleRule.ExpirationTimeGet">
            <summary>设置 LifecycleRule.get_ExpirationTime() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimLifecycleRule.ExpirationTimeSetNullableOfDateTime">
            <summary>设置 LifecycleRule.set_ExpirationTime(Nullable`1&lt;DateTime&gt; value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimLifecycleRule.ExpriationDaysGet">
            <summary>设置 LifecycleRule.get_ExpriationDays() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimLifecycleRule.ExpriationDaysSetNullableOfInt32">
            <summary>设置 LifecycleRule.set_ExpriationDays(Nullable`1&lt;Int32&gt; value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimLifecycleRule.IDGet">
            <summary>设置 LifecycleRule.get_ID() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimLifecycleRule.IDSetString">
            <summary>设置 LifecycleRule.set_ID(String value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimLifecycleRule.PrefixGet">
            <summary>设置 LifecycleRule.get_Prefix() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimLifecycleRule.PrefixSetString">
            <summary>设置 LifecycleRule.set_Prefix(String value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimLifecycleRule.StatusGet">
            <summary>设置 LifecycleRule.get_Status() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimLifecycleRule.StatusSetRuleStatus">
            <summary>设置 LifecycleRule.set_Status(RuleStatus value) 的 填充码</summary>
        </member>
        <member name="T:Aliyun.OSS.Fakes.ShimLifecycleRule.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimLifecycleRule.AllInstances.ExpirationTimeGet">
            <summary>设置 LifecycleRule.get_ExpirationTime() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimLifecycleRule.AllInstances.ExpirationTimeSetNullableOfDateTime">
            <summary>设置 LifecycleRule.set_ExpirationTime(Nullable`1&lt;DateTime&gt; value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimLifecycleRule.AllInstances.ExpriationDaysGet">
            <summary>设置 LifecycleRule.get_ExpriationDays() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimLifecycleRule.AllInstances.ExpriationDaysSetNullableOfInt32">
            <summary>设置 LifecycleRule.set_ExpriationDays(Nullable`1&lt;Int32&gt; value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimLifecycleRule.AllInstances.IDGet">
            <summary>设置 LifecycleRule.get_ID() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimLifecycleRule.AllInstances.IDSetString">
            <summary>设置 LifecycleRule.set_ID(String value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimLifecycleRule.AllInstances.PrefixGet">
            <summary>设置 LifecycleRule.get_Prefix() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimLifecycleRule.AllInstances.PrefixSetString">
            <summary>设置 LifecycleRule.set_Prefix(String value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimLifecycleRule.AllInstances.StatusGet">
            <summary>设置 LifecycleRule.get_Status() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimLifecycleRule.AllInstances.StatusSetRuleStatus">
            <summary>设置 LifecycleRule.set_Status(RuleStatus value) 的 填充码</summary>
        </member>
        <member name="T:Aliyun.OSS.Fakes.ShimListBucketsRequest">
            <summary>Aliyun.OSS.ListBucketsRequest 的填充码类型</summary>
        </member>
        <member name="M:Aliyun.OSS.Fakes.ShimListBucketsRequest.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Aliyun.OSS.Fakes.ShimListBucketsRequest.#ctor(Aliyun.OSS.ListBucketsRequest)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Aliyun.OSS.Fakes.ShimListBucketsRequest.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Aliyun.OSS.Fakes.ShimListBucketsRequest.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimListBucketsRequest.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimListBucketsRequest.Constructor">
            <summary>设置 ListBucketsRequest.ListBucketsRequest() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimListBucketsRequest.MarkerGet">
            <summary>设置 ListBucketsRequest.get_Marker() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimListBucketsRequest.MarkerSetString">
            <summary>设置 ListBucketsRequest.set_Marker(String value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimListBucketsRequest.MaxKeysGet">
            <summary>设置 ListBucketsRequest.get_MaxKeys() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimListBucketsRequest.MaxKeysSetNullableOfInt32">
            <summary>设置 ListBucketsRequest.set_MaxKeys(Nullable`1&lt;Int32&gt; value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimListBucketsRequest.PrefixGet">
            <summary>设置 ListBucketsRequest.get_Prefix() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimListBucketsRequest.PrefixSetString">
            <summary>设置 ListBucketsRequest.set_Prefix(String value) 的 填充码</summary>
        </member>
        <member name="T:Aliyun.OSS.Fakes.ShimListBucketsRequest.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimListBucketsRequest.AllInstances.MarkerGet">
            <summary>设置 ListBucketsRequest.get_Marker() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimListBucketsRequest.AllInstances.MarkerSetString">
            <summary>设置 ListBucketsRequest.set_Marker(String value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimListBucketsRequest.AllInstances.MaxKeysGet">
            <summary>设置 ListBucketsRequest.get_MaxKeys() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimListBucketsRequest.AllInstances.MaxKeysSetNullableOfInt32">
            <summary>设置 ListBucketsRequest.set_MaxKeys(Nullable`1&lt;Int32&gt; value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimListBucketsRequest.AllInstances.PrefixGet">
            <summary>设置 ListBucketsRequest.get_Prefix() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimListBucketsRequest.AllInstances.PrefixSetString">
            <summary>设置 ListBucketsRequest.set_Prefix(String value) 的 填充码</summary>
        </member>
        <member name="T:Aliyun.OSS.Fakes.ShimListBucketsResult">
            <summary>Aliyun.OSS.ListBucketsResult 的填充码类型</summary>
        </member>
        <member name="M:Aliyun.OSS.Fakes.ShimListBucketsResult.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Aliyun.OSS.Fakes.ShimListBucketsResult.#ctor(Aliyun.OSS.ListBucketsResult)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Aliyun.OSS.Fakes.ShimListBucketsResult.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Aliyun.OSS.Fakes.ShimListBucketsResult.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimListBucketsResult.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimListBucketsResult.BucketsGet">
            <summary>设置 ListBucketsResult.get_Buckets() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimListBucketsResult.BucketsSetIEnumerableOfBucket">
            <summary>设置 ListBucketsResult.set_Buckets(IEnumerable`1&lt;Bucket&gt; value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimListBucketsResult.Constructor">
            <summary>设置 ListBucketsResult.ListBucketsResult() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimListBucketsResult.IsTruncatedGet">
            <summary>设置 ListBucketsResult.get_IsTruncated() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimListBucketsResult.IsTruncatedSetNullableOfBoolean">
            <summary>设置 ListBucketsResult.set_IsTruncated(Nullable`1&lt;Boolean&gt; value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimListBucketsResult.MarkerGet">
            <summary>设置 ListBucketsResult.get_Marker() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimListBucketsResult.MarkerSetString">
            <summary>设置 ListBucketsResult.set_Marker(String value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimListBucketsResult.MaxKeysGet">
            <summary>设置 ListBucketsResult.get_MaxKeys() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimListBucketsResult.MaxKeysSetNullableOfInt32">
            <summary>设置 ListBucketsResult.set_MaxKeys(Nullable`1&lt;Int32&gt; value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimListBucketsResult.NextMakerGet">
            <summary>设置 ListBucketsResult.get_NextMaker() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimListBucketsResult.NextMakerSetString">
            <summary>设置 ListBucketsResult.set_NextMaker(String value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimListBucketsResult.PrefixGet">
            <summary>设置 ListBucketsResult.get_Prefix() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimListBucketsResult.PrefixSetString">
            <summary>设置 ListBucketsResult.set_Prefix(String value) 的 填充码</summary>
        </member>
        <member name="T:Aliyun.OSS.Fakes.ShimListBucketsResult.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimListBucketsResult.AllInstances.BucketsGet">
            <summary>设置 ListBucketsResult.get_Buckets() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimListBucketsResult.AllInstances.BucketsSetIEnumerableOfBucket">
            <summary>设置 ListBucketsResult.set_Buckets(IEnumerable`1&lt;Bucket&gt; value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimListBucketsResult.AllInstances.IsTruncatedGet">
            <summary>设置 ListBucketsResult.get_IsTruncated() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimListBucketsResult.AllInstances.IsTruncatedSetNullableOfBoolean">
            <summary>设置 ListBucketsResult.set_IsTruncated(Nullable`1&lt;Boolean&gt; value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimListBucketsResult.AllInstances.MarkerGet">
            <summary>设置 ListBucketsResult.get_Marker() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimListBucketsResult.AllInstances.MarkerSetString">
            <summary>设置 ListBucketsResult.set_Marker(String value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimListBucketsResult.AllInstances.MaxKeysGet">
            <summary>设置 ListBucketsResult.get_MaxKeys() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimListBucketsResult.AllInstances.MaxKeysSetNullableOfInt32">
            <summary>设置 ListBucketsResult.set_MaxKeys(Nullable`1&lt;Int32&gt; value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimListBucketsResult.AllInstances.NextMakerGet">
            <summary>设置 ListBucketsResult.get_NextMaker() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimListBucketsResult.AllInstances.NextMakerSetString">
            <summary>设置 ListBucketsResult.set_NextMaker(String value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimListBucketsResult.AllInstances.PrefixGet">
            <summary>设置 ListBucketsResult.get_Prefix() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimListBucketsResult.AllInstances.PrefixSetString">
            <summary>设置 ListBucketsResult.set_Prefix(String value) 的 填充码</summary>
        </member>
        <member name="T:Aliyun.OSS.Fakes.ShimListMultipartUploadsRequest">
            <summary>Aliyun.OSS.ListMultipartUploadsRequest 的填充码类型</summary>
        </member>
        <member name="M:Aliyun.OSS.Fakes.ShimListMultipartUploadsRequest.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Aliyun.OSS.Fakes.ShimListMultipartUploadsRequest.#ctor(Aliyun.OSS.ListMultipartUploadsRequest)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Aliyun.OSS.Fakes.ShimListMultipartUploadsRequest.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Aliyun.OSS.Fakes.ShimListMultipartUploadsRequest.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimListMultipartUploadsRequest.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimListMultipartUploadsRequest.BucketNameGet">
            <summary>设置 ListMultipartUploadsRequest.get_BucketName() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimListMultipartUploadsRequest.BucketNameSetString">
            <summary>设置 ListMultipartUploadsRequest.set_BucketName(String value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimListMultipartUploadsRequest.ConstructorString">
            <summary>设置 ListMultipartUploadsRequest.ListMultipartUploadsRequest(String bucketName) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimListMultipartUploadsRequest.DelimiterGet">
            <summary>设置 ListMultipartUploadsRequest.get_Delimiter() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimListMultipartUploadsRequest.DelimiterSetString">
            <summary>设置 ListMultipartUploadsRequest.set_Delimiter(String value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimListMultipartUploadsRequest.EncodingTypeGet">
            <summary>设置 ListMultipartUploadsRequest.get_EncodingType() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimListMultipartUploadsRequest.EncodingTypeSetString">
            <summary>设置 ListMultipartUploadsRequest.set_EncodingType(String value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimListMultipartUploadsRequest.KeyMarkerGet">
            <summary>设置 ListMultipartUploadsRequest.get_KeyMarker() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimListMultipartUploadsRequest.KeyMarkerSetString">
            <summary>设置 ListMultipartUploadsRequest.set_KeyMarker(String value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimListMultipartUploadsRequest.MaxUploadsGet">
            <summary>设置 ListMultipartUploadsRequest.get_MaxUploads() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimListMultipartUploadsRequest.MaxUploadsSetNullableOfInt32">
            <summary>设置 ListMultipartUploadsRequest.set_MaxUploads(Nullable`1&lt;Int32&gt; value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimListMultipartUploadsRequest.PrefixGet">
            <summary>设置 ListMultipartUploadsRequest.get_Prefix() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimListMultipartUploadsRequest.PrefixSetString">
            <summary>设置 ListMultipartUploadsRequest.set_Prefix(String value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimListMultipartUploadsRequest.UploadIdMarkerGet">
            <summary>设置 ListMultipartUploadsRequest.get_UploadIdMarker() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimListMultipartUploadsRequest.UploadIdMarkerSetString">
            <summary>设置 ListMultipartUploadsRequest.set_UploadIdMarker(String value) 的 填充码</summary>
        </member>
        <member name="T:Aliyun.OSS.Fakes.ShimListMultipartUploadsRequest.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimListMultipartUploadsRequest.AllInstances.BucketNameGet">
            <summary>设置 ListMultipartUploadsRequest.get_BucketName() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimListMultipartUploadsRequest.AllInstances.BucketNameSetString">
            <summary>设置 ListMultipartUploadsRequest.set_BucketName(String value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimListMultipartUploadsRequest.AllInstances.DelimiterGet">
            <summary>设置 ListMultipartUploadsRequest.get_Delimiter() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimListMultipartUploadsRequest.AllInstances.DelimiterSetString">
            <summary>设置 ListMultipartUploadsRequest.set_Delimiter(String value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimListMultipartUploadsRequest.AllInstances.EncodingTypeGet">
            <summary>设置 ListMultipartUploadsRequest.get_EncodingType() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimListMultipartUploadsRequest.AllInstances.EncodingTypeSetString">
            <summary>设置 ListMultipartUploadsRequest.set_EncodingType(String value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimListMultipartUploadsRequest.AllInstances.KeyMarkerGet">
            <summary>设置 ListMultipartUploadsRequest.get_KeyMarker() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimListMultipartUploadsRequest.AllInstances.KeyMarkerSetString">
            <summary>设置 ListMultipartUploadsRequest.set_KeyMarker(String value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimListMultipartUploadsRequest.AllInstances.MaxUploadsGet">
            <summary>设置 ListMultipartUploadsRequest.get_MaxUploads() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimListMultipartUploadsRequest.AllInstances.MaxUploadsSetNullableOfInt32">
            <summary>设置 ListMultipartUploadsRequest.set_MaxUploads(Nullable`1&lt;Int32&gt; value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimListMultipartUploadsRequest.AllInstances.PrefixGet">
            <summary>设置 ListMultipartUploadsRequest.get_Prefix() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimListMultipartUploadsRequest.AllInstances.PrefixSetString">
            <summary>设置 ListMultipartUploadsRequest.set_Prefix(String value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimListMultipartUploadsRequest.AllInstances.UploadIdMarkerGet">
            <summary>设置 ListMultipartUploadsRequest.get_UploadIdMarker() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimListMultipartUploadsRequest.AllInstances.UploadIdMarkerSetString">
            <summary>设置 ListMultipartUploadsRequest.set_UploadIdMarker(String value) 的 填充码</summary>
        </member>
        <member name="T:Aliyun.OSS.Fakes.ShimListObjectsRequest">
            <summary>Aliyun.OSS.ListObjectsRequest 的填充码类型</summary>
        </member>
        <member name="M:Aliyun.OSS.Fakes.ShimListObjectsRequest.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Aliyun.OSS.Fakes.ShimListObjectsRequest.#ctor(Aliyun.OSS.ListObjectsRequest)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Aliyun.OSS.Fakes.ShimListObjectsRequest.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Aliyun.OSS.Fakes.ShimListObjectsRequest.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimListObjectsRequest.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimListObjectsRequest.BucketNameGet">
            <summary>设置 ListObjectsRequest.get_BucketName() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimListObjectsRequest.BucketNameSetString">
            <summary>设置 ListObjectsRequest.set_BucketName(String value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimListObjectsRequest.ConstructorString">
            <summary>设置 ListObjectsRequest.ListObjectsRequest(String bucketName) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimListObjectsRequest.DelimiterGet">
            <summary>设置 ListObjectsRequest.get_Delimiter() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimListObjectsRequest.DelimiterSetString">
            <summary>设置 ListObjectsRequest.set_Delimiter(String value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimListObjectsRequest.EncodingTypeGet">
            <summary>设置 ListObjectsRequest.get_EncodingType() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimListObjectsRequest.EncodingTypeSetString">
            <summary>设置 ListObjectsRequest.set_EncodingType(String value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimListObjectsRequest.MarkerGet">
            <summary>设置 ListObjectsRequest.get_Marker() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimListObjectsRequest.MarkerSetString">
            <summary>设置 ListObjectsRequest.set_Marker(String value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimListObjectsRequest.MaxKeysGet">
            <summary>设置 ListObjectsRequest.get_MaxKeys() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimListObjectsRequest.MaxKeysSetNullableOfInt32">
            <summary>设置 ListObjectsRequest.set_MaxKeys(Nullable`1&lt;Int32&gt; value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimListObjectsRequest.PrefixGet">
            <summary>设置 ListObjectsRequest.get_Prefix() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimListObjectsRequest.PrefixSetString">
            <summary>设置 ListObjectsRequest.set_Prefix(String value) 的 填充码</summary>
        </member>
        <member name="T:Aliyun.OSS.Fakes.ShimListObjectsRequest.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimListObjectsRequest.AllInstances.BucketNameGet">
            <summary>设置 ListObjectsRequest.get_BucketName() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimListObjectsRequest.AllInstances.BucketNameSetString">
            <summary>设置 ListObjectsRequest.set_BucketName(String value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimListObjectsRequest.AllInstances.DelimiterGet">
            <summary>设置 ListObjectsRequest.get_Delimiter() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimListObjectsRequest.AllInstances.DelimiterSetString">
            <summary>设置 ListObjectsRequest.set_Delimiter(String value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimListObjectsRequest.AllInstances.EncodingTypeGet">
            <summary>设置 ListObjectsRequest.get_EncodingType() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimListObjectsRequest.AllInstances.EncodingTypeSetString">
            <summary>设置 ListObjectsRequest.set_EncodingType(String value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimListObjectsRequest.AllInstances.MarkerGet">
            <summary>设置 ListObjectsRequest.get_Marker() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimListObjectsRequest.AllInstances.MarkerSetString">
            <summary>设置 ListObjectsRequest.set_Marker(String value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimListObjectsRequest.AllInstances.MaxKeysGet">
            <summary>设置 ListObjectsRequest.get_MaxKeys() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimListObjectsRequest.AllInstances.MaxKeysSetNullableOfInt32">
            <summary>设置 ListObjectsRequest.set_MaxKeys(Nullable`1&lt;Int32&gt; value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimListObjectsRequest.AllInstances.PrefixGet">
            <summary>设置 ListObjectsRequest.get_Prefix() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimListObjectsRequest.AllInstances.PrefixSetString">
            <summary>设置 ListObjectsRequest.set_Prefix(String value) 的 填充码</summary>
        </member>
        <member name="T:Aliyun.OSS.Fakes.ShimListPartsRequest">
            <summary>Aliyun.OSS.ListPartsRequest 的填充码类型</summary>
        </member>
        <member name="M:Aliyun.OSS.Fakes.ShimListPartsRequest.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Aliyun.OSS.Fakes.ShimListPartsRequest.#ctor(Aliyun.OSS.ListPartsRequest)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Aliyun.OSS.Fakes.ShimListPartsRequest.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Aliyun.OSS.Fakes.ShimListPartsRequest.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimListPartsRequest.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimListPartsRequest.BucketNameGet">
            <summary>设置 ListPartsRequest.get_BucketName() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimListPartsRequest.BucketNameSetString">
            <summary>设置 ListPartsRequest.set_BucketName(String value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimListPartsRequest.ConstructorStringStringString">
            <summary>设置 ListPartsRequest.ListPartsRequest(String bucketName, String key, String uploadId) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimListPartsRequest.EncodingTypeGet">
            <summary>设置 ListPartsRequest.get_EncodingType() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimListPartsRequest.EncodingTypeSetString">
            <summary>设置 ListPartsRequest.set_EncodingType(String value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimListPartsRequest.KeyGet">
            <summary>设置 ListPartsRequest.get_Key() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimListPartsRequest.KeySetString">
            <summary>设置 ListPartsRequest.set_Key(String value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimListPartsRequest.MaxPartsGet">
            <summary>设置 ListPartsRequest.get_MaxParts() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimListPartsRequest.MaxPartsSetNullableOfInt32">
            <summary>设置 ListPartsRequest.set_MaxParts(Nullable`1&lt;Int32&gt; value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimListPartsRequest.PartNumberMarkerGet">
            <summary>设置 ListPartsRequest.get_PartNumberMarker() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimListPartsRequest.PartNumberMarkerSetNullableOfInt32">
            <summary>设置 ListPartsRequest.set_PartNumberMarker(Nullable`1&lt;Int32&gt; value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimListPartsRequest.UploadIdGet">
            <summary>设置 ListPartsRequest.get_UploadId() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimListPartsRequest.UploadIdSetString">
            <summary>设置 ListPartsRequest.set_UploadId(String value) 的 填充码</summary>
        </member>
        <member name="T:Aliyun.OSS.Fakes.ShimListPartsRequest.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimListPartsRequest.AllInstances.BucketNameGet">
            <summary>设置 ListPartsRequest.get_BucketName() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimListPartsRequest.AllInstances.BucketNameSetString">
            <summary>设置 ListPartsRequest.set_BucketName(String value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimListPartsRequest.AllInstances.EncodingTypeGet">
            <summary>设置 ListPartsRequest.get_EncodingType() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimListPartsRequest.AllInstances.EncodingTypeSetString">
            <summary>设置 ListPartsRequest.set_EncodingType(String value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimListPartsRequest.AllInstances.KeyGet">
            <summary>设置 ListPartsRequest.get_Key() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimListPartsRequest.AllInstances.KeySetString">
            <summary>设置 ListPartsRequest.set_Key(String value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimListPartsRequest.AllInstances.MaxPartsGet">
            <summary>设置 ListPartsRequest.get_MaxParts() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimListPartsRequest.AllInstances.MaxPartsSetNullableOfInt32">
            <summary>设置 ListPartsRequest.set_MaxParts(Nullable`1&lt;Int32&gt; value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimListPartsRequest.AllInstances.PartNumberMarkerGet">
            <summary>设置 ListPartsRequest.get_PartNumberMarker() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimListPartsRequest.AllInstances.PartNumberMarkerSetNullableOfInt32">
            <summary>设置 ListPartsRequest.set_PartNumberMarker(Nullable`1&lt;Int32&gt; value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimListPartsRequest.AllInstances.UploadIdGet">
            <summary>设置 ListPartsRequest.get_UploadId() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimListPartsRequest.AllInstances.UploadIdSetString">
            <summary>设置 ListPartsRequest.set_UploadId(String value) 的 填充码</summary>
        </member>
        <member name="T:Aliyun.OSS.Fakes.ShimMultipartUpload">
            <summary>Aliyun.OSS.MultipartUpload 的填充码类型</summary>
        </member>
        <member name="M:Aliyun.OSS.Fakes.ShimMultipartUpload.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Aliyun.OSS.Fakes.ShimMultipartUpload.#ctor(Aliyun.OSS.MultipartUpload)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Aliyun.OSS.Fakes.ShimMultipartUpload.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Aliyun.OSS.Fakes.ShimMultipartUpload.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimMultipartUpload.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimMultipartUpload.Constructor">
            <summary>设置 MultipartUpload.MultipartUpload() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimMultipartUpload.InitiatedGet">
            <summary>设置 MultipartUpload.get_Initiated() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimMultipartUpload.InitiatedSetDateTime">
            <summary>设置 MultipartUpload.set_Initiated(DateTime value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimMultipartUpload.KeyGet">
            <summary>设置 MultipartUpload.get_Key() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimMultipartUpload.KeySetString">
            <summary>设置 MultipartUpload.set_Key(String value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimMultipartUpload.StorageClassGet">
            <summary>设置 MultipartUpload.get_StorageClass() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimMultipartUpload.StorageClassSetString">
            <summary>设置 MultipartUpload.set_StorageClass(String value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimMultipartUpload.ToString">
            <summary>设置 MultipartUpload.ToString() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimMultipartUpload.UploadIdGet">
            <summary>设置 MultipartUpload.get_UploadId() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimMultipartUpload.UploadIdSetString">
            <summary>设置 MultipartUpload.set_UploadId(String value) 的 填充码</summary>
        </member>
        <member name="T:Aliyun.OSS.Fakes.ShimMultipartUpload.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimMultipartUpload.AllInstances.InitiatedGet">
            <summary>设置 MultipartUpload.get_Initiated() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimMultipartUpload.AllInstances.InitiatedSetDateTime">
            <summary>设置 MultipartUpload.set_Initiated(DateTime value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimMultipartUpload.AllInstances.KeyGet">
            <summary>设置 MultipartUpload.get_Key() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimMultipartUpload.AllInstances.KeySetString">
            <summary>设置 MultipartUpload.set_Key(String value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimMultipartUpload.AllInstances.StorageClassGet">
            <summary>设置 MultipartUpload.get_StorageClass() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimMultipartUpload.AllInstances.StorageClassSetString">
            <summary>设置 MultipartUpload.set_StorageClass(String value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimMultipartUpload.AllInstances.ToString01">
            <summary>设置 MultipartUpload.ToString() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimMultipartUpload.AllInstances.UploadIdGet">
            <summary>设置 MultipartUpload.get_UploadId() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimMultipartUpload.AllInstances.UploadIdSetString">
            <summary>设置 MultipartUpload.set_UploadId(String value) 的 填充码</summary>
        </member>
        <member name="T:Aliyun.OSS.Fakes.ShimMultipartUploadListing">
            <summary>Aliyun.OSS.MultipartUploadListing 的填充码类型</summary>
        </member>
        <member name="M:Aliyun.OSS.Fakes.ShimMultipartUploadListing.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Aliyun.OSS.Fakes.ShimMultipartUploadListing.#ctor(Aliyun.OSS.MultipartUploadListing)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Aliyun.OSS.Fakes.ShimMultipartUploadListing.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Aliyun.OSS.Fakes.ShimMultipartUploadListing.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimMultipartUploadListing.AddCommonPrefixString">
            <summary>设置 MultipartUploadListing.AddCommonPrefix(String prefix) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimMultipartUploadListing.AddMultipartUploadMultipartUpload">
            <summary>设置 MultipartUploadListing.AddMultipartUpload(MultipartUpload multipartUpload) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimMultipartUploadListing.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimMultipartUploadListing.BucketNameGet">
            <summary>设置 MultipartUploadListing.get_BucketName() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimMultipartUploadListing.BucketNameSetString">
            <summary>设置 MultipartUploadListing.set_BucketName(String value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimMultipartUploadListing.CommonPrefixesGet">
            <summary>设置 MultipartUploadListing.get_CommonPrefixes() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimMultipartUploadListing.ConstructorString">
            <summary>设置 MultipartUploadListing.MultipartUploadListing(String bucketName) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimMultipartUploadListing.DelimiterGet">
            <summary>设置 MultipartUploadListing.get_Delimiter() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimMultipartUploadListing.DelimiterSetString">
            <summary>设置 MultipartUploadListing.set_Delimiter(String value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimMultipartUploadListing.IsTruncatedGet">
            <summary>设置 MultipartUploadListing.get_IsTruncated() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimMultipartUploadListing.IsTruncatedSetBoolean">
            <summary>设置 MultipartUploadListing.set_IsTruncated(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimMultipartUploadListing.KeyMarkerGet">
            <summary>设置 MultipartUploadListing.get_KeyMarker() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimMultipartUploadListing.KeyMarkerSetString">
            <summary>设置 MultipartUploadListing.set_KeyMarker(String value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimMultipartUploadListing.MaxUploadsGet">
            <summary>设置 MultipartUploadListing.get_MaxUploads() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimMultipartUploadListing.MaxUploadsSetInt32">
            <summary>设置 MultipartUploadListing.set_MaxUploads(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimMultipartUploadListing.MultipartUploadsGet">
            <summary>设置 MultipartUploadListing.get_MultipartUploads() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimMultipartUploadListing.NextKeyMarkerGet">
            <summary>设置 MultipartUploadListing.get_NextKeyMarker() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimMultipartUploadListing.NextKeyMarkerSetString">
            <summary>设置 MultipartUploadListing.set_NextKeyMarker(String value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimMultipartUploadListing.NextUploadIdMarkerGet">
            <summary>设置 MultipartUploadListing.get_NextUploadIdMarker() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimMultipartUploadListing.NextUploadIdMarkerSetString">
            <summary>设置 MultipartUploadListing.set_NextUploadIdMarker(String value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimMultipartUploadListing.PrefixGet">
            <summary>设置 MultipartUploadListing.get_Prefix() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimMultipartUploadListing.PrefixSetString">
            <summary>设置 MultipartUploadListing.set_Prefix(String value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimMultipartUploadListing.UploadIdMarkerGet">
            <summary>设置 MultipartUploadListing.get_UploadIdMarker() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimMultipartUploadListing.UploadIdMarkerSetString">
            <summary>设置 MultipartUploadListing.set_UploadIdMarker(String value) 的 填充码</summary>
        </member>
        <member name="T:Aliyun.OSS.Fakes.ShimMultipartUploadListing.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimMultipartUploadListing.AllInstances.AddCommonPrefixString">
            <summary>设置 MultipartUploadListing.AddCommonPrefix(String prefix) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimMultipartUploadListing.AllInstances.AddMultipartUploadMultipartUpload">
            <summary>设置 MultipartUploadListing.AddMultipartUpload(MultipartUpload multipartUpload) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimMultipartUploadListing.AllInstances.BucketNameGet">
            <summary>设置 MultipartUploadListing.get_BucketName() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimMultipartUploadListing.AllInstances.BucketNameSetString">
            <summary>设置 MultipartUploadListing.set_BucketName(String value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimMultipartUploadListing.AllInstances.CommonPrefixesGet">
            <summary>设置 MultipartUploadListing.get_CommonPrefixes() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimMultipartUploadListing.AllInstances.DelimiterGet">
            <summary>设置 MultipartUploadListing.get_Delimiter() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimMultipartUploadListing.AllInstances.DelimiterSetString">
            <summary>设置 MultipartUploadListing.set_Delimiter(String value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimMultipartUploadListing.AllInstances.IsTruncatedGet">
            <summary>设置 MultipartUploadListing.get_IsTruncated() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimMultipartUploadListing.AllInstances.IsTruncatedSetBoolean">
            <summary>设置 MultipartUploadListing.set_IsTruncated(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimMultipartUploadListing.AllInstances.KeyMarkerGet">
            <summary>设置 MultipartUploadListing.get_KeyMarker() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimMultipartUploadListing.AllInstances.KeyMarkerSetString">
            <summary>设置 MultipartUploadListing.set_KeyMarker(String value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimMultipartUploadListing.AllInstances.MaxUploadsGet">
            <summary>设置 MultipartUploadListing.get_MaxUploads() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimMultipartUploadListing.AllInstances.MaxUploadsSetInt32">
            <summary>设置 MultipartUploadListing.set_MaxUploads(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimMultipartUploadListing.AllInstances.MultipartUploadsGet">
            <summary>设置 MultipartUploadListing.get_MultipartUploads() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimMultipartUploadListing.AllInstances.NextKeyMarkerGet">
            <summary>设置 MultipartUploadListing.get_NextKeyMarker() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimMultipartUploadListing.AllInstances.NextKeyMarkerSetString">
            <summary>设置 MultipartUploadListing.set_NextKeyMarker(String value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimMultipartUploadListing.AllInstances.NextUploadIdMarkerGet">
            <summary>设置 MultipartUploadListing.get_NextUploadIdMarker() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimMultipartUploadListing.AllInstances.NextUploadIdMarkerSetString">
            <summary>设置 MultipartUploadListing.set_NextUploadIdMarker(String value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimMultipartUploadListing.AllInstances.PrefixGet">
            <summary>设置 MultipartUploadListing.get_Prefix() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimMultipartUploadListing.AllInstances.PrefixSetString">
            <summary>设置 MultipartUploadListing.set_Prefix(String value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimMultipartUploadListing.AllInstances.UploadIdMarkerGet">
            <summary>设置 MultipartUploadListing.get_UploadIdMarker() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimMultipartUploadListing.AllInstances.UploadIdMarkerSetString">
            <summary>设置 MultipartUploadListing.set_UploadIdMarker(String value) 的 填充码</summary>
        </member>
        <member name="T:Aliyun.OSS.Fakes.ShimObjectListing">
            <summary>Aliyun.OSS.ObjectListing 的填充码类型</summary>
        </member>
        <member name="M:Aliyun.OSS.Fakes.ShimObjectListing.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Aliyun.OSS.Fakes.ShimObjectListing.#ctor(Aliyun.OSS.ObjectListing)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Aliyun.OSS.Fakes.ShimObjectListing.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Aliyun.OSS.Fakes.ShimObjectListing.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimObjectListing.AddCommonPrefixString">
            <summary>设置 ObjectListing.AddCommonPrefix(String prefix) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimObjectListing.AddObjectSummaryOssObjectSummary">
            <summary>设置 ObjectListing.AddObjectSummary(OssObjectSummary summary) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimObjectListing.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimObjectListing.BucketNameGet">
            <summary>设置 ObjectListing.get_BucketName() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimObjectListing.BucketNameSetString">
            <summary>设置 ObjectListing.set_BucketName(String value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimObjectListing.CommonPrefixesGet">
            <summary>设置 ObjectListing.get_CommonPrefixes() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimObjectListing.ConstructorString">
            <summary>设置 ObjectListing.ObjectListing(String bucketName) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimObjectListing.DelimiterGet">
            <summary>设置 ObjectListing.get_Delimiter() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimObjectListing.DelimiterSetString">
            <summary>设置 ObjectListing.set_Delimiter(String value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimObjectListing.IsTruncatedGet">
            <summary>设置 ObjectListing.get_IsTruncated() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimObjectListing.IsTruncatedSetBoolean">
            <summary>设置 ObjectListing.set_IsTruncated(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimObjectListing.IsTrunkedGet">
            <summary>设置 ObjectListing.get_IsTrunked() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimObjectListing.IsTrunkedSetBoolean">
            <summary>设置 ObjectListing.set_IsTrunked(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimObjectListing.MarkerGet">
            <summary>设置 ObjectListing.get_Marker() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimObjectListing.MarkerSetString">
            <summary>设置 ObjectListing.set_Marker(String value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimObjectListing.MaxKeysGet">
            <summary>设置 ObjectListing.get_MaxKeys() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimObjectListing.MaxKeysSetInt32">
            <summary>设置 ObjectListing.set_MaxKeys(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimObjectListing.NextMarkerGet">
            <summary>设置 ObjectListing.get_NextMarker() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimObjectListing.NextMarkerSetString">
            <summary>设置 ObjectListing.set_NextMarker(String value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimObjectListing.ObjectSummariesGet">
            <summary>设置 ObjectListing.get_ObjectSummaries() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimObjectListing.PrefixGet">
            <summary>设置 ObjectListing.get_Prefix() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimObjectListing.PrefixSetString">
            <summary>设置 ObjectListing.set_Prefix(String value) 的 填充码</summary>
        </member>
        <member name="T:Aliyun.OSS.Fakes.ShimObjectListing.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimObjectListing.AllInstances.AddCommonPrefixString">
            <summary>设置 ObjectListing.AddCommonPrefix(String prefix) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimObjectListing.AllInstances.AddObjectSummaryOssObjectSummary">
            <summary>设置 ObjectListing.AddObjectSummary(OssObjectSummary summary) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimObjectListing.AllInstances.BucketNameGet">
            <summary>设置 ObjectListing.get_BucketName() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimObjectListing.AllInstances.BucketNameSetString">
            <summary>设置 ObjectListing.set_BucketName(String value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimObjectListing.AllInstances.CommonPrefixesGet">
            <summary>设置 ObjectListing.get_CommonPrefixes() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimObjectListing.AllInstances.DelimiterGet">
            <summary>设置 ObjectListing.get_Delimiter() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimObjectListing.AllInstances.DelimiterSetString">
            <summary>设置 ObjectListing.set_Delimiter(String value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimObjectListing.AllInstances.IsTruncatedGet">
            <summary>设置 ObjectListing.get_IsTruncated() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimObjectListing.AllInstances.IsTruncatedSetBoolean">
            <summary>设置 ObjectListing.set_IsTruncated(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimObjectListing.AllInstances.IsTrunkedGet">
            <summary>设置 ObjectListing.get_IsTrunked() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimObjectListing.AllInstances.IsTrunkedSetBoolean">
            <summary>设置 ObjectListing.set_IsTrunked(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimObjectListing.AllInstances.MarkerGet">
            <summary>设置 ObjectListing.get_Marker() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimObjectListing.AllInstances.MarkerSetString">
            <summary>设置 ObjectListing.set_Marker(String value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimObjectListing.AllInstances.MaxKeysGet">
            <summary>设置 ObjectListing.get_MaxKeys() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimObjectListing.AllInstances.MaxKeysSetInt32">
            <summary>设置 ObjectListing.set_MaxKeys(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimObjectListing.AllInstances.NextMarkerGet">
            <summary>设置 ObjectListing.get_NextMarker() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimObjectListing.AllInstances.NextMarkerSetString">
            <summary>设置 ObjectListing.set_NextMarker(String value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimObjectListing.AllInstances.ObjectSummariesGet">
            <summary>设置 ObjectListing.get_ObjectSummaries() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimObjectListing.AllInstances.PrefixGet">
            <summary>设置 ObjectListing.get_Prefix() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimObjectListing.AllInstances.PrefixSetString">
            <summary>设置 ObjectListing.set_Prefix(String value) 的 填充码</summary>
        </member>
        <member name="T:Aliyun.OSS.Fakes.ShimObjectMetadata">
            <summary>Aliyun.OSS.ObjectMetadata 的填充码类型</summary>
        </member>
        <member name="M:Aliyun.OSS.Fakes.ShimObjectMetadata.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Aliyun.OSS.Fakes.ShimObjectMetadata.#ctor(Aliyun.OSS.ObjectMetadata)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Aliyun.OSS.Fakes.ShimObjectMetadata.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Aliyun.OSS.Fakes.ShimObjectMetadata.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimObjectMetadata.AddHeaderStringObject">
            <summary>设置 ObjectMetadata.AddHeader(String key, Object value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimObjectMetadata.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimObjectMetadata.CacheControlGet">
            <summary>设置 ObjectMetadata.get_CacheControl() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimObjectMetadata.CacheControlSetString">
            <summary>设置 ObjectMetadata.set_CacheControl(String value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimObjectMetadata.Constructor">
            <summary>设置 ObjectMetadata.ObjectMetadata() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimObjectMetadata.ContentDispositionGet">
            <summary>设置 ObjectMetadata.get_ContentDisposition() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimObjectMetadata.ContentDispositionSetString">
            <summary>设置 ObjectMetadata.set_ContentDisposition(String value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimObjectMetadata.ContentEncodingGet">
            <summary>设置 ObjectMetadata.get_ContentEncoding() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimObjectMetadata.ContentEncodingSetString">
            <summary>设置 ObjectMetadata.set_ContentEncoding(String value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimObjectMetadata.ContentLengthGet">
            <summary>设置 ObjectMetadata.get_ContentLength() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimObjectMetadata.ContentLengthSetInt64">
            <summary>设置 ObjectMetadata.set_ContentLength(Int64 value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimObjectMetadata.ContentMd5Get">
            <summary>设置 ObjectMetadata.get_ContentMd5() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimObjectMetadata.ContentMd5SetString">
            <summary>设置 ObjectMetadata.set_ContentMd5(String value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimObjectMetadata.ContentTypeGet">
            <summary>设置 ObjectMetadata.get_ContentType() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimObjectMetadata.ContentTypeSetString">
            <summary>设置 ObjectMetadata.set_ContentType(String value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimObjectMetadata.ETagGet">
            <summary>设置 ObjectMetadata.get_ETag() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimObjectMetadata.ETagSetString">
            <summary>设置 ObjectMetadata.set_ETag(String value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimObjectMetadata.ExpirationTimeGet">
            <summary>设置 ObjectMetadata.get_ExpirationTime() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimObjectMetadata.ExpirationTimeSetDateTime">
            <summary>设置 ObjectMetadata.set_ExpirationTime(DateTime value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimObjectMetadata.HasCallbackHeaderObjectMetadata">
            <summary>设置 ObjectMetadata.HasCallbackHeader(ObjectMetadata metadata) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimObjectMetadata.HttpMetadataGet">
            <summary>设置 ObjectMetadata.get_HttpMetadata() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimObjectMetadata.LastModifiedGet">
            <summary>设置 ObjectMetadata.get_LastModified() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimObjectMetadata.LastModifiedSetDateTime">
            <summary>设置 ObjectMetadata.set_LastModified(DateTime value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimObjectMetadata.ObjectTypeGet">
            <summary>设置 ObjectMetadata.get_ObjectType() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimObjectMetadata.PopulateHttpWebRequest">
            <summary>设置 ObjectMetadata.Populate(HttpWebRequest webRequest) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimObjectMetadata.PopulateIDictionaryOfStringString">
            <summary>设置 ObjectMetadata.Populate(IDictionary`2&lt;String,String&gt; requestHeaders) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimObjectMetadata.ServerSideEncryptionGet">
            <summary>设置 ObjectMetadata.get_ServerSideEncryption() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimObjectMetadata.ServerSideEncryptionSetString">
            <summary>设置 ObjectMetadata.set_ServerSideEncryption(String value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimObjectMetadata.UserMetadataGet">
            <summary>设置 ObjectMetadata.get_UserMetadata() 的 填充码</summary>
        </member>
        <member name="T:Aliyun.OSS.Fakes.ShimObjectMetadata.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimObjectMetadata.AllInstances.AddHeaderStringObject">
            <summary>设置 ObjectMetadata.AddHeader(String key, Object value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimObjectMetadata.AllInstances.CacheControlGet">
            <summary>设置 ObjectMetadata.get_CacheControl() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimObjectMetadata.AllInstances.CacheControlSetString">
            <summary>设置 ObjectMetadata.set_CacheControl(String value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimObjectMetadata.AllInstances.ContentDispositionGet">
            <summary>设置 ObjectMetadata.get_ContentDisposition() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimObjectMetadata.AllInstances.ContentDispositionSetString">
            <summary>设置 ObjectMetadata.set_ContentDisposition(String value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimObjectMetadata.AllInstances.ContentEncodingGet">
            <summary>设置 ObjectMetadata.get_ContentEncoding() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimObjectMetadata.AllInstances.ContentEncodingSetString">
            <summary>设置 ObjectMetadata.set_ContentEncoding(String value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimObjectMetadata.AllInstances.ContentLengthGet">
            <summary>设置 ObjectMetadata.get_ContentLength() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimObjectMetadata.AllInstances.ContentLengthSetInt64">
            <summary>设置 ObjectMetadata.set_ContentLength(Int64 value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimObjectMetadata.AllInstances.ContentMd5Get">
            <summary>设置 ObjectMetadata.get_ContentMd5() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimObjectMetadata.AllInstances.ContentMd5SetString">
            <summary>设置 ObjectMetadata.set_ContentMd5(String value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimObjectMetadata.AllInstances.ContentTypeGet">
            <summary>设置 ObjectMetadata.get_ContentType() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimObjectMetadata.AllInstances.ContentTypeSetString">
            <summary>设置 ObjectMetadata.set_ContentType(String value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimObjectMetadata.AllInstances.ETagGet">
            <summary>设置 ObjectMetadata.get_ETag() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimObjectMetadata.AllInstances.ETagSetString">
            <summary>设置 ObjectMetadata.set_ETag(String value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimObjectMetadata.AllInstances.ExpirationTimeGet">
            <summary>设置 ObjectMetadata.get_ExpirationTime() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimObjectMetadata.AllInstances.ExpirationTimeSetDateTime">
            <summary>设置 ObjectMetadata.set_ExpirationTime(DateTime value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimObjectMetadata.AllInstances.HttpMetadataGet">
            <summary>设置 ObjectMetadata.get_HttpMetadata() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimObjectMetadata.AllInstances.LastModifiedGet">
            <summary>设置 ObjectMetadata.get_LastModified() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimObjectMetadata.AllInstances.LastModifiedSetDateTime">
            <summary>设置 ObjectMetadata.set_LastModified(DateTime value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimObjectMetadata.AllInstances.ObjectTypeGet">
            <summary>设置 ObjectMetadata.get_ObjectType() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimObjectMetadata.AllInstances.PopulateHttpWebRequest">
            <summary>设置 ObjectMetadata.Populate(HttpWebRequest webRequest) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimObjectMetadata.AllInstances.PopulateIDictionaryOfStringString">
            <summary>设置 ObjectMetadata.Populate(IDictionary`2&lt;String,String&gt; requestHeaders) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimObjectMetadata.AllInstances.ServerSideEncryptionGet">
            <summary>设置 ObjectMetadata.get_ServerSideEncryption() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimObjectMetadata.AllInstances.ServerSideEncryptionSetString">
            <summary>设置 ObjectMetadata.set_ServerSideEncryption(String value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimObjectMetadata.AllInstances.UserMetadataGet">
            <summary>设置 ObjectMetadata.get_UserMetadata() 的 填充码</summary>
        </member>
        <member name="T:Aliyun.OSS.Fakes.ShimOssClient">
            <summary>Aliyun.OSS.OssClient 的填充码类型</summary>
        </member>
        <member name="M:Aliyun.OSS.Fakes.ShimOssClient.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Aliyun.OSS.Fakes.ShimOssClient.#ctor(Aliyun.OSS.OssClient)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Aliyun.OSS.Fakes.ShimOssClient.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Aliyun.OSS.Fakes.ShimOssClient.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:Aliyun.OSS.Fakes.ShimOssClient.Bind(Aliyun.OSS.IOss)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:Aliyun.OSS.Fakes.ShimOssClient.ThrowIfNullRequestOf1M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{``0})">
            <summary>设置 OssClient.ThrowIfNullRequest(!!0 request) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimOssClient.AbortMultipartUploadAbortMultipartUploadRequest">
            <summary>设置 OssClient.AbortMultipartUpload(AbortMultipartUploadRequest abortMultipartUploadRequest) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimOssClient.AdjustPartSizeNullableOfInt64">
            <summary>设置 OssClient.AdjustPartSize(Nullable`1&lt;Int64&gt; partSize) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimOssClient.AppendObjectAppendObjectRequest">
            <summary>设置 OssClient.AppendObject(AppendObjectRequest request) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimOssClient.BeginAppendObjectAppendObjectRequestAsyncCallbackObject">
            <summary>设置 OssClient.BeginAppendObject(AppendObjectRequest request, AsyncCallback callback, Object state) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimOssClient.BeginCopyObjectCopyObjectRequestAsyncCallbackObject">
            <summary>设置 OssClient.BeginCopyObject(CopyObjectRequest copyObjectRequst, AsyncCallback callback, Object state) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimOssClient.BeginGetObjectGetObjectRequestAsyncCallbackObject">
            <summary>设置 OssClient.BeginGetObject(GetObjectRequest getObjectRequest, AsyncCallback callback, Object state) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimOssClient.BeginGetObjectStringStringAsyncCallbackObject">
            <summary>设置 OssClient.BeginGetObject(String bucketName, String key, AsyncCallback callback, Object state) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimOssClient.BeginListObjectsListObjectsRequestAsyncCallbackObject">
            <summary>设置 OssClient.BeginListObjects(ListObjectsRequest listObjectsRequest, AsyncCallback callback, Object state) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimOssClient.BeginListObjectsStringAsyncCallbackObject">
            <summary>设置 OssClient.BeginListObjects(String bucketName, AsyncCallback callback, Object state) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimOssClient.BeginListObjectsStringStringAsyncCallbackObject">
            <summary>设置 OssClient.BeginListObjects(String bucketName, String prefix, AsyncCallback callback, Object state) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimOssClient.BeginPutObjectPutObjectRequestAsyncCallbackObject">
            <summary>设置 OssClient.BeginPutObject(PutObjectRequest putObjectRequest, AsyncCallback callback, Object state) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimOssClient.BeginPutObjectStringStringStreamAsyncCallbackObject">
            <summary>设置 OssClient.BeginPutObject(String bucketName, String key, Stream content, AsyncCallback callback, Object state) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimOssClient.BeginPutObjectStringStringStreamObjectMetadataAsyncCallbackObject">
            <summary>设置 OssClient.BeginPutObject(String bucketName, String key, Stream content, ObjectMetadata metadata, AsyncCallback callback, Object state) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimOssClient.BeginPutObjectStringStringStringAsyncCallbackObject">
            <summary>设置 OssClient.BeginPutObject(String bucketName, String key, String fileToUpload, AsyncCallback callback, Object state) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimOssClient.BeginPutObjectStringStringStringObjectMetadataAsyncCallbackObject">
            <summary>设置 OssClient.BeginPutObject(String bucketName, String key, String fileToUpload, ObjectMetadata metadata, AsyncCallback callback, Object state) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimOssClient.BeginUploadPartCopyUploadPartCopyRequestAsyncCallbackObject">
            <summary>设置 OssClient.BeginUploadPartCopy(UploadPartCopyRequest uploadPartCopyRequest, AsyncCallback callback, Object state) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimOssClient.BeginUploadPartUploadPartRequestAsyncCallbackObject">
            <summary>设置 OssClient.BeginUploadPart(UploadPartRequest uploadPartRequest, AsyncCallback callback, Object state) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimOssClient.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimOssClient.CompleteMultipartUploadCompleteMultipartUploadRequest">
            <summary>设置 OssClient.CompleteMultipartUpload(CompleteMultipartUploadRequest completeMultipartUploadRequest) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimOssClient.ConstructorStringICredentialsProvider">
            <summary>设置 OssClient.OssClient(String endpoint, ICredentialsProvider credsProvider) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimOssClient.ConstructorStringICredentialsProviderClientConfiguration">
            <summary>设置 OssClient.OssClient(String endpoint, ICredentialsProvider credsProvider, ClientConfiguration configuration) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimOssClient.ConstructorStringStringString">
            <summary>设置 OssClient.OssClient(String endpoint, String accessKeyId, String accessKeySecret) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimOssClient.ConstructorStringStringStringClientConfiguration">
            <summary>设置 OssClient.OssClient(String endpoint, String accessKeyId, String accessKeySecret, ClientConfiguration configuration) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimOssClient.ConstructorStringStringStringString">
            <summary>设置 OssClient.OssClient(String endpoint, String accessKeyId, String accessKeySecret, String securityToken) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimOssClient.ConstructorStringStringStringStringClientConfiguration">
            <summary>设置 OssClient.OssClient(String endpoint, String accessKeyId, String accessKeySecret, String securityToken, ClientConfiguration configuration) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimOssClient.ConstructorUriICredentialsProvider">
            <summary>设置 OssClient.OssClient(Uri endpoint, ICredentialsProvider credsProvider) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimOssClient.ConstructorUriICredentialsProviderClientConfiguration">
            <summary>设置 OssClient.OssClient(Uri endpoint, ICredentialsProvider credsProvider, ClientConfiguration configuration) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimOssClient.ConstructorUriStringString">
            <summary>设置 OssClient.OssClient(Uri endpoint, String accessKeyId, String accessKeySecret) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimOssClient.ConstructorUriStringStringClientConfiguration">
            <summary>设置 OssClient.OssClient(Uri endpoint, String accessKeyId, String accessKeySecret, ClientConfiguration configuration) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimOssClient.ConstructorUriStringStringString">
            <summary>设置 OssClient.OssClient(Uri endpoint, String accessKeyId, String accessKeySecret, String securityToken) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimOssClient.ConstructorUriStringStringStringClientConfiguration">
            <summary>设置 OssClient.OssClient(Uri endpoint, String accessKeyId, String accessKeySecret, String securityToken, ClientConfiguration configuration) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimOssClient.CopyBigObjectCopyObjectRequestNullableOfInt64String">
            <summary>设置 OssClient.CopyBigObject(CopyObjectRequest copyObjectRequest, Nullable`1&lt;Int64&gt; partSize, String checkpointDir) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimOssClient.CopyObjectCopyObjectRequest">
            <summary>设置 OssClient.CopyObject(CopyObjectRequest copyObjectRequst) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimOssClient.CreateBucketString">
            <summary>设置 OssClient.CreateBucket(String bucketName) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimOssClient.DeleteBucketCorsString">
            <summary>设置 OssClient.DeleteBucketCors(String bucketName) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimOssClient.DeleteBucketLoggingString">
            <summary>设置 OssClient.DeleteBucketLogging(String bucketName) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimOssClient.DeleteBucketString">
            <summary>设置 OssClient.DeleteBucket(String bucketName) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimOssClient.DeleteBucketWebsiteString">
            <summary>设置 OssClient.DeleteBucketWebsite(String bucketName) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimOssClient.DeleteObjectStringString">
            <summary>设置 OssClient.DeleteObject(String bucketName, String key) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimOssClient.DeleteObjectsDeleteObjectsRequest">
            <summary>设置 OssClient.DeleteObjects(DeleteObjectsRequest deleteObjectsRequest) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimOssClient.DoesBucketExistString">
            <summary>设置 OssClient.DoesBucketExist(String bucketName) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimOssClient.DoesObjectExistStringString">
            <summary>设置 OssClient.DoesObjectExist(String bucketName, String key) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimOssClient.EndAppendObjectIAsyncResult">
            <summary>设置 OssClient.EndAppendObject(IAsyncResult asyncResult) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimOssClient.EndCopyResultIAsyncResult">
            <summary>设置 OssClient.EndCopyResult(IAsyncResult asyncResult) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimOssClient.EndGetObjectIAsyncResult">
            <summary>设置 OssClient.EndGetObject(IAsyncResult asyncResult) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimOssClient.EndListObjectsIAsyncResult">
            <summary>设置 OssClient.EndListObjects(IAsyncResult asyncResult) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimOssClient.EndPutObjectIAsyncResult">
            <summary>设置 OssClient.EndPutObject(IAsyncResult asyncResult) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimOssClient.EndUploadPartCopyIAsyncResult">
            <summary>设置 OssClient.EndUploadPartCopy(IAsyncResult asyncResult) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimOssClient.EndUploadPartIAsyncResult">
            <summary>设置 OssClient.EndUploadPart(IAsyncResult asyncResult) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimOssClient.FormatEndpointString">
            <summary>设置 OssClient.FormatEndpoint(String endpoint) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimOssClient.GeneratePostPolicyDateTimePolicyConditions">
            <summary>设置 OssClient.GeneratePostPolicy(DateTime expiration, PolicyConditions conds) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimOssClient.GeneratePresignedUriGeneratePresignedUriRequest">
            <summary>设置 OssClient.GeneratePresignedUri(GeneratePresignedUriRequest generatePresignedUriRequest) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimOssClient.GeneratePresignedUriStringString">
            <summary>设置 OssClient.GeneratePresignedUri(String bucketName, String key) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimOssClient.GeneratePresignedUriStringStringDateTime">
            <summary>设置 OssClient.GeneratePresignedUri(String bucketName, String key, DateTime expiration) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimOssClient.GeneratePresignedUriStringStringDateTimeSignHttpMethod">
            <summary>设置 OssClient.GeneratePresignedUri(String bucketName, String key, DateTime expiration, SignHttpMethod method) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimOssClient.GeneratePresignedUriStringStringSignHttpMethod">
            <summary>设置 OssClient.GeneratePresignedUri(String bucketName, String key, SignHttpMethod method) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimOssClient.GetBucketAclString">
            <summary>设置 OssClient.GetBucketAcl(String bucketName) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimOssClient.GetBucketCorsString">
            <summary>设置 OssClient.GetBucketCors(String bucketName) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimOssClient.GetBucketLifecycleString">
            <summary>设置 OssClient.GetBucketLifecycle(String bucketName) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimOssClient.GetBucketLoggingString">
            <summary>设置 OssClient.GetBucketLogging(String bucketName) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimOssClient.GetBucketRefererString">
            <summary>设置 OssClient.GetBucketReferer(String bucketName) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimOssClient.GetBucketWebsiteString">
            <summary>设置 OssClient.GetBucketWebsite(String bucketName) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimOssClient.GetObjectAclStringString">
            <summary>设置 OssClient.GetObjectAcl(String bucketName, String key) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimOssClient.GetObjectGetObjectRequest">
            <summary>设置 OssClient.GetObject(GetObjectRequest getObjectRequest) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimOssClient.GetObjectGetObjectRequestStream">
            <summary>设置 OssClient.GetObject(GetObjectRequest getObjectRequest, Stream output) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimOssClient.GetObjectMetadataStringString">
            <summary>设置 OssClient.GetObjectMetadata(String bucketName, String key) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimOssClient.GetObjectStringString">
            <summary>设置 OssClient.GetObject(String bucketName, String key) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimOssClient.GetObjectUri">
            <summary>设置 OssClient.GetObject(Uri signedUrl) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimOssClient.InitiateMultipartUploadInitiateMultipartUploadRequest">
            <summary>设置 OssClient.InitiateMultipartUpload(InitiateMultipartUploadRequest initiateMultipartUploadRequest) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimOssClient.ListBuckets">
            <summary>设置 OssClient.ListBuckets() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimOssClient.ListBucketsListBucketsRequest">
            <summary>设置 OssClient.ListBuckets(ListBucketsRequest listBucketsRequest) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimOssClient.ListMultipartUploadsListMultipartUploadsRequest">
            <summary>设置 OssClient.ListMultipartUploads(ListMultipartUploadsRequest listMultipartUploadsRequest) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimOssClient.ListObjectsListObjectsRequest">
            <summary>设置 OssClient.ListObjects(ListObjectsRequest listObjectsRequest) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimOssClient.ListObjectsString">
            <summary>设置 OssClient.ListObjects(String bucketName) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimOssClient.ListObjectsStringString">
            <summary>设置 OssClient.ListObjects(String bucketName, String prefix) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimOssClient.ListPartsListPartsRequest">
            <summary>设置 OssClient.ListParts(ListPartsRequest listPartsRequest) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimOssClient.ModifyObjectMetaStringStringObjectMetadataNullableOfInt64String">
            <summary>设置 OssClient.ModifyObjectMeta(String bucketName, String key, ObjectMetadata newMeta, Nullable`1&lt;Int64&gt; partSize, String checkpointDir) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimOssClient.PutBigObjectStringStringStreamObjectMetadataNullableOfInt64">
            <summary>设置 OssClient.PutBigObject(String bucketName, String key, Stream content, ObjectMetadata metadata, Nullable`1&lt;Int64&gt; partSize) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimOssClient.PutBigObjectStringStringStringObjectMetadataNullableOfInt64">
            <summary>设置 OssClient.PutBigObject(String bucketName, String key, String fileToUpload, ObjectMetadata metadata, Nullable`1&lt;Int64&gt; partSize) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimOssClient.PutObjectPutObjectRequest">
            <summary>设置 OssClient.PutObject(PutObjectRequest putObjectRequest) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimOssClient.PutObjectStringStringStream">
            <summary>设置 OssClient.PutObject(String bucketName, String key, Stream content) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimOssClient.PutObjectStringStringStreamObjectMetadata">
            <summary>设置 OssClient.PutObject(String bucketName, String key, Stream content, ObjectMetadata metadata) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimOssClient.PutObjectStringStringString">
            <summary>设置 OssClient.PutObject(String bucketName, String key, String fileToUpload) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimOssClient.PutObjectStringStringStringObjectMetadata">
            <summary>设置 OssClient.PutObject(String bucketName, String key, String fileToUpload, ObjectMetadata metadata) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimOssClient.PutObjectUriStream">
            <summary>设置 OssClient.PutObject(Uri signedUrl, Stream content) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimOssClient.PutObjectUriStreamObjectMetadata">
            <summary>设置 OssClient.PutObject(Uri signedUrl, Stream content, ObjectMetadata metadata) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimOssClient.PutObjectUriString">
            <summary>设置 OssClient.PutObject(Uri signedUrl, String fileToUpload) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimOssClient.PutObjectUriStringObjectMetadata">
            <summary>设置 OssClient.PutObject(Uri signedUrl, String fileToUpload, ObjectMetadata metadata) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimOssClient.ResumableCopyObjectCopyObjectRequestStringNullableOfInt64">
            <summary>设置 OssClient.ResumableCopyObject(CopyObjectRequest copyObjectRequest, String checkpointDir, Nullable`1&lt;Int64&gt; partSize) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimOssClient.ResumableUploadObjectStringStringStreamObjectMetadataStringNullableOfInt64EventHandlerOfStreamTransferProgressArgs">
            <summary>设置 OssClient.ResumableUploadObject(String bucketName, String key, Stream content, ObjectMetadata metadata, String checkpointDir, Nullable`1&lt;Int64&gt; partSize, EventHandler`1&lt;StreamTransferProgressArgs&gt; streamTransferProgress) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimOssClient.ResumableUploadObjectStringStringStringObjectMetadataStringNullableOfInt64EventHandlerOfStreamTransferProgressArgs">
            <summary>设置 OssClient.ResumableUploadObject(String bucketName, String key, String fileToUpload, ObjectMetadata metadata, String checkpointDir, Nullable`1&lt;Int64&gt; partSize, EventHandler`1&lt;StreamTransferProgressArgs&gt; streamTransferProgress) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimOssClient.SetBucketAclSetBucketAclRequest">
            <summary>设置 OssClient.SetBucketAcl(SetBucketAclRequest setBucketAclRequest) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimOssClient.SetBucketAclStringCannedAccessControlList">
            <summary>设置 OssClient.SetBucketAcl(String bucketName, CannedAccessControlList acl) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimOssClient.SetBucketCorsSetBucketCorsRequest">
            <summary>设置 OssClient.SetBucketCors(SetBucketCorsRequest setBucketCorsRequest) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimOssClient.SetBucketLifecycleSetBucketLifecycleRequest">
            <summary>设置 OssClient.SetBucketLifecycle(SetBucketLifecycleRequest setBucketLifecycleRequest) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimOssClient.SetBucketLoggingSetBucketLoggingRequest">
            <summary>设置 OssClient.SetBucketLogging(SetBucketLoggingRequest setBucketLoggingRequest) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimOssClient.SetBucketRefererSetBucketRefererRequest">
            <summary>设置 OssClient.SetBucketReferer(SetBucketRefererRequest setBucketRefererRequest) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimOssClient.SetBucketWebsiteSetBucketWebsiteRequest">
            <summary>设置 OssClient.SetBucketWebsite(SetBucketWebsiteRequest setBucketWebSiteRequest) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimOssClient.SetContentTypeIfNullStringStringObjectMetadataRef">
            <summary>设置 OssClient.SetContentTypeIfNull(String key, String fileName, ObjectMetadata&amp; metadata) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimOssClient.SetEndpointUri">
            <summary>设置 OssClient.SetEndpoint(Uri endpoint) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimOssClient.SetObjectAclSetObjectAclRequest">
            <summary>设置 OssClient.SetObjectAcl(SetObjectAclRequest setObjectAclRequest) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimOssClient.SetObjectAclStringStringCannedAccessControlList">
            <summary>设置 OssClient.SetObjectAcl(String bucketName, String key, CannedAccessControlList acl) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimOssClient.SwitchCredentialsICredentials">
            <summary>设置 OssClient.SwitchCredentials(ICredentials creds) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimOssClient.UploadPartCopyUploadPartCopyRequest">
            <summary>设置 OssClient.UploadPartCopy(UploadPartCopyRequest uploadPartCopyRequest) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimOssClient.UploadPartUploadPartRequest">
            <summary>设置 OssClient.UploadPart(UploadPartRequest uploadPartRequest) 的 填充码</summary>
        </member>
        <member name="T:Aliyun.OSS.Fakes.ShimOssClient.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:Aliyun.OSS.Fakes.ShimOssClient.AllInstances.ThrowIfNullRequestOf1M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{Aliyun.OSS.OssClient,``0})">
            <summary>设置 OssClient.ThrowIfNullRequest(!!0 request) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimOssClient.AllInstances.AbortMultipartUploadAbortMultipartUploadRequest">
            <summary>设置 OssClient.AbortMultipartUpload(AbortMultipartUploadRequest abortMultipartUploadRequest) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimOssClient.AllInstances.AppendObjectAppendObjectRequest">
            <summary>设置 OssClient.AppendObject(AppendObjectRequest request) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimOssClient.AllInstances.BeginAppendObjectAppendObjectRequestAsyncCallbackObject">
            <summary>设置 OssClient.BeginAppendObject(AppendObjectRequest request, AsyncCallback callback, Object state) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimOssClient.AllInstances.BeginCopyObjectCopyObjectRequestAsyncCallbackObject">
            <summary>设置 OssClient.BeginCopyObject(CopyObjectRequest copyObjectRequst, AsyncCallback callback, Object state) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimOssClient.AllInstances.BeginGetObjectGetObjectRequestAsyncCallbackObject">
            <summary>设置 OssClient.BeginGetObject(GetObjectRequest getObjectRequest, AsyncCallback callback, Object state) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimOssClient.AllInstances.BeginGetObjectStringStringAsyncCallbackObject">
            <summary>设置 OssClient.BeginGetObject(String bucketName, String key, AsyncCallback callback, Object state) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimOssClient.AllInstances.BeginListObjectsListObjectsRequestAsyncCallbackObject">
            <summary>设置 OssClient.BeginListObjects(ListObjectsRequest listObjectsRequest, AsyncCallback callback, Object state) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimOssClient.AllInstances.BeginListObjectsStringAsyncCallbackObject">
            <summary>设置 OssClient.BeginListObjects(String bucketName, AsyncCallback callback, Object state) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimOssClient.AllInstances.BeginListObjectsStringStringAsyncCallbackObject">
            <summary>设置 OssClient.BeginListObjects(String bucketName, String prefix, AsyncCallback callback, Object state) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimOssClient.AllInstances.BeginPutObjectPutObjectRequestAsyncCallbackObject">
            <summary>设置 OssClient.BeginPutObject(PutObjectRequest putObjectRequest, AsyncCallback callback, Object state) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimOssClient.AllInstances.BeginPutObjectStringStringStreamAsyncCallbackObject">
            <summary>设置 OssClient.BeginPutObject(String bucketName, String key, Stream content, AsyncCallback callback, Object state) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimOssClient.AllInstances.BeginPutObjectStringStringStreamObjectMetadataAsyncCallbackObject">
            <summary>设置 OssClient.BeginPutObject(String bucketName, String key, Stream content, ObjectMetadata metadata, AsyncCallback callback, Object state) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimOssClient.AllInstances.BeginPutObjectStringStringStringAsyncCallbackObject">
            <summary>设置 OssClient.BeginPutObject(String bucketName, String key, String fileToUpload, AsyncCallback callback, Object state) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimOssClient.AllInstances.BeginPutObjectStringStringStringObjectMetadataAsyncCallbackObject">
            <summary>设置 OssClient.BeginPutObject(String bucketName, String key, String fileToUpload, ObjectMetadata metadata, AsyncCallback callback, Object state) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimOssClient.AllInstances.BeginUploadPartCopyUploadPartCopyRequestAsyncCallbackObject">
            <summary>设置 OssClient.BeginUploadPartCopy(UploadPartCopyRequest uploadPartCopyRequest, AsyncCallback callback, Object state) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimOssClient.AllInstances.BeginUploadPartUploadPartRequestAsyncCallbackObject">
            <summary>设置 OssClient.BeginUploadPart(UploadPartRequest uploadPartRequest, AsyncCallback callback, Object state) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimOssClient.AllInstances.CompleteMultipartUploadCompleteMultipartUploadRequest">
            <summary>设置 OssClient.CompleteMultipartUpload(CompleteMultipartUploadRequest completeMultipartUploadRequest) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimOssClient.AllInstances.CopyBigObjectCopyObjectRequestNullableOfInt64String">
            <summary>设置 OssClient.CopyBigObject(CopyObjectRequest copyObjectRequest, Nullable`1&lt;Int64&gt; partSize, String checkpointDir) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimOssClient.AllInstances.CopyObjectCopyObjectRequest">
            <summary>设置 OssClient.CopyObject(CopyObjectRequest copyObjectRequst) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimOssClient.AllInstances.CreateBucketString">
            <summary>设置 OssClient.CreateBucket(String bucketName) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimOssClient.AllInstances.DeleteBucketCorsString">
            <summary>设置 OssClient.DeleteBucketCors(String bucketName) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimOssClient.AllInstances.DeleteBucketLoggingString">
            <summary>设置 OssClient.DeleteBucketLogging(String bucketName) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimOssClient.AllInstances.DeleteBucketString">
            <summary>设置 OssClient.DeleteBucket(String bucketName) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimOssClient.AllInstances.DeleteBucketWebsiteString">
            <summary>设置 OssClient.DeleteBucketWebsite(String bucketName) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimOssClient.AllInstances.DeleteObjectStringString">
            <summary>设置 OssClient.DeleteObject(String bucketName, String key) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimOssClient.AllInstances.DeleteObjectsDeleteObjectsRequest">
            <summary>设置 OssClient.DeleteObjects(DeleteObjectsRequest deleteObjectsRequest) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimOssClient.AllInstances.DoesBucketExistString">
            <summary>设置 OssClient.DoesBucketExist(String bucketName) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimOssClient.AllInstances.DoesObjectExistStringString">
            <summary>设置 OssClient.DoesObjectExist(String bucketName, String key) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimOssClient.AllInstances.EndAppendObjectIAsyncResult">
            <summary>设置 OssClient.EndAppendObject(IAsyncResult asyncResult) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimOssClient.AllInstances.EndCopyResultIAsyncResult">
            <summary>设置 OssClient.EndCopyResult(IAsyncResult asyncResult) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimOssClient.AllInstances.EndGetObjectIAsyncResult">
            <summary>设置 OssClient.EndGetObject(IAsyncResult asyncResult) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimOssClient.AllInstances.EndListObjectsIAsyncResult">
            <summary>设置 OssClient.EndListObjects(IAsyncResult asyncResult) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimOssClient.AllInstances.EndPutObjectIAsyncResult">
            <summary>设置 OssClient.EndPutObject(IAsyncResult asyncResult) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimOssClient.AllInstances.EndUploadPartCopyIAsyncResult">
            <summary>设置 OssClient.EndUploadPartCopy(IAsyncResult asyncResult) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimOssClient.AllInstances.EndUploadPartIAsyncResult">
            <summary>设置 OssClient.EndUploadPart(IAsyncResult asyncResult) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimOssClient.AllInstances.GeneratePostPolicyDateTimePolicyConditions">
            <summary>设置 OssClient.GeneratePostPolicy(DateTime expiration, PolicyConditions conds) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimOssClient.AllInstances.GeneratePresignedUriGeneratePresignedUriRequest">
            <summary>设置 OssClient.GeneratePresignedUri(GeneratePresignedUriRequest generatePresignedUriRequest) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimOssClient.AllInstances.GeneratePresignedUriStringString">
            <summary>设置 OssClient.GeneratePresignedUri(String bucketName, String key) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimOssClient.AllInstances.GeneratePresignedUriStringStringDateTime">
            <summary>设置 OssClient.GeneratePresignedUri(String bucketName, String key, DateTime expiration) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimOssClient.AllInstances.GeneratePresignedUriStringStringDateTimeSignHttpMethod">
            <summary>设置 OssClient.GeneratePresignedUri(String bucketName, String key, DateTime expiration, SignHttpMethod method) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimOssClient.AllInstances.GeneratePresignedUriStringStringSignHttpMethod">
            <summary>设置 OssClient.GeneratePresignedUri(String bucketName, String key, SignHttpMethod method) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimOssClient.AllInstances.GetBucketAclString">
            <summary>设置 OssClient.GetBucketAcl(String bucketName) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimOssClient.AllInstances.GetBucketCorsString">
            <summary>设置 OssClient.GetBucketCors(String bucketName) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimOssClient.AllInstances.GetBucketLifecycleString">
            <summary>设置 OssClient.GetBucketLifecycle(String bucketName) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimOssClient.AllInstances.GetBucketLoggingString">
            <summary>设置 OssClient.GetBucketLogging(String bucketName) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimOssClient.AllInstances.GetBucketRefererString">
            <summary>设置 OssClient.GetBucketReferer(String bucketName) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimOssClient.AllInstances.GetBucketWebsiteString">
            <summary>设置 OssClient.GetBucketWebsite(String bucketName) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimOssClient.AllInstances.GetObjectAclStringString">
            <summary>设置 OssClient.GetObjectAcl(String bucketName, String key) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimOssClient.AllInstances.GetObjectGetObjectRequest">
            <summary>设置 OssClient.GetObject(GetObjectRequest getObjectRequest) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimOssClient.AllInstances.GetObjectGetObjectRequestStream">
            <summary>设置 OssClient.GetObject(GetObjectRequest getObjectRequest, Stream output) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimOssClient.AllInstances.GetObjectMetadataStringString">
            <summary>设置 OssClient.GetObjectMetadata(String bucketName, String key) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimOssClient.AllInstances.GetObjectStringString">
            <summary>设置 OssClient.GetObject(String bucketName, String key) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimOssClient.AllInstances.GetObjectUri">
            <summary>设置 OssClient.GetObject(Uri signedUrl) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimOssClient.AllInstances.InitiateMultipartUploadInitiateMultipartUploadRequest">
            <summary>设置 OssClient.InitiateMultipartUpload(InitiateMultipartUploadRequest initiateMultipartUploadRequest) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimOssClient.AllInstances.ListBuckets">
            <summary>设置 OssClient.ListBuckets() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimOssClient.AllInstances.ListBucketsListBucketsRequest">
            <summary>设置 OssClient.ListBuckets(ListBucketsRequest listBucketsRequest) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimOssClient.AllInstances.ListMultipartUploadsListMultipartUploadsRequest">
            <summary>设置 OssClient.ListMultipartUploads(ListMultipartUploadsRequest listMultipartUploadsRequest) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimOssClient.AllInstances.ListObjectsListObjectsRequest">
            <summary>设置 OssClient.ListObjects(ListObjectsRequest listObjectsRequest) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimOssClient.AllInstances.ListObjectsString">
            <summary>设置 OssClient.ListObjects(String bucketName) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimOssClient.AllInstances.ListObjectsStringString">
            <summary>设置 OssClient.ListObjects(String bucketName, String prefix) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimOssClient.AllInstances.ListPartsListPartsRequest">
            <summary>设置 OssClient.ListParts(ListPartsRequest listPartsRequest) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimOssClient.AllInstances.ModifyObjectMetaStringStringObjectMetadataNullableOfInt64String">
            <summary>设置 OssClient.ModifyObjectMeta(String bucketName, String key, ObjectMetadata newMeta, Nullable`1&lt;Int64&gt; partSize, String checkpointDir) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimOssClient.AllInstances.PutBigObjectStringStringStreamObjectMetadataNullableOfInt64">
            <summary>设置 OssClient.PutBigObject(String bucketName, String key, Stream content, ObjectMetadata metadata, Nullable`1&lt;Int64&gt; partSize) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimOssClient.AllInstances.PutBigObjectStringStringStringObjectMetadataNullableOfInt64">
            <summary>设置 OssClient.PutBigObject(String bucketName, String key, String fileToUpload, ObjectMetadata metadata, Nullable`1&lt;Int64&gt; partSize) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimOssClient.AllInstances.PutObjectPutObjectRequest">
            <summary>设置 OssClient.PutObject(PutObjectRequest putObjectRequest) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimOssClient.AllInstances.PutObjectStringStringStream">
            <summary>设置 OssClient.PutObject(String bucketName, String key, Stream content) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimOssClient.AllInstances.PutObjectStringStringStreamObjectMetadata">
            <summary>设置 OssClient.PutObject(String bucketName, String key, Stream content, ObjectMetadata metadata) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimOssClient.AllInstances.PutObjectStringStringString">
            <summary>设置 OssClient.PutObject(String bucketName, String key, String fileToUpload) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimOssClient.AllInstances.PutObjectStringStringStringObjectMetadata">
            <summary>设置 OssClient.PutObject(String bucketName, String key, String fileToUpload, ObjectMetadata metadata) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimOssClient.AllInstances.PutObjectUriStream">
            <summary>设置 OssClient.PutObject(Uri signedUrl, Stream content) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimOssClient.AllInstances.PutObjectUriStreamObjectMetadata">
            <summary>设置 OssClient.PutObject(Uri signedUrl, Stream content, ObjectMetadata metadata) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimOssClient.AllInstances.PutObjectUriString">
            <summary>设置 OssClient.PutObject(Uri signedUrl, String fileToUpload) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimOssClient.AllInstances.PutObjectUriStringObjectMetadata">
            <summary>设置 OssClient.PutObject(Uri signedUrl, String fileToUpload, ObjectMetadata metadata) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimOssClient.AllInstances.ResumableCopyObjectCopyObjectRequestStringNullableOfInt64">
            <summary>设置 OssClient.ResumableCopyObject(CopyObjectRequest copyObjectRequest, String checkpointDir, Nullable`1&lt;Int64&gt; partSize) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimOssClient.AllInstances.ResumableUploadObjectStringStringStreamObjectMetadataStringNullableOfInt64EventHandlerOfStreamTransferProgressArgs">
            <summary>设置 OssClient.ResumableUploadObject(String bucketName, String key, Stream content, ObjectMetadata metadata, String checkpointDir, Nullable`1&lt;Int64&gt; partSize, EventHandler`1&lt;StreamTransferProgressArgs&gt; streamTransferProgress) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimOssClient.AllInstances.ResumableUploadObjectStringStringStringObjectMetadataStringNullableOfInt64EventHandlerOfStreamTransferProgressArgs">
            <summary>设置 OssClient.ResumableUploadObject(String bucketName, String key, String fileToUpload, ObjectMetadata metadata, String checkpointDir, Nullable`1&lt;Int64&gt; partSize, EventHandler`1&lt;StreamTransferProgressArgs&gt; streamTransferProgress) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimOssClient.AllInstances.SetBucketAclSetBucketAclRequest">
            <summary>设置 OssClient.SetBucketAcl(SetBucketAclRequest setBucketAclRequest) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimOssClient.AllInstances.SetBucketAclStringCannedAccessControlList">
            <summary>设置 OssClient.SetBucketAcl(String bucketName, CannedAccessControlList acl) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimOssClient.AllInstances.SetBucketCorsSetBucketCorsRequest">
            <summary>设置 OssClient.SetBucketCors(SetBucketCorsRequest setBucketCorsRequest) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimOssClient.AllInstances.SetBucketLifecycleSetBucketLifecycleRequest">
            <summary>设置 OssClient.SetBucketLifecycle(SetBucketLifecycleRequest setBucketLifecycleRequest) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimOssClient.AllInstances.SetBucketLoggingSetBucketLoggingRequest">
            <summary>设置 OssClient.SetBucketLogging(SetBucketLoggingRequest setBucketLoggingRequest) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimOssClient.AllInstances.SetBucketRefererSetBucketRefererRequest">
            <summary>设置 OssClient.SetBucketReferer(SetBucketRefererRequest setBucketRefererRequest) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimOssClient.AllInstances.SetBucketWebsiteSetBucketWebsiteRequest">
            <summary>设置 OssClient.SetBucketWebsite(SetBucketWebsiteRequest setBucketWebSiteRequest) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimOssClient.AllInstances.SetEndpointUri">
            <summary>设置 OssClient.SetEndpoint(Uri endpoint) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimOssClient.AllInstances.SetObjectAclSetObjectAclRequest">
            <summary>设置 OssClient.SetObjectAcl(SetObjectAclRequest setObjectAclRequest) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimOssClient.AllInstances.SetObjectAclStringStringCannedAccessControlList">
            <summary>设置 OssClient.SetObjectAcl(String bucketName, String key, CannedAccessControlList acl) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimOssClient.AllInstances.SwitchCredentialsICredentials">
            <summary>设置 OssClient.SwitchCredentials(ICredentials creds) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimOssClient.AllInstances.UploadPartCopyUploadPartCopyRequest">
            <summary>设置 OssClient.UploadPartCopy(UploadPartCopyRequest uploadPartCopyRequest) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimOssClient.AllInstances.UploadPartUploadPartRequest">
            <summary>设置 OssClient.UploadPart(UploadPartRequest uploadPartRequest) 的 填充码</summary>
        </member>
        <member name="T:Aliyun.OSS.Fakes.ShimOssObject">
            <summary>Aliyun.OSS.OssObject 的填充码类型</summary>
        </member>
        <member name="M:Aliyun.OSS.Fakes.ShimOssObject.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Aliyun.OSS.Fakes.ShimOssObject.#ctor(Aliyun.OSS.OssObject)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Aliyun.OSS.Fakes.ShimOssObject.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Aliyun.OSS.Fakes.ShimOssObject.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:Aliyun.OSS.Fakes.ShimOssObject.Bind(System.IDisposable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimOssObject.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimOssObject.BucketNameGet">
            <summary>设置 OssObject.get_BucketName() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimOssObject.BucketNameSetString">
            <summary>设置 OssObject.set_BucketName(String value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimOssObject.Constructor">
            <summary>设置 OssObject.OssObject() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimOssObject.ConstructorString">
            <summary>设置 OssObject.OssObject(String key) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimOssObject.ContentGet">
            <summary>设置 OssObject.get_Content() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimOssObject.KeyGet">
            <summary>设置 OssObject.get_Key() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimOssObject.KeySetString">
            <summary>设置 OssObject.set_Key(String value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimOssObject.MetadataGet">
            <summary>设置 OssObject.get_Metadata() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimOssObject.MetadataSetObjectMetadata">
            <summary>设置 OssObject.set_Metadata(ObjectMetadata value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimOssObject.ToString">
            <summary>设置 OssObject.ToString() 的 填充码</summary>
        </member>
        <member name="T:Aliyun.OSS.Fakes.ShimOssObject.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimOssObject.AllInstances.BucketNameGet">
            <summary>设置 OssObject.get_BucketName() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimOssObject.AllInstances.BucketNameSetString">
            <summary>设置 OssObject.set_BucketName(String value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimOssObject.AllInstances.ContentGet">
            <summary>设置 OssObject.get_Content() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimOssObject.AllInstances.KeyGet">
            <summary>设置 OssObject.get_Key() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimOssObject.AllInstances.KeySetString">
            <summary>设置 OssObject.set_Key(String value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimOssObject.AllInstances.MetadataGet">
            <summary>设置 OssObject.get_Metadata() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimOssObject.AllInstances.MetadataSetObjectMetadata">
            <summary>设置 OssObject.set_Metadata(ObjectMetadata value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimOssObject.AllInstances.ToString01">
            <summary>设置 OssObject.ToString() 的 填充码</summary>
        </member>
        <member name="T:Aliyun.OSS.Fakes.ShimOssObjectSummary">
            <summary>Aliyun.OSS.OssObjectSummary 的填充码类型</summary>
        </member>
        <member name="M:Aliyun.OSS.Fakes.ShimOssObjectSummary.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Aliyun.OSS.Fakes.ShimOssObjectSummary.#ctor(Aliyun.OSS.OssObjectSummary)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Aliyun.OSS.Fakes.ShimOssObjectSummary.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Aliyun.OSS.Fakes.ShimOssObjectSummary.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimOssObjectSummary.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimOssObjectSummary.BucketNameGet">
            <summary>设置 OssObjectSummary.get_BucketName() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimOssObjectSummary.BucketNameSetString">
            <summary>设置 OssObjectSummary.set_BucketName(String value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimOssObjectSummary.Constructor">
            <summary>设置 OssObjectSummary.OssObjectSummary() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimOssObjectSummary.ETagGet">
            <summary>设置 OssObjectSummary.get_ETag() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimOssObjectSummary.ETagSetString">
            <summary>设置 OssObjectSummary.set_ETag(String value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimOssObjectSummary.KeyGet">
            <summary>设置 OssObjectSummary.get_Key() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimOssObjectSummary.KeySetString">
            <summary>设置 OssObjectSummary.set_Key(String value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimOssObjectSummary.LastModifiedGet">
            <summary>设置 OssObjectSummary.get_LastModified() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimOssObjectSummary.LastModifiedSetDateTime">
            <summary>设置 OssObjectSummary.set_LastModified(DateTime value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimOssObjectSummary.OwnerGet">
            <summary>设置 OssObjectSummary.get_Owner() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimOssObjectSummary.OwnerSetOwner">
            <summary>设置 OssObjectSummary.set_Owner(Owner value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimOssObjectSummary.SizeGet">
            <summary>设置 OssObjectSummary.get_Size() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimOssObjectSummary.SizeSetInt64">
            <summary>设置 OssObjectSummary.set_Size(Int64 value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimOssObjectSummary.StorageClassGet">
            <summary>设置 OssObjectSummary.get_StorageClass() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimOssObjectSummary.StorageClassSetString">
            <summary>设置 OssObjectSummary.set_StorageClass(String value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimOssObjectSummary.ToString">
            <summary>设置 OssObjectSummary.ToString() 的 填充码</summary>
        </member>
        <member name="T:Aliyun.OSS.Fakes.ShimOssObjectSummary.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimOssObjectSummary.AllInstances.BucketNameGet">
            <summary>设置 OssObjectSummary.get_BucketName() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimOssObjectSummary.AllInstances.BucketNameSetString">
            <summary>设置 OssObjectSummary.set_BucketName(String value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimOssObjectSummary.AllInstances.ETagGet">
            <summary>设置 OssObjectSummary.get_ETag() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimOssObjectSummary.AllInstances.ETagSetString">
            <summary>设置 OssObjectSummary.set_ETag(String value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimOssObjectSummary.AllInstances.KeyGet">
            <summary>设置 OssObjectSummary.get_Key() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimOssObjectSummary.AllInstances.KeySetString">
            <summary>设置 OssObjectSummary.set_Key(String value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimOssObjectSummary.AllInstances.LastModifiedGet">
            <summary>设置 OssObjectSummary.get_LastModified() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimOssObjectSummary.AllInstances.LastModifiedSetDateTime">
            <summary>设置 OssObjectSummary.set_LastModified(DateTime value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimOssObjectSummary.AllInstances.OwnerGet">
            <summary>设置 OssObjectSummary.get_Owner() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimOssObjectSummary.AllInstances.OwnerSetOwner">
            <summary>设置 OssObjectSummary.set_Owner(Owner value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimOssObjectSummary.AllInstances.SizeGet">
            <summary>设置 OssObjectSummary.get_Size() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimOssObjectSummary.AllInstances.SizeSetInt64">
            <summary>设置 OssObjectSummary.set_Size(Int64 value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimOssObjectSummary.AllInstances.StorageClassGet">
            <summary>设置 OssObjectSummary.get_StorageClass() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimOssObjectSummary.AllInstances.StorageClassSetString">
            <summary>设置 OssObjectSummary.set_StorageClass(String value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimOssObjectSummary.AllInstances.ToString01">
            <summary>设置 OssObjectSummary.ToString() 的 填充码</summary>
        </member>
        <member name="T:Aliyun.OSS.Fakes.ShimOwner">
            <summary>Aliyun.OSS.Owner 的填充码类型</summary>
        </member>
        <member name="M:Aliyun.OSS.Fakes.ShimOwner.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Aliyun.OSS.Fakes.ShimOwner.#ctor(Aliyun.OSS.Owner)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Aliyun.OSS.Fakes.ShimOwner.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Aliyun.OSS.Fakes.ShimOwner.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimOwner.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimOwner.Constructor">
            <summary>设置 Owner.Owner() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimOwner.ConstructorStringString">
            <summary>设置 Owner.Owner(String id, String displayName) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimOwner.DisplayNameGet">
            <summary>设置 Owner.get_DisplayName() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimOwner.DisplayNameSetString">
            <summary>设置 Owner.set_DisplayName(String value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimOwner.IdGet">
            <summary>设置 Owner.get_Id() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimOwner.IdSetString">
            <summary>设置 Owner.set_Id(String value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimOwner.ToString">
            <summary>设置 Owner.ToString() 的 填充码</summary>
        </member>
        <member name="T:Aliyun.OSS.Fakes.ShimOwner.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimOwner.AllInstances.DisplayNameGet">
            <summary>设置 Owner.get_DisplayName() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimOwner.AllInstances.DisplayNameSetString">
            <summary>设置 Owner.set_DisplayName(String value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimOwner.AllInstances.IdGet">
            <summary>设置 Owner.get_Id() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimOwner.AllInstances.IdSetString">
            <summary>设置 Owner.set_Id(String value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimOwner.AllInstances.ToString01">
            <summary>设置 Owner.ToString() 的 填充码</summary>
        </member>
        <member name="T:Aliyun.OSS.Fakes.ShimPart">
            <summary>Aliyun.OSS.Part 的填充码类型</summary>
        </member>
        <member name="M:Aliyun.OSS.Fakes.ShimPart.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Aliyun.OSS.Fakes.ShimPart.#ctor(Aliyun.OSS.Part)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Aliyun.OSS.Fakes.ShimPart.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Aliyun.OSS.Fakes.ShimPart.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimPart.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimPart.Constructor">
            <summary>设置 Part.Part() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimPart.ETagGet">
            <summary>设置 Part.get_ETag() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimPart.ETagSetString">
            <summary>设置 Part.set_ETag(String value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimPart.LastModifiedGet">
            <summary>设置 Part.get_LastModified() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimPart.LastModifiedSetDateTime">
            <summary>设置 Part.set_LastModified(DateTime value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimPart.PartETagGet">
            <summary>设置 Part.get_PartETag() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimPart.PartNumberGet">
            <summary>设置 Part.get_PartNumber() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimPart.PartNumberSetInt32">
            <summary>设置 Part.set_PartNumber(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimPart.SizeGet">
            <summary>设置 Part.get_Size() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimPart.SizeSetInt64">
            <summary>设置 Part.set_Size(Int64 value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimPart.ToString">
            <summary>设置 Part.ToString() 的 填充码</summary>
        </member>
        <member name="T:Aliyun.OSS.Fakes.ShimPart.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimPart.AllInstances.ETagGet">
            <summary>设置 Part.get_ETag() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimPart.AllInstances.ETagSetString">
            <summary>设置 Part.set_ETag(String value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimPart.AllInstances.LastModifiedGet">
            <summary>设置 Part.get_LastModified() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimPart.AllInstances.LastModifiedSetDateTime">
            <summary>设置 Part.set_LastModified(DateTime value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimPart.AllInstances.PartETagGet">
            <summary>设置 Part.get_PartETag() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimPart.AllInstances.PartNumberGet">
            <summary>设置 Part.get_PartNumber() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimPart.AllInstances.PartNumberSetInt32">
            <summary>设置 Part.set_PartNumber(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimPart.AllInstances.SizeGet">
            <summary>设置 Part.get_Size() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimPart.AllInstances.SizeSetInt64">
            <summary>设置 Part.set_Size(Int64 value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimPart.AllInstances.ToString01">
            <summary>设置 Part.ToString() 的 填充码</summary>
        </member>
        <member name="T:Aliyun.OSS.Fakes.ShimPartETag">
            <summary>Aliyun.OSS.PartETag 的填充码类型</summary>
        </member>
        <member name="M:Aliyun.OSS.Fakes.ShimPartETag.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Aliyun.OSS.Fakes.ShimPartETag.#ctor(Aliyun.OSS.PartETag)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Aliyun.OSS.Fakes.ShimPartETag.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Aliyun.OSS.Fakes.ShimPartETag.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimPartETag.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimPartETag.ConstructorInt32String">
            <summary>设置 PartETag.PartETag(Int32 partNumber, String eTag) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimPartETag.ETagGet">
            <summary>设置 PartETag.get_ETag() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimPartETag.ETagSetString">
            <summary>设置 PartETag.set_ETag(String value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimPartETag.PartNumberGet">
            <summary>设置 PartETag.get_PartNumber() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimPartETag.PartNumberSetInt32">
            <summary>设置 PartETag.set_PartNumber(Int32 value) 的 填充码</summary>
        </member>
        <member name="T:Aliyun.OSS.Fakes.ShimPartETag.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimPartETag.AllInstances.ETagGet">
            <summary>设置 PartETag.get_ETag() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimPartETag.AllInstances.ETagSetString">
            <summary>设置 PartETag.set_ETag(String value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimPartETag.AllInstances.PartNumberGet">
            <summary>设置 PartETag.get_PartNumber() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimPartETag.AllInstances.PartNumberSetInt32">
            <summary>设置 PartETag.set_PartNumber(Int32 value) 的 填充码</summary>
        </member>
        <member name="T:Aliyun.OSS.Fakes.ShimPartListing">
            <summary>Aliyun.OSS.PartListing 的填充码类型</summary>
        </member>
        <member name="M:Aliyun.OSS.Fakes.ShimPartListing.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Aliyun.OSS.Fakes.ShimPartListing.#ctor(Aliyun.OSS.PartListing)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Aliyun.OSS.Fakes.ShimPartListing.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Aliyun.OSS.Fakes.ShimPartListing.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimPartListing.AddPartPart">
            <summary>设置 PartListing.AddPart(Part part) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimPartListing.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimPartListing.BucketNameGet">
            <summary>设置 PartListing.get_BucketName() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimPartListing.BucketNameSetString">
            <summary>设置 PartListing.set_BucketName(String value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimPartListing.Constructor">
            <summary>设置 PartListing.PartListing() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimPartListing.IsTruncatedGet">
            <summary>设置 PartListing.get_IsTruncated() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimPartListing.IsTruncatedSetBoolean">
            <summary>设置 PartListing.set_IsTruncated(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimPartListing.KeyGet">
            <summary>设置 PartListing.get_Key() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimPartListing.KeySetString">
            <summary>设置 PartListing.set_Key(String value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimPartListing.MaxPartsGet">
            <summary>设置 PartListing.get_MaxParts() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimPartListing.MaxPartsSetInt32">
            <summary>设置 PartListing.set_MaxParts(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimPartListing.NextPartNumberMarkerGet">
            <summary>设置 PartListing.get_NextPartNumberMarker() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimPartListing.NextPartNumberMarkerSetInt32">
            <summary>设置 PartListing.set_NextPartNumberMarker(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimPartListing.PartNumberMarkerGet">
            <summary>设置 PartListing.get_PartNumberMarker() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimPartListing.PartNumberMarkerSetInt32">
            <summary>设置 PartListing.set_PartNumberMarker(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimPartListing.PartsGet">
            <summary>设置 PartListing.get_Parts() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimPartListing.UploadIdGet">
            <summary>设置 PartListing.get_UploadId() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimPartListing.UploadIdSetString">
            <summary>设置 PartListing.set_UploadId(String value) 的 填充码</summary>
        </member>
        <member name="T:Aliyun.OSS.Fakes.ShimPartListing.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimPartListing.AllInstances.AddPartPart">
            <summary>设置 PartListing.AddPart(Part part) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimPartListing.AllInstances.BucketNameGet">
            <summary>设置 PartListing.get_BucketName() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimPartListing.AllInstances.BucketNameSetString">
            <summary>设置 PartListing.set_BucketName(String value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimPartListing.AllInstances.IsTruncatedGet">
            <summary>设置 PartListing.get_IsTruncated() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimPartListing.AllInstances.IsTruncatedSetBoolean">
            <summary>设置 PartListing.set_IsTruncated(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimPartListing.AllInstances.KeyGet">
            <summary>设置 PartListing.get_Key() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimPartListing.AllInstances.KeySetString">
            <summary>设置 PartListing.set_Key(String value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimPartListing.AllInstances.MaxPartsGet">
            <summary>设置 PartListing.get_MaxParts() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimPartListing.AllInstances.MaxPartsSetInt32">
            <summary>设置 PartListing.set_MaxParts(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimPartListing.AllInstances.NextPartNumberMarkerGet">
            <summary>设置 PartListing.get_NextPartNumberMarker() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimPartListing.AllInstances.NextPartNumberMarkerSetInt32">
            <summary>设置 PartListing.set_NextPartNumberMarker(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimPartListing.AllInstances.PartNumberMarkerGet">
            <summary>设置 PartListing.get_PartNumberMarker() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimPartListing.AllInstances.PartNumberMarkerSetInt32">
            <summary>设置 PartListing.set_PartNumberMarker(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimPartListing.AllInstances.PartsGet">
            <summary>设置 PartListing.get_Parts() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimPartListing.AllInstances.UploadIdGet">
            <summary>设置 PartListing.get_UploadId() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimPartListing.AllInstances.UploadIdSetString">
            <summary>设置 PartListing.set_UploadId(String value) 的 填充码</summary>
        </member>
        <member name="T:Aliyun.OSS.Fakes.ShimPolicyConditions">
            <summary>Aliyun.OSS.PolicyConditions 的填充码类型</summary>
        </member>
        <member name="M:Aliyun.OSS.Fakes.ShimPolicyConditions.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Aliyun.OSS.Fakes.ShimPolicyConditions.#ctor(Aliyun.OSS.PolicyConditions)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Aliyun.OSS.Fakes.ShimPolicyConditions.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Aliyun.OSS.Fakes.ShimPolicyConditions.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimPolicyConditions.AddConditionItemMatchModeStringString">
            <summary>设置 PolicyConditions.AddConditionItem(MatchMode matchMode, String name, String value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimPolicyConditions.AddConditionItemStringInt64Int64">
            <summary>设置 PolicyConditions.AddConditionItem(String name, Int64 min, Int64 max) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimPolicyConditions.AddConditionItemStringString">
            <summary>设置 PolicyConditions.AddConditionItem(String name, String value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimPolicyConditions.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimPolicyConditions.Constructor">
            <summary>设置 PolicyConditions.PolicyConditions() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimPolicyConditions.Jsonize">
            <summary>设置 PolicyConditions.Jsonize() 的 填充码</summary>
        </member>
        <member name="T:Aliyun.OSS.Fakes.ShimPolicyConditions.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimPolicyConditions.AllInstances.AddConditionItemMatchModeStringString">
            <summary>设置 PolicyConditions.AddConditionItem(MatchMode matchMode, String name, String value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimPolicyConditions.AllInstances.AddConditionItemStringInt64Int64">
            <summary>设置 PolicyConditions.AddConditionItem(String name, Int64 min, Int64 max) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimPolicyConditions.AllInstances.AddConditionItemStringString">
            <summary>设置 PolicyConditions.AddConditionItem(String name, String value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimPolicyConditions.AllInstances.Jsonize">
            <summary>设置 PolicyConditions.Jsonize() 的 填充码</summary>
        </member>
        <member name="T:Aliyun.OSS.Fakes.ShimPutObjectRequest">
            <summary>Aliyun.OSS.PutObjectRequest 的填充码类型</summary>
        </member>
        <member name="M:Aliyun.OSS.Fakes.ShimPutObjectRequest.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Aliyun.OSS.Fakes.ShimPutObjectRequest.#ctor(Aliyun.OSS.PutObjectRequest)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Aliyun.OSS.Fakes.ShimPutObjectRequest.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Aliyun.OSS.Fakes.ShimPutObjectRequest.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimPutObjectRequest.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimPutObjectRequest.BucketNameGet">
            <summary>设置 PutObjectRequest.get_BucketName() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimPutObjectRequest.BucketNameSetString">
            <summary>设置 PutObjectRequest.set_BucketName(String value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimPutObjectRequest.ConstructorStringStringStream">
            <summary>设置 PutObjectRequest.PutObjectRequest(String bucketName, String key, Stream content) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimPutObjectRequest.ConstructorStringStringStreamObjectMetadata">
            <summary>设置 PutObjectRequest.PutObjectRequest(String bucketName, String key, Stream content, ObjectMetadata metadata) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimPutObjectRequest.ContentGet">
            <summary>设置 PutObjectRequest.get_Content() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimPutObjectRequest.ContentSetStream">
            <summary>设置 PutObjectRequest.set_Content(Stream value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimPutObjectRequest.IsCallbackRequest">
            <summary>设置 PutObjectRequest.IsCallbackRequest() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimPutObjectRequest.IsNeedResponseStream">
            <summary>设置 PutObjectRequest.IsNeedResponseStream() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimPutObjectRequest.KeyGet">
            <summary>设置 PutObjectRequest.get_Key() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimPutObjectRequest.KeySetString">
            <summary>设置 PutObjectRequest.set_Key(String value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimPutObjectRequest.MetadataGet">
            <summary>设置 PutObjectRequest.get_Metadata() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimPutObjectRequest.MetadataSetObjectMetadata">
            <summary>设置 PutObjectRequest.set_Metadata(ObjectMetadata value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimPutObjectRequest.PopulateIDictionaryOfStringString">
            <summary>设置 PutObjectRequest.Populate(IDictionary`2&lt;String,String&gt; headers) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimPutObjectRequest.ProcessGet">
            <summary>设置 PutObjectRequest.get_Process() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimPutObjectRequest.ProcessSetString">
            <summary>设置 PutObjectRequest.set_Process(String value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimPutObjectRequest.StreamTransferProgressGet">
            <summary>设置 PutObjectRequest.get_StreamTransferProgress() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimPutObjectRequest.StreamTransferProgressSetEventHandlerOfStreamTransferProgressArgs">
            <summary>设置 PutObjectRequest.set_StreamTransferProgress(EventHandler`1&lt;StreamTransferProgressArgs&gt; value) 的 填充码</summary>
        </member>
        <member name="T:Aliyun.OSS.Fakes.ShimPutObjectRequest.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimPutObjectRequest.AllInstances.BucketNameGet">
            <summary>设置 PutObjectRequest.get_BucketName() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimPutObjectRequest.AllInstances.BucketNameSetString">
            <summary>设置 PutObjectRequest.set_BucketName(String value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimPutObjectRequest.AllInstances.ContentGet">
            <summary>设置 PutObjectRequest.get_Content() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimPutObjectRequest.AllInstances.ContentSetStream">
            <summary>设置 PutObjectRequest.set_Content(Stream value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimPutObjectRequest.AllInstances.IsCallbackRequest">
            <summary>设置 PutObjectRequest.IsCallbackRequest() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimPutObjectRequest.AllInstances.IsNeedResponseStream">
            <summary>设置 PutObjectRequest.IsNeedResponseStream() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimPutObjectRequest.AllInstances.KeyGet">
            <summary>设置 PutObjectRequest.get_Key() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimPutObjectRequest.AllInstances.KeySetString">
            <summary>设置 PutObjectRequest.set_Key(String value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimPutObjectRequest.AllInstances.MetadataGet">
            <summary>设置 PutObjectRequest.get_Metadata() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimPutObjectRequest.AllInstances.MetadataSetObjectMetadata">
            <summary>设置 PutObjectRequest.set_Metadata(ObjectMetadata value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimPutObjectRequest.AllInstances.PopulateIDictionaryOfStringString">
            <summary>设置 PutObjectRequest.Populate(IDictionary`2&lt;String,String&gt; headers) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimPutObjectRequest.AllInstances.ProcessGet">
            <summary>设置 PutObjectRequest.get_Process() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimPutObjectRequest.AllInstances.ProcessSetString">
            <summary>设置 PutObjectRequest.set_Process(String value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimPutObjectRequest.AllInstances.StreamTransferProgressGet">
            <summary>设置 PutObjectRequest.get_StreamTransferProgress() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimPutObjectRequest.AllInstances.StreamTransferProgressSetEventHandlerOfStreamTransferProgressArgs">
            <summary>设置 PutObjectRequest.set_StreamTransferProgress(EventHandler`1&lt;StreamTransferProgressArgs&gt; value) 的 填充码</summary>
        </member>
        <member name="T:Aliyun.OSS.Fakes.ShimPutObjectResult">
            <summary>Aliyun.OSS.PutObjectResult 的填充码类型</summary>
        </member>
        <member name="M:Aliyun.OSS.Fakes.ShimPutObjectResult.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Aliyun.OSS.Fakes.ShimPutObjectResult.#ctor(Aliyun.OSS.PutObjectResult)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Aliyun.OSS.Fakes.ShimPutObjectResult.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Aliyun.OSS.Fakes.ShimPutObjectResult.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:Aliyun.OSS.Fakes.ShimPutObjectResult.Bind(System.IDisposable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimPutObjectResult.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimPutObjectResult.Constructor">
            <summary>设置 PutObjectResult.PutObjectResult() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimPutObjectResult.ETagGet">
            <summary>设置 PutObjectResult.get_ETag() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimPutObjectResult.ETagSetString">
            <summary>设置 PutObjectResult.set_ETag(String value) 的 填充码</summary>
        </member>
        <member name="T:Aliyun.OSS.Fakes.ShimPutObjectResult.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimPutObjectResult.AllInstances.ETagGet">
            <summary>设置 PutObjectResult.get_ETag() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimPutObjectResult.AllInstances.ETagSetString">
            <summary>设置 PutObjectResult.set_ETag(String value) 的 填充码</summary>
        </member>
        <member name="T:Aliyun.OSS.Fakes.ShimRefererConfiguration">
            <summary>Aliyun.OSS.RefererConfiguration 的填充码类型</summary>
        </member>
        <member name="M:Aliyun.OSS.Fakes.ShimRefererConfiguration.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Aliyun.OSS.Fakes.ShimRefererConfiguration.#ctor(Aliyun.OSS.RefererConfiguration)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Aliyun.OSS.Fakes.ShimRefererConfiguration.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Aliyun.OSS.Fakes.ShimRefererConfiguration.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimRefererConfiguration.AllowEmptyRefererGet">
            <summary>设置 RefererConfiguration.get_AllowEmptyReferer() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimRefererConfiguration.AllowEmptyRefererSetBoolean">
            <summary>设置 RefererConfiguration.set_AllowEmptyReferer(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimRefererConfiguration.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimRefererConfiguration.Constructor">
            <summary>设置 RefererConfiguration.RefererConfiguration() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimRefererConfiguration.RefererListGet">
            <summary>设置 RefererConfiguration.get_RefererList() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimRefererConfiguration.RefererListSetRefererConfigurationRefererListModel">
            <summary>设置 RefererConfiguration.set_RefererList(RefererListModel value) 的 填充码</summary>
        </member>
        <member name="T:Aliyun.OSS.Fakes.ShimRefererConfiguration.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimRefererConfiguration.AllInstances.AllowEmptyRefererGet">
            <summary>设置 RefererConfiguration.get_AllowEmptyReferer() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimRefererConfiguration.AllInstances.AllowEmptyRefererSetBoolean">
            <summary>设置 RefererConfiguration.set_AllowEmptyReferer(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimRefererConfiguration.AllInstances.RefererListGet">
            <summary>设置 RefererConfiguration.get_RefererList() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimRefererConfiguration.AllInstances.RefererListSetRefererConfigurationRefererListModel">
            <summary>设置 RefererConfiguration.set_RefererList(RefererListModel value) 的 填充码</summary>
        </member>
        <member name="T:Aliyun.OSS.Fakes.ShimRefererConfiguration.ShimRefererListModel">
            <summary>Aliyun.OSS.RefererConfiguration+RefererListModel 的填充码类型</summary>
        </member>
        <member name="M:Aliyun.OSS.Fakes.ShimRefererConfiguration.ShimRefererListModel.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Aliyun.OSS.Fakes.ShimRefererConfiguration.ShimRefererListModel.#ctor(Aliyun.OSS.RefererConfiguration.RefererListModel)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Aliyun.OSS.Fakes.ShimRefererConfiguration.ShimRefererListModel.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Aliyun.OSS.Fakes.ShimRefererConfiguration.ShimRefererListModel.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimRefererConfiguration.ShimRefererListModel.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimRefererConfiguration.ShimRefererListModel.Constructor">
            <summary>设置 RefererListModel.RefererListModel() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimRefererConfiguration.ShimRefererListModel.ReferersGet">
            <summary>设置 RefererListModel.get_Referers() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimRefererConfiguration.ShimRefererListModel.ReferersSetStringArray">
            <summary>设置 RefererListModel.set_Referers(String[] value) 的 填充码</summary>
        </member>
        <member name="T:Aliyun.OSS.Fakes.ShimRefererConfiguration.ShimRefererListModel.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimRefererConfiguration.ShimRefererListModel.AllInstances.ReferersGet">
            <summary>设置 RefererListModel.get_Referers() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimRefererConfiguration.ShimRefererListModel.AllInstances.ReferersSetStringArray">
            <summary>设置 RefererListModel.set_Referers(String[] value) 的 填充码</summary>
        </member>
        <member name="T:Aliyun.OSS.Fakes.ShimResponseHeaderOverrides">
            <summary>Aliyun.OSS.ResponseHeaderOverrides 的填充码类型</summary>
        </member>
        <member name="M:Aliyun.OSS.Fakes.ShimResponseHeaderOverrides.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Aliyun.OSS.Fakes.ShimResponseHeaderOverrides.#ctor(Aliyun.OSS.ResponseHeaderOverrides)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Aliyun.OSS.Fakes.ShimResponseHeaderOverrides.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Aliyun.OSS.Fakes.ShimResponseHeaderOverrides.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimResponseHeaderOverrides.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimResponseHeaderOverrides.CacheControlGet">
            <summary>设置 ResponseHeaderOverrides.get_CacheControl() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimResponseHeaderOverrides.CacheControlSetString">
            <summary>设置 ResponseHeaderOverrides.set_CacheControl(String value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimResponseHeaderOverrides.Constructor">
            <summary>设置 ResponseHeaderOverrides.ResponseHeaderOverrides() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimResponseHeaderOverrides.ContentDispositionGet">
            <summary>设置 ResponseHeaderOverrides.get_ContentDisposition() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimResponseHeaderOverrides.ContentDispositionSetString">
            <summary>设置 ResponseHeaderOverrides.set_ContentDisposition(String value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimResponseHeaderOverrides.ContentEncodingGet">
            <summary>设置 ResponseHeaderOverrides.get_ContentEncoding() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimResponseHeaderOverrides.ContentEncodingSetString">
            <summary>设置 ResponseHeaderOverrides.set_ContentEncoding(String value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimResponseHeaderOverrides.ContentLanguageGet">
            <summary>设置 ResponseHeaderOverrides.get_ContentLanguage() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimResponseHeaderOverrides.ContentLanguageSetString">
            <summary>设置 ResponseHeaderOverrides.set_ContentLanguage(String value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimResponseHeaderOverrides.ContentTypeGet">
            <summary>设置 ResponseHeaderOverrides.get_ContentType() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimResponseHeaderOverrides.ContentTypeSetString">
            <summary>设置 ResponseHeaderOverrides.set_ContentType(String value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimResponseHeaderOverrides.ExpiresGet">
            <summary>设置 ResponseHeaderOverrides.get_Expires() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimResponseHeaderOverrides.ExpiresSetString">
            <summary>设置 ResponseHeaderOverrides.set_Expires(String value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimResponseHeaderOverrides.PopulateIDictionaryOfStringString">
            <summary>设置 ResponseHeaderOverrides.Populate(IDictionary`2&lt;String,String&gt; parameters) 的 填充码</summary>
        </member>
        <member name="T:Aliyun.OSS.Fakes.ShimResponseHeaderOverrides.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimResponseHeaderOverrides.AllInstances.CacheControlGet">
            <summary>设置 ResponseHeaderOverrides.get_CacheControl() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimResponseHeaderOverrides.AllInstances.CacheControlSetString">
            <summary>设置 ResponseHeaderOverrides.set_CacheControl(String value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimResponseHeaderOverrides.AllInstances.ContentDispositionGet">
            <summary>设置 ResponseHeaderOverrides.get_ContentDisposition() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimResponseHeaderOverrides.AllInstances.ContentDispositionSetString">
            <summary>设置 ResponseHeaderOverrides.set_ContentDisposition(String value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimResponseHeaderOverrides.AllInstances.ContentEncodingGet">
            <summary>设置 ResponseHeaderOverrides.get_ContentEncoding() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimResponseHeaderOverrides.AllInstances.ContentEncodingSetString">
            <summary>设置 ResponseHeaderOverrides.set_ContentEncoding(String value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimResponseHeaderOverrides.AllInstances.ContentLanguageGet">
            <summary>设置 ResponseHeaderOverrides.get_ContentLanguage() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimResponseHeaderOverrides.AllInstances.ContentLanguageSetString">
            <summary>设置 ResponseHeaderOverrides.set_ContentLanguage(String value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimResponseHeaderOverrides.AllInstances.ContentTypeGet">
            <summary>设置 ResponseHeaderOverrides.get_ContentType() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimResponseHeaderOverrides.AllInstances.ContentTypeSetString">
            <summary>设置 ResponseHeaderOverrides.set_ContentType(String value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimResponseHeaderOverrides.AllInstances.ExpiresGet">
            <summary>设置 ResponseHeaderOverrides.get_Expires() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimResponseHeaderOverrides.AllInstances.ExpiresSetString">
            <summary>设置 ResponseHeaderOverrides.set_Expires(String value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimResponseHeaderOverrides.AllInstances.PopulateIDictionaryOfStringString">
            <summary>设置 ResponseHeaderOverrides.Populate(IDictionary`2&lt;String,String&gt; parameters) 的 填充码</summary>
        </member>
        <member name="T:Aliyun.OSS.Fakes.ShimSetBucketAclRequest">
            <summary>Aliyun.OSS.SetBucketAclRequest 的填充码类型</summary>
        </member>
        <member name="M:Aliyun.OSS.Fakes.ShimSetBucketAclRequest.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Aliyun.OSS.Fakes.ShimSetBucketAclRequest.#ctor(Aliyun.OSS.SetBucketAclRequest)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Aliyun.OSS.Fakes.ShimSetBucketAclRequest.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Aliyun.OSS.Fakes.ShimSetBucketAclRequest.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimSetBucketAclRequest.ACLGet">
            <summary>设置 SetBucketAclRequest.get_ACL() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimSetBucketAclRequest.ACLSetCannedAccessControlList">
            <summary>设置 SetBucketAclRequest.set_ACL(CannedAccessControlList value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimSetBucketAclRequest.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimSetBucketAclRequest.BucketNameGet">
            <summary>设置 SetBucketAclRequest.get_BucketName() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimSetBucketAclRequest.BucketNameSetString">
            <summary>设置 SetBucketAclRequest.set_BucketName(String value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimSetBucketAclRequest.ConstructorStringCannedAccessControlList">
            <summary>设置 SetBucketAclRequest.SetBucketAclRequest(String bucketName, CannedAccessControlList acl) 的 填充码</summary>
        </member>
        <member name="T:Aliyun.OSS.Fakes.ShimSetBucketAclRequest.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimSetBucketAclRequest.AllInstances.ACLGet">
            <summary>设置 SetBucketAclRequest.get_ACL() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimSetBucketAclRequest.AllInstances.ACLSetCannedAccessControlList">
            <summary>设置 SetBucketAclRequest.set_ACL(CannedAccessControlList value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimSetBucketAclRequest.AllInstances.BucketNameGet">
            <summary>设置 SetBucketAclRequest.get_BucketName() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimSetBucketAclRequest.AllInstances.BucketNameSetString">
            <summary>设置 SetBucketAclRequest.set_BucketName(String value) 的 填充码</summary>
        </member>
        <member name="T:Aliyun.OSS.Fakes.ShimSetBucketCorsRequest">
            <summary>Aliyun.OSS.SetBucketCorsRequest 的填充码类型</summary>
        </member>
        <member name="M:Aliyun.OSS.Fakes.ShimSetBucketCorsRequest.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Aliyun.OSS.Fakes.ShimSetBucketCorsRequest.#ctor(Aliyun.OSS.SetBucketCorsRequest)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Aliyun.OSS.Fakes.ShimSetBucketCorsRequest.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Aliyun.OSS.Fakes.ShimSetBucketCorsRequest.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimSetBucketCorsRequest.AddCORSRuleCORSRule">
            <summary>设置 SetBucketCorsRequest.AddCORSRule(CORSRule corsRule) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimSetBucketCorsRequest.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimSetBucketCorsRequest.BucketNameGet">
            <summary>设置 SetBucketCorsRequest.get_BucketName() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimSetBucketCorsRequest.BucketNameSetString">
            <summary>设置 SetBucketCorsRequest.set_BucketName(String value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimSetBucketCorsRequest.CORSRulesGet">
            <summary>设置 SetBucketCorsRequest.get_CORSRules() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimSetBucketCorsRequest.CORSRulesSetIListOfCORSRule">
            <summary>设置 SetBucketCorsRequest.set_CORSRules(IList`1&lt;CORSRule&gt; value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimSetBucketCorsRequest.ConstructorString">
            <summary>设置 SetBucketCorsRequest.SetBucketCorsRequest(String bucketName) 的 填充码</summary>
        </member>
        <member name="T:Aliyun.OSS.Fakes.ShimSetBucketCorsRequest.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimSetBucketCorsRequest.AllInstances.AddCORSRuleCORSRule">
            <summary>设置 SetBucketCorsRequest.AddCORSRule(CORSRule corsRule) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimSetBucketCorsRequest.AllInstances.BucketNameGet">
            <summary>设置 SetBucketCorsRequest.get_BucketName() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimSetBucketCorsRequest.AllInstances.BucketNameSetString">
            <summary>设置 SetBucketCorsRequest.set_BucketName(String value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimSetBucketCorsRequest.AllInstances.CORSRulesGet">
            <summary>设置 SetBucketCorsRequest.get_CORSRules() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimSetBucketCorsRequest.AllInstances.CORSRulesSetIListOfCORSRule">
            <summary>设置 SetBucketCorsRequest.set_CORSRules(IList`1&lt;CORSRule&gt; value) 的 填充码</summary>
        </member>
        <member name="T:Aliyun.OSS.Fakes.ShimSetBucketLifecycleRequest">
            <summary>Aliyun.OSS.SetBucketLifecycleRequest 的填充码类型</summary>
        </member>
        <member name="M:Aliyun.OSS.Fakes.ShimSetBucketLifecycleRequest.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Aliyun.OSS.Fakes.ShimSetBucketLifecycleRequest.#ctor(Aliyun.OSS.SetBucketLifecycleRequest)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Aliyun.OSS.Fakes.ShimSetBucketLifecycleRequest.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Aliyun.OSS.Fakes.ShimSetBucketLifecycleRequest.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimSetBucketLifecycleRequest.AddLifecycleRuleLifecycleRule">
            <summary>设置 SetBucketLifecycleRequest.AddLifecycleRule(LifecycleRule lifecycleRule) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimSetBucketLifecycleRequest.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimSetBucketLifecycleRequest.BucketNameGet">
            <summary>设置 SetBucketLifecycleRequest.get_BucketName() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimSetBucketLifecycleRequest.BucketNameSetString">
            <summary>设置 SetBucketLifecycleRequest.set_BucketName(String value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimSetBucketLifecycleRequest.ConstructorString">
            <summary>设置 SetBucketLifecycleRequest.SetBucketLifecycleRequest(String bucketName) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimSetBucketLifecycleRequest.LifecycleRulesGet">
            <summary>设置 SetBucketLifecycleRequest.get_LifecycleRules() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimSetBucketLifecycleRequest.LifecycleRulesSetIListOfLifecycleRule">
            <summary>设置 SetBucketLifecycleRequest.set_LifecycleRules(IList`1&lt;LifecycleRule&gt; value) 的 填充码</summary>
        </member>
        <member name="T:Aliyun.OSS.Fakes.ShimSetBucketLifecycleRequest.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimSetBucketLifecycleRequest.AllInstances.AddLifecycleRuleLifecycleRule">
            <summary>设置 SetBucketLifecycleRequest.AddLifecycleRule(LifecycleRule lifecycleRule) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimSetBucketLifecycleRequest.AllInstances.BucketNameGet">
            <summary>设置 SetBucketLifecycleRequest.get_BucketName() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimSetBucketLifecycleRequest.AllInstances.BucketNameSetString">
            <summary>设置 SetBucketLifecycleRequest.set_BucketName(String value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimSetBucketLifecycleRequest.AllInstances.LifecycleRulesGet">
            <summary>设置 SetBucketLifecycleRequest.get_LifecycleRules() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimSetBucketLifecycleRequest.AllInstances.LifecycleRulesSetIListOfLifecycleRule">
            <summary>设置 SetBucketLifecycleRequest.set_LifecycleRules(IList`1&lt;LifecycleRule&gt; value) 的 填充码</summary>
        </member>
        <member name="T:Aliyun.OSS.Fakes.ShimSetBucketLoggingRequest">
            <summary>Aliyun.OSS.SetBucketLoggingRequest 的填充码类型</summary>
        </member>
        <member name="M:Aliyun.OSS.Fakes.ShimSetBucketLoggingRequest.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Aliyun.OSS.Fakes.ShimSetBucketLoggingRequest.#ctor(Aliyun.OSS.SetBucketLoggingRequest)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Aliyun.OSS.Fakes.ShimSetBucketLoggingRequest.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Aliyun.OSS.Fakes.ShimSetBucketLoggingRequest.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimSetBucketLoggingRequest.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimSetBucketLoggingRequest.BucketNameGet">
            <summary>设置 SetBucketLoggingRequest.get_BucketName() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimSetBucketLoggingRequest.BucketNameSetString">
            <summary>设置 SetBucketLoggingRequest.set_BucketName(String value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimSetBucketLoggingRequest.ConstructorStringStringString">
            <summary>设置 SetBucketLoggingRequest.SetBucketLoggingRequest(String bucketName, String targetBucket, String targetPrefix) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimSetBucketLoggingRequest.TargetBucketGet">
            <summary>设置 SetBucketLoggingRequest.get_TargetBucket() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimSetBucketLoggingRequest.TargetBucketSetString">
            <summary>设置 SetBucketLoggingRequest.set_TargetBucket(String value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimSetBucketLoggingRequest.TargetPrefixGet">
            <summary>设置 SetBucketLoggingRequest.get_TargetPrefix() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimSetBucketLoggingRequest.TargetPrefixSetString">
            <summary>设置 SetBucketLoggingRequest.set_TargetPrefix(String value) 的 填充码</summary>
        </member>
        <member name="T:Aliyun.OSS.Fakes.ShimSetBucketLoggingRequest.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimSetBucketLoggingRequest.AllInstances.BucketNameGet">
            <summary>设置 SetBucketLoggingRequest.get_BucketName() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimSetBucketLoggingRequest.AllInstances.BucketNameSetString">
            <summary>设置 SetBucketLoggingRequest.set_BucketName(String value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimSetBucketLoggingRequest.AllInstances.TargetBucketGet">
            <summary>设置 SetBucketLoggingRequest.get_TargetBucket() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimSetBucketLoggingRequest.AllInstances.TargetBucketSetString">
            <summary>设置 SetBucketLoggingRequest.set_TargetBucket(String value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimSetBucketLoggingRequest.AllInstances.TargetPrefixGet">
            <summary>设置 SetBucketLoggingRequest.get_TargetPrefix() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimSetBucketLoggingRequest.AllInstances.TargetPrefixSetString">
            <summary>设置 SetBucketLoggingRequest.set_TargetPrefix(String value) 的 填充码</summary>
        </member>
        <member name="T:Aliyun.OSS.Fakes.ShimSetBucketRefererRequest">
            <summary>Aliyun.OSS.SetBucketRefererRequest 的填充码类型</summary>
        </member>
        <member name="M:Aliyun.OSS.Fakes.ShimSetBucketRefererRequest.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Aliyun.OSS.Fakes.ShimSetBucketRefererRequest.#ctor(Aliyun.OSS.SetBucketRefererRequest)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Aliyun.OSS.Fakes.ShimSetBucketRefererRequest.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Aliyun.OSS.Fakes.ShimSetBucketRefererRequest.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimSetBucketRefererRequest.AllowEmptyRefererGet">
            <summary>设置 SetBucketRefererRequest.get_AllowEmptyReferer() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimSetBucketRefererRequest.AllowEmptyRefererSetBoolean">
            <summary>设置 SetBucketRefererRequest.set_AllowEmptyReferer(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimSetBucketRefererRequest.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimSetBucketRefererRequest.BucketNameGet">
            <summary>设置 SetBucketRefererRequest.get_BucketName() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimSetBucketRefererRequest.BucketNameSetString">
            <summary>设置 SetBucketRefererRequest.set_BucketName(String value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimSetBucketRefererRequest.ClearRefererList">
            <summary>设置 SetBucketRefererRequest.ClearRefererList() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimSetBucketRefererRequest.ConstructorString">
            <summary>设置 SetBucketRefererRequest.SetBucketRefererRequest(String bucketName) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimSetBucketRefererRequest.ConstructorStringIEnumerableOfStringBoolean">
            <summary>设置 SetBucketRefererRequest.SetBucketRefererRequest(String bucketName, IEnumerable`1&lt;String&gt; refererList, Boolean allowEmptyReferer) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimSetBucketRefererRequest.ConstructorStringIListOfString">
            <summary>设置 SetBucketRefererRequest.SetBucketRefererRequest(String bucketName, IList`1&lt;String&gt; refererList) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimSetBucketRefererRequest.RefererListGet">
            <summary>设置 SetBucketRefererRequest.get_RefererList() 的 填充码</summary>
        </member>
        <member name="T:Aliyun.OSS.Fakes.ShimSetBucketRefererRequest.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimSetBucketRefererRequest.AllInstances.AllowEmptyRefererGet">
            <summary>设置 SetBucketRefererRequest.get_AllowEmptyReferer() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimSetBucketRefererRequest.AllInstances.AllowEmptyRefererSetBoolean">
            <summary>设置 SetBucketRefererRequest.set_AllowEmptyReferer(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimSetBucketRefererRequest.AllInstances.BucketNameGet">
            <summary>设置 SetBucketRefererRequest.get_BucketName() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimSetBucketRefererRequest.AllInstances.BucketNameSetString">
            <summary>设置 SetBucketRefererRequest.set_BucketName(String value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimSetBucketRefererRequest.AllInstances.ClearRefererList">
            <summary>设置 SetBucketRefererRequest.ClearRefererList() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimSetBucketRefererRequest.AllInstances.RefererListGet">
            <summary>设置 SetBucketRefererRequest.get_RefererList() 的 填充码</summary>
        </member>
        <member name="T:Aliyun.OSS.Fakes.ShimSetBucketWebsiteRequest">
            <summary>Aliyun.OSS.SetBucketWebsiteRequest 的填充码类型</summary>
        </member>
        <member name="M:Aliyun.OSS.Fakes.ShimSetBucketWebsiteRequest.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Aliyun.OSS.Fakes.ShimSetBucketWebsiteRequest.#ctor(Aliyun.OSS.SetBucketWebsiteRequest)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Aliyun.OSS.Fakes.ShimSetBucketWebsiteRequest.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Aliyun.OSS.Fakes.ShimSetBucketWebsiteRequest.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimSetBucketWebsiteRequest.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimSetBucketWebsiteRequest.BucketNameGet">
            <summary>设置 SetBucketWebsiteRequest.get_BucketName() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimSetBucketWebsiteRequest.BucketNameSetString">
            <summary>设置 SetBucketWebsiteRequest.set_BucketName(String value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimSetBucketWebsiteRequest.ConstructorStringStringString">
            <summary>设置 SetBucketWebsiteRequest.SetBucketWebsiteRequest(String bucketName, String indexDocument, String errorDocument) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimSetBucketWebsiteRequest.ErrorDocumentGet">
            <summary>设置 SetBucketWebsiteRequest.get_ErrorDocument() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimSetBucketWebsiteRequest.ErrorDocumentSetString">
            <summary>设置 SetBucketWebsiteRequest.set_ErrorDocument(String value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimSetBucketWebsiteRequest.IndexDocumentGet">
            <summary>设置 SetBucketWebsiteRequest.get_IndexDocument() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimSetBucketWebsiteRequest.IndexDocumentSetString">
            <summary>设置 SetBucketWebsiteRequest.set_IndexDocument(String value) 的 填充码</summary>
        </member>
        <member name="T:Aliyun.OSS.Fakes.ShimSetBucketWebsiteRequest.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimSetBucketWebsiteRequest.AllInstances.BucketNameGet">
            <summary>设置 SetBucketWebsiteRequest.get_BucketName() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimSetBucketWebsiteRequest.AllInstances.BucketNameSetString">
            <summary>设置 SetBucketWebsiteRequest.set_BucketName(String value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimSetBucketWebsiteRequest.AllInstances.ErrorDocumentGet">
            <summary>设置 SetBucketWebsiteRequest.get_ErrorDocument() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimSetBucketWebsiteRequest.AllInstances.ErrorDocumentSetString">
            <summary>设置 SetBucketWebsiteRequest.set_ErrorDocument(String value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimSetBucketWebsiteRequest.AllInstances.IndexDocumentGet">
            <summary>设置 SetBucketWebsiteRequest.get_IndexDocument() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimSetBucketWebsiteRequest.AllInstances.IndexDocumentSetString">
            <summary>设置 SetBucketWebsiteRequest.set_IndexDocument(String value) 的 填充码</summary>
        </member>
        <member name="T:Aliyun.OSS.Fakes.ShimSetObjectAclRequest">
            <summary>Aliyun.OSS.SetObjectAclRequest 的填充码类型</summary>
        </member>
        <member name="M:Aliyun.OSS.Fakes.ShimSetObjectAclRequest.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Aliyun.OSS.Fakes.ShimSetObjectAclRequest.#ctor(Aliyun.OSS.SetObjectAclRequest)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Aliyun.OSS.Fakes.ShimSetObjectAclRequest.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Aliyun.OSS.Fakes.ShimSetObjectAclRequest.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimSetObjectAclRequest.ACLGet">
            <summary>设置 SetObjectAclRequest.get_ACL() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimSetObjectAclRequest.ACLSetCannedAccessControlList">
            <summary>设置 SetObjectAclRequest.set_ACL(CannedAccessControlList value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimSetObjectAclRequest.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimSetObjectAclRequest.BucketNameGet">
            <summary>设置 SetObjectAclRequest.get_BucketName() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimSetObjectAclRequest.BucketNameSetString">
            <summary>设置 SetObjectAclRequest.set_BucketName(String value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimSetObjectAclRequest.ConstructorStringStringCannedAccessControlList">
            <summary>设置 SetObjectAclRequest.SetObjectAclRequest(String bucketName, String key, CannedAccessControlList acl) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimSetObjectAclRequest.KeyGet">
            <summary>设置 SetObjectAclRequest.get_Key() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimSetObjectAclRequest.KeySetString">
            <summary>设置 SetObjectAclRequest.set_Key(String value) 的 填充码</summary>
        </member>
        <member name="T:Aliyun.OSS.Fakes.ShimSetObjectAclRequest.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimSetObjectAclRequest.AllInstances.ACLGet">
            <summary>设置 SetObjectAclRequest.get_ACL() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimSetObjectAclRequest.AllInstances.ACLSetCannedAccessControlList">
            <summary>设置 SetObjectAclRequest.set_ACL(CannedAccessControlList value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimSetObjectAclRequest.AllInstances.BucketNameGet">
            <summary>设置 SetObjectAclRequest.get_BucketName() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimSetObjectAclRequest.AllInstances.BucketNameSetString">
            <summary>设置 SetObjectAclRequest.set_BucketName(String value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimSetObjectAclRequest.AllInstances.KeyGet">
            <summary>设置 SetObjectAclRequest.get_Key() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimSetObjectAclRequest.AllInstances.KeySetString">
            <summary>设置 SetObjectAclRequest.set_Key(String value) 的 填充码</summary>
        </member>
        <member name="T:Aliyun.OSS.Fakes.ShimStreamTransferProgressArgs">
            <summary>Aliyun.OSS.StreamTransferProgressArgs 的填充码类型</summary>
        </member>
        <member name="M:Aliyun.OSS.Fakes.ShimStreamTransferProgressArgs.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Aliyun.OSS.Fakes.ShimStreamTransferProgressArgs.#ctor(Aliyun.OSS.StreamTransferProgressArgs)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Aliyun.OSS.Fakes.ShimStreamTransferProgressArgs.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Aliyun.OSS.Fakes.ShimStreamTransferProgressArgs.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimStreamTransferProgressArgs.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimStreamTransferProgressArgs.ConstructorInt64Int64Int64">
            <summary>设置 StreamTransferProgressArgs.StreamTransferProgressArgs(Int64 incrementTransferred, Int64 transferred, Int64 total) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimStreamTransferProgressArgs.IncrementTransferredGet">
            <summary>设置 StreamTransferProgressArgs.get_IncrementTransferred() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimStreamTransferProgressArgs.PercentDoneGet">
            <summary>设置 StreamTransferProgressArgs.get_PercentDone() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimStreamTransferProgressArgs.ToString">
            <summary>设置 StreamTransferProgressArgs.ToString() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimStreamTransferProgressArgs.TotalBytesGet">
            <summary>设置 StreamTransferProgressArgs.get_TotalBytes() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimStreamTransferProgressArgs.TransferredBytesGet">
            <summary>设置 StreamTransferProgressArgs.get_TransferredBytes() 的 填充码</summary>
        </member>
        <member name="T:Aliyun.OSS.Fakes.ShimStreamTransferProgressArgs.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimStreamTransferProgressArgs.AllInstances.IncrementTransferredGet">
            <summary>设置 StreamTransferProgressArgs.get_IncrementTransferred() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimStreamTransferProgressArgs.AllInstances.PercentDoneGet">
            <summary>设置 StreamTransferProgressArgs.get_PercentDone() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimStreamTransferProgressArgs.AllInstances.ToString01">
            <summary>设置 StreamTransferProgressArgs.ToString() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimStreamTransferProgressArgs.AllInstances.TotalBytesGet">
            <summary>设置 StreamTransferProgressArgs.get_TotalBytes() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimStreamTransferProgressArgs.AllInstances.TransferredBytesGet">
            <summary>设置 StreamTransferProgressArgs.get_TransferredBytes() 的 填充码</summary>
        </member>
        <member name="T:Aliyun.OSS.Fakes.ShimUploadPartCopyRequest">
            <summary>Aliyun.OSS.UploadPartCopyRequest 的填充码类型</summary>
        </member>
        <member name="M:Aliyun.OSS.Fakes.ShimUploadPartCopyRequest.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Aliyun.OSS.Fakes.ShimUploadPartCopyRequest.#ctor(Aliyun.OSS.UploadPartCopyRequest)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Aliyun.OSS.Fakes.ShimUploadPartCopyRequest.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Aliyun.OSS.Fakes.ShimUploadPartCopyRequest.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimUploadPartCopyRequest.BeginIndexGet">
            <summary>设置 UploadPartCopyRequest.get_BeginIndex() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimUploadPartCopyRequest.BeginIndexSetNullableOfInt64">
            <summary>设置 UploadPartCopyRequest.set_BeginIndex(Nullable`1&lt;Int64&gt; value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimUploadPartCopyRequest.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimUploadPartCopyRequest.ConstructorStringStringStringStringString">
            <summary>设置 UploadPartCopyRequest.UploadPartCopyRequest(String targetBucket, String targetKey, String sourceBucket, String sourceKey, String uploadId) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimUploadPartCopyRequest.MatchingETagConstraintsGet">
            <summary>设置 UploadPartCopyRequest.get_MatchingETagConstraints() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimUploadPartCopyRequest.Md5DigestGet">
            <summary>设置 UploadPartCopyRequest.get_Md5Digest() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimUploadPartCopyRequest.Md5DigestSetString">
            <summary>设置 UploadPartCopyRequest.set_Md5Digest(String value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimUploadPartCopyRequest.ModifiedSinceConstraintGet">
            <summary>设置 UploadPartCopyRequest.get_ModifiedSinceConstraint() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimUploadPartCopyRequest.ModifiedSinceConstraintSetNullableOfDateTime">
            <summary>设置 UploadPartCopyRequest.set_ModifiedSinceConstraint(Nullable`1&lt;DateTime&gt; value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimUploadPartCopyRequest.NonmatchingETagConstraintsGet">
            <summary>设置 UploadPartCopyRequest.get_NonmatchingETagConstraints() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimUploadPartCopyRequest.PartNumberGet">
            <summary>设置 UploadPartCopyRequest.get_PartNumber() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimUploadPartCopyRequest.PartNumberSetNullableOfInt32">
            <summary>设置 UploadPartCopyRequest.set_PartNumber(Nullable`1&lt;Int32&gt; value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimUploadPartCopyRequest.PartSizeGet">
            <summary>设置 UploadPartCopyRequest.get_PartSize() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimUploadPartCopyRequest.PartSizeSetNullableOfInt64">
            <summary>设置 UploadPartCopyRequest.set_PartSize(Nullable`1&lt;Int64&gt; value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimUploadPartCopyRequest.SourceBucketGet">
            <summary>设置 UploadPartCopyRequest.get_SourceBucket() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimUploadPartCopyRequest.SourceBucketSetString">
            <summary>设置 UploadPartCopyRequest.set_SourceBucket(String value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimUploadPartCopyRequest.SourceKeyGet">
            <summary>设置 UploadPartCopyRequest.get_SourceKey() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimUploadPartCopyRequest.SourceKeySetString">
            <summary>设置 UploadPartCopyRequest.set_SourceKey(String value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimUploadPartCopyRequest.TargetBucketGet">
            <summary>设置 UploadPartCopyRequest.get_TargetBucket() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimUploadPartCopyRequest.TargetBucketSetString">
            <summary>设置 UploadPartCopyRequest.set_TargetBucket(String value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimUploadPartCopyRequest.TargetKeyGet">
            <summary>设置 UploadPartCopyRequest.get_TargetKey() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimUploadPartCopyRequest.TargetKeySetString">
            <summary>设置 UploadPartCopyRequest.set_TargetKey(String value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimUploadPartCopyRequest.UnmodifiedSinceConstraintGet">
            <summary>设置 UploadPartCopyRequest.get_UnmodifiedSinceConstraint() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimUploadPartCopyRequest.UnmodifiedSinceConstraintSetNullableOfDateTime">
            <summary>设置 UploadPartCopyRequest.set_UnmodifiedSinceConstraint(Nullable`1&lt;DateTime&gt; value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimUploadPartCopyRequest.UploadIdGet">
            <summary>设置 UploadPartCopyRequest.get_UploadId() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimUploadPartCopyRequest.UploadIdSetString">
            <summary>设置 UploadPartCopyRequest.set_UploadId(String value) 的 填充码</summary>
        </member>
        <member name="T:Aliyun.OSS.Fakes.ShimUploadPartCopyRequest.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimUploadPartCopyRequest.AllInstances.BeginIndexGet">
            <summary>设置 UploadPartCopyRequest.get_BeginIndex() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimUploadPartCopyRequest.AllInstances.BeginIndexSetNullableOfInt64">
            <summary>设置 UploadPartCopyRequest.set_BeginIndex(Nullable`1&lt;Int64&gt; value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimUploadPartCopyRequest.AllInstances.MatchingETagConstraintsGet">
            <summary>设置 UploadPartCopyRequest.get_MatchingETagConstraints() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimUploadPartCopyRequest.AllInstances.Md5DigestGet">
            <summary>设置 UploadPartCopyRequest.get_Md5Digest() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimUploadPartCopyRequest.AllInstances.Md5DigestSetString">
            <summary>设置 UploadPartCopyRequest.set_Md5Digest(String value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimUploadPartCopyRequest.AllInstances.ModifiedSinceConstraintGet">
            <summary>设置 UploadPartCopyRequest.get_ModifiedSinceConstraint() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimUploadPartCopyRequest.AllInstances.ModifiedSinceConstraintSetNullableOfDateTime">
            <summary>设置 UploadPartCopyRequest.set_ModifiedSinceConstraint(Nullable`1&lt;DateTime&gt; value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimUploadPartCopyRequest.AllInstances.NonmatchingETagConstraintsGet">
            <summary>设置 UploadPartCopyRequest.get_NonmatchingETagConstraints() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimUploadPartCopyRequest.AllInstances.PartNumberGet">
            <summary>设置 UploadPartCopyRequest.get_PartNumber() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimUploadPartCopyRequest.AllInstances.PartNumberSetNullableOfInt32">
            <summary>设置 UploadPartCopyRequest.set_PartNumber(Nullable`1&lt;Int32&gt; value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimUploadPartCopyRequest.AllInstances.PartSizeGet">
            <summary>设置 UploadPartCopyRequest.get_PartSize() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimUploadPartCopyRequest.AllInstances.PartSizeSetNullableOfInt64">
            <summary>设置 UploadPartCopyRequest.set_PartSize(Nullable`1&lt;Int64&gt; value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimUploadPartCopyRequest.AllInstances.SourceBucketGet">
            <summary>设置 UploadPartCopyRequest.get_SourceBucket() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimUploadPartCopyRequest.AllInstances.SourceBucketSetString">
            <summary>设置 UploadPartCopyRequest.set_SourceBucket(String value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimUploadPartCopyRequest.AllInstances.SourceKeyGet">
            <summary>设置 UploadPartCopyRequest.get_SourceKey() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimUploadPartCopyRequest.AllInstances.SourceKeySetString">
            <summary>设置 UploadPartCopyRequest.set_SourceKey(String value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimUploadPartCopyRequest.AllInstances.TargetBucketGet">
            <summary>设置 UploadPartCopyRequest.get_TargetBucket() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimUploadPartCopyRequest.AllInstances.TargetBucketSetString">
            <summary>设置 UploadPartCopyRequest.set_TargetBucket(String value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimUploadPartCopyRequest.AllInstances.TargetKeyGet">
            <summary>设置 UploadPartCopyRequest.get_TargetKey() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimUploadPartCopyRequest.AllInstances.TargetKeySetString">
            <summary>设置 UploadPartCopyRequest.set_TargetKey(String value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimUploadPartCopyRequest.AllInstances.UnmodifiedSinceConstraintGet">
            <summary>设置 UploadPartCopyRequest.get_UnmodifiedSinceConstraint() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimUploadPartCopyRequest.AllInstances.UnmodifiedSinceConstraintSetNullableOfDateTime">
            <summary>设置 UploadPartCopyRequest.set_UnmodifiedSinceConstraint(Nullable`1&lt;DateTime&gt; value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimUploadPartCopyRequest.AllInstances.UploadIdGet">
            <summary>设置 UploadPartCopyRequest.get_UploadId() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimUploadPartCopyRequest.AllInstances.UploadIdSetString">
            <summary>设置 UploadPartCopyRequest.set_UploadId(String value) 的 填充码</summary>
        </member>
        <member name="T:Aliyun.OSS.Fakes.ShimUploadPartCopyResult">
            <summary>Aliyun.OSS.UploadPartCopyResult 的填充码类型</summary>
        </member>
        <member name="M:Aliyun.OSS.Fakes.ShimUploadPartCopyResult.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Aliyun.OSS.Fakes.ShimUploadPartCopyResult.#ctor(Aliyun.OSS.UploadPartCopyResult)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Aliyun.OSS.Fakes.ShimUploadPartCopyResult.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Aliyun.OSS.Fakes.ShimUploadPartCopyResult.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimUploadPartCopyResult.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimUploadPartCopyResult.Constructor">
            <summary>设置 UploadPartCopyResult.UploadPartCopyResult() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimUploadPartCopyResult.ETagGet">
            <summary>设置 UploadPartCopyResult.get_ETag() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimUploadPartCopyResult.ETagSetString">
            <summary>设置 UploadPartCopyResult.set_ETag(String value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimUploadPartCopyResult.PartETagGet">
            <summary>设置 UploadPartCopyResult.get_PartETag() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimUploadPartCopyResult.PartNumberGet">
            <summary>设置 UploadPartCopyResult.get_PartNumber() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimUploadPartCopyResult.PartNumberSetInt32">
            <summary>设置 UploadPartCopyResult.set_PartNumber(Int32 value) 的 填充码</summary>
        </member>
        <member name="T:Aliyun.OSS.Fakes.ShimUploadPartCopyResult.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimUploadPartCopyResult.AllInstances.ETagGet">
            <summary>设置 UploadPartCopyResult.get_ETag() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimUploadPartCopyResult.AllInstances.ETagSetString">
            <summary>设置 UploadPartCopyResult.set_ETag(String value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimUploadPartCopyResult.AllInstances.PartETagGet">
            <summary>设置 UploadPartCopyResult.get_PartETag() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimUploadPartCopyResult.AllInstances.PartNumberGet">
            <summary>设置 UploadPartCopyResult.get_PartNumber() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimUploadPartCopyResult.AllInstances.PartNumberSetInt32">
            <summary>设置 UploadPartCopyResult.set_PartNumber(Int32 value) 的 填充码</summary>
        </member>
        <member name="T:Aliyun.OSS.Fakes.ShimUploadPartRequest">
            <summary>Aliyun.OSS.UploadPartRequest 的填充码类型</summary>
        </member>
        <member name="M:Aliyun.OSS.Fakes.ShimUploadPartRequest.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Aliyun.OSS.Fakes.ShimUploadPartRequest.#ctor(Aliyun.OSS.UploadPartRequest)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Aliyun.OSS.Fakes.ShimUploadPartRequest.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Aliyun.OSS.Fakes.ShimUploadPartRequest.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimUploadPartRequest.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimUploadPartRequest.BucketNameGet">
            <summary>设置 UploadPartRequest.get_BucketName() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimUploadPartRequest.BucketNameSetString">
            <summary>设置 UploadPartRequest.set_BucketName(String value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimUploadPartRequest.ConstructorStringStringString">
            <summary>设置 UploadPartRequest.UploadPartRequest(String bucketName, String key, String uploadId) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimUploadPartRequest.InputStreamGet">
            <summary>设置 UploadPartRequest.get_InputStream() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimUploadPartRequest.InputStreamSetStream">
            <summary>设置 UploadPartRequest.set_InputStream(Stream value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimUploadPartRequest.KeyGet">
            <summary>设置 UploadPartRequest.get_Key() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimUploadPartRequest.KeySetString">
            <summary>设置 UploadPartRequest.set_Key(String value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimUploadPartRequest.Md5DigestGet">
            <summary>设置 UploadPartRequest.get_Md5Digest() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimUploadPartRequest.Md5DigestSetString">
            <summary>设置 UploadPartRequest.set_Md5Digest(String value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimUploadPartRequest.PartNumberGet">
            <summary>设置 UploadPartRequest.get_PartNumber() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimUploadPartRequest.PartNumberSetNullableOfInt32">
            <summary>设置 UploadPartRequest.set_PartNumber(Nullable`1&lt;Int32&gt; value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimUploadPartRequest.PartSizeGet">
            <summary>设置 UploadPartRequest.get_PartSize() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimUploadPartRequest.PartSizeSetNullableOfInt64">
            <summary>设置 UploadPartRequest.set_PartSize(Nullable`1&lt;Int64&gt; value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimUploadPartRequest.StreamTransferProgressGet">
            <summary>设置 UploadPartRequest.get_StreamTransferProgress() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimUploadPartRequest.StreamTransferProgressSetEventHandlerOfStreamTransferProgressArgs">
            <summary>设置 UploadPartRequest.set_StreamTransferProgress(EventHandler`1&lt;StreamTransferProgressArgs&gt; value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimUploadPartRequest.UploadIdGet">
            <summary>设置 UploadPartRequest.get_UploadId() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimUploadPartRequest.UploadIdSetString">
            <summary>设置 UploadPartRequest.set_UploadId(String value) 的 填充码</summary>
        </member>
        <member name="T:Aliyun.OSS.Fakes.ShimUploadPartRequest.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimUploadPartRequest.AllInstances.BucketNameGet">
            <summary>设置 UploadPartRequest.get_BucketName() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimUploadPartRequest.AllInstances.BucketNameSetString">
            <summary>设置 UploadPartRequest.set_BucketName(String value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimUploadPartRequest.AllInstances.InputStreamGet">
            <summary>设置 UploadPartRequest.get_InputStream() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimUploadPartRequest.AllInstances.InputStreamSetStream">
            <summary>设置 UploadPartRequest.set_InputStream(Stream value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimUploadPartRequest.AllInstances.KeyGet">
            <summary>设置 UploadPartRequest.get_Key() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimUploadPartRequest.AllInstances.KeySetString">
            <summary>设置 UploadPartRequest.set_Key(String value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimUploadPartRequest.AllInstances.Md5DigestGet">
            <summary>设置 UploadPartRequest.get_Md5Digest() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimUploadPartRequest.AllInstances.Md5DigestSetString">
            <summary>设置 UploadPartRequest.set_Md5Digest(String value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimUploadPartRequest.AllInstances.PartNumberGet">
            <summary>设置 UploadPartRequest.get_PartNumber() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimUploadPartRequest.AllInstances.PartNumberSetNullableOfInt32">
            <summary>设置 UploadPartRequest.set_PartNumber(Nullable`1&lt;Int32&gt; value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimUploadPartRequest.AllInstances.PartSizeGet">
            <summary>设置 UploadPartRequest.get_PartSize() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimUploadPartRequest.AllInstances.PartSizeSetNullableOfInt64">
            <summary>设置 UploadPartRequest.set_PartSize(Nullable`1&lt;Int64&gt; value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimUploadPartRequest.AllInstances.StreamTransferProgressGet">
            <summary>设置 UploadPartRequest.get_StreamTransferProgress() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimUploadPartRequest.AllInstances.StreamTransferProgressSetEventHandlerOfStreamTransferProgressArgs">
            <summary>设置 UploadPartRequest.set_StreamTransferProgress(EventHandler`1&lt;StreamTransferProgressArgs&gt; value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimUploadPartRequest.AllInstances.UploadIdGet">
            <summary>设置 UploadPartRequest.get_UploadId() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimUploadPartRequest.AllInstances.UploadIdSetString">
            <summary>设置 UploadPartRequest.set_UploadId(String value) 的 填充码</summary>
        </member>
        <member name="T:Aliyun.OSS.Fakes.ShimUploadPartResult">
            <summary>Aliyun.OSS.UploadPartResult 的填充码类型</summary>
        </member>
        <member name="M:Aliyun.OSS.Fakes.ShimUploadPartResult.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Aliyun.OSS.Fakes.ShimUploadPartResult.#ctor(Aliyun.OSS.UploadPartResult)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Aliyun.OSS.Fakes.ShimUploadPartResult.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Aliyun.OSS.Fakes.ShimUploadPartResult.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimUploadPartResult.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimUploadPartResult.Constructor">
            <summary>设置 UploadPartResult.UploadPartResult() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimUploadPartResult.ETagGet">
            <summary>设置 UploadPartResult.get_ETag() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimUploadPartResult.ETagSetString">
            <summary>设置 UploadPartResult.set_ETag(String value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimUploadPartResult.PartETagGet">
            <summary>设置 UploadPartResult.get_PartETag() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimUploadPartResult.PartNumberGet">
            <summary>设置 UploadPartResult.get_PartNumber() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimUploadPartResult.PartNumberSetInt32">
            <summary>设置 UploadPartResult.set_PartNumber(Int32 value) 的 填充码</summary>
        </member>
        <member name="T:Aliyun.OSS.Fakes.ShimUploadPartResult.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimUploadPartResult.AllInstances.ETagGet">
            <summary>设置 UploadPartResult.get_ETag() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimUploadPartResult.AllInstances.ETagSetString">
            <summary>设置 UploadPartResult.set_ETag(String value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimUploadPartResult.AllInstances.PartETagGet">
            <summary>设置 UploadPartResult.get_PartETag() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimUploadPartResult.AllInstances.PartNumberGet">
            <summary>设置 UploadPartResult.get_PartNumber() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.ShimUploadPartResult.AllInstances.PartNumberSetInt32">
            <summary>设置 UploadPartResult.set_PartNumber(Int32 value) 的 填充码</summary>
        </member>
        <member name="T:Aliyun.OSS.Fakes.StubAbortMultipartUploadRequest">
            <summary>Aliyun.OSS.AbortMultipartUploadRequest 的存根类型</summary>
        </member>
        <member name="M:Aliyun.OSS.Fakes.StubAbortMultipartUploadRequest.#ctor(System.String,System.String,System.String)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Aliyun.OSS.Fakes.StubAbortMultipartUploadRequest.InitializeStub">
            <summary>初始化 type StubAbortMultipartUploadRequest 的新实例</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.StubAbortMultipartUploadRequest.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.StubAbortMultipartUploadRequest.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.StubAbortMultipartUploadRequest.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Aliyun.OSS.Fakes.StubAppendObjectRequest">
            <summary>Aliyun.OSS.AppendObjectRequest 的存根类型</summary>
        </member>
        <member name="M:Aliyun.OSS.Fakes.StubAppendObjectRequest.#ctor(System.String,System.String)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Aliyun.OSS.Fakes.StubAppendObjectRequest.InitializeStub">
            <summary>初始化 type StubAppendObjectRequest 的新实例</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.StubAppendObjectRequest.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.StubAppendObjectRequest.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.StubAppendObjectRequest.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Aliyun.OSS.Fakes.StubBucketLoggingResult">
            <summary>Aliyun.OSS.BucketLoggingResult 的存根类型</summary>
        </member>
        <member name="M:Aliyun.OSS.Fakes.StubBucketLoggingResult.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Aliyun.OSS.Fakes.StubBucketLoggingResult.InitializeStub">
            <summary>初始化 type StubBucketLoggingResult 的新实例</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.StubBucketLoggingResult.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.StubBucketLoggingResult.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.StubBucketLoggingResult.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Aliyun.OSS.Fakes.StubBucketWebsiteResult">
            <summary>Aliyun.OSS.BucketWebsiteResult 的存根类型</summary>
        </member>
        <member name="M:Aliyun.OSS.Fakes.StubBucketWebsiteResult.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Aliyun.OSS.Fakes.StubBucketWebsiteResult.InitializeStub">
            <summary>初始化 type StubBucketWebsiteResult 的新实例</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.StubBucketWebsiteResult.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.StubBucketWebsiteResult.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.StubBucketWebsiteResult.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Aliyun.OSS.Fakes.StubCORSRule">
            <summary>Aliyun.OSS.CORSRule 的存根类型</summary>
        </member>
        <member name="M:Aliyun.OSS.Fakes.StubCORSRule.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Aliyun.OSS.Fakes.StubCORSRule.InitializeStub">
            <summary>初始化 type StubCORSRule 的新实例</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.StubCORSRule.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.StubCORSRule.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.StubCORSRule.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Aliyun.OSS.Fakes.StubCompleteMultipartUploadRequest">
            <summary>Aliyun.OSS.CompleteMultipartUploadRequest 的存根类型</summary>
        </member>
        <member name="M:Aliyun.OSS.Fakes.StubCompleteMultipartUploadRequest.#ctor(System.String,System.String,System.String)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Aliyun.OSS.Fakes.StubCompleteMultipartUploadRequest.InitializeStub">
            <summary>初始化 type StubCompleteMultipartUploadRequest 的新实例</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.StubCompleteMultipartUploadRequest.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.StubCompleteMultipartUploadRequest.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.StubCompleteMultipartUploadRequest.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Aliyun.OSS.Fakes.StubCopyObjectRequest">
            <summary>Aliyun.OSS.CopyObjectRequest 的存根类型</summary>
        </member>
        <member name="M:Aliyun.OSS.Fakes.StubCopyObjectRequest.#ctor(System.String,System.String,System.String,System.String)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Aliyun.OSS.Fakes.StubCopyObjectRequest.InitializeStub">
            <summary>初始化 type StubCopyObjectRequest 的新实例</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.StubCopyObjectRequest.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.StubCopyObjectRequest.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.StubCopyObjectRequest.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Aliyun.OSS.Fakes.StubDeleteObjectsRequest">
            <summary>Aliyun.OSS.DeleteObjectsRequest 的存根类型</summary>
        </member>
        <member name="M:Aliyun.OSS.Fakes.StubDeleteObjectsRequest.#ctor(System.String,System.Collections.Generic.IList{System.String})">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Aliyun.OSS.Fakes.StubDeleteObjectsRequest.#ctor(System.String,System.Collections.Generic.IList{System.String},System.Boolean)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Aliyun.OSS.Fakes.StubDeleteObjectsRequest.InitializeStub">
            <summary>初始化 type StubDeleteObjectsRequest 的新实例</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.StubDeleteObjectsRequest.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.StubDeleteObjectsRequest.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.StubDeleteObjectsRequest.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Aliyun.OSS.Fakes.StubGeneratePresignedUriRequest">
            <summary>Aliyun.OSS.GeneratePresignedUriRequest 的存根类型</summary>
        </member>
        <member name="M:Aliyun.OSS.Fakes.StubGeneratePresignedUriRequest.#ctor(System.String,System.String)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Aliyun.OSS.Fakes.StubGeneratePresignedUriRequest.#ctor(System.String,System.String,Aliyun.OSS.SignHttpMethod)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Aliyun.OSS.Fakes.StubGeneratePresignedUriRequest.InitializeStub">
            <summary>初始化 type StubGeneratePresignedUriRequest 的新实例</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.StubGeneratePresignedUriRequest.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.StubGeneratePresignedUriRequest.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.StubGeneratePresignedUriRequest.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Aliyun.OSS.Fakes.StubGetObjectRequest">
            <summary>Aliyun.OSS.GetObjectRequest 的存根类型</summary>
        </member>
        <member name="M:Aliyun.OSS.Fakes.StubGetObjectRequest.#ctor(System.String,System.String)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Aliyun.OSS.Fakes.StubGetObjectRequest.#ctor(System.String,System.String,System.String)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Aliyun.OSS.Fakes.StubGetObjectRequest.InitializeStub">
            <summary>初始化 type StubGetObjectRequest 的新实例</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.StubGetObjectRequest.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.StubGetObjectRequest.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.StubGetObjectRequest.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Aliyun.OSS.Fakes.StubGrant">
            <summary>Aliyun.OSS.Grant 的存根类型</summary>
        </member>
        <member name="M:Aliyun.OSS.Fakes.StubGrant.#ctor(Aliyun.OSS.IGrantee,Aliyun.OSS.Permission)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Aliyun.OSS.Fakes.StubGrant.Equals(System.Object)">
            <summary>设置 Grant.Equals(Object obj) 的 存根</summary>
        </member>
        <member name="F:Aliyun.OSS.Fakes.StubGrant.EqualsObject">
            <summary>设置 Grant.Equals(Object obj) 的 stub</summary>
        </member>
        <member name="M:Aliyun.OSS.Fakes.StubGrant.GetHashCode">
            <summary>设置 Grant.GetHashCode() 的 存根</summary>
        </member>
        <member name="F:Aliyun.OSS.Fakes.StubGrant.GetHashCode01">
            <summary>设置 Grant.GetHashCode() 的 stub</summary>
        </member>
        <member name="M:Aliyun.OSS.Fakes.StubGrant.InitializeStub">
            <summary>初始化 type StubGrant 的新实例</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.StubGrant.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.StubGrant.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.StubGrant.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Aliyun.OSS.Fakes.StubIGrantee">
            <summary>Aliyun.OSS.IGrantee 的存根类型</summary>
        </member>
        <member name="M:Aliyun.OSS.Fakes.StubIGrantee.#ctor">
            <summary>初始化 type StubIGrantee 的新实例</summary>
        </member>
        <member name="M:Aliyun.OSS.Fakes.StubIGrantee.AttachBackingFieldToIdentifier">
            <summary>附加委托以将 StubIGrantee.Identifier 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="F:Aliyun.OSS.Fakes.StubIGrantee.IdentifierGet">
            <summary>设置 IGrantee.get_Identifier() 的 stub</summary>
        </member>
        <member name="F:Aliyun.OSS.Fakes.StubIGrantee.IdentifierSetString">
            <summary>设置 IGrantee.set_Identifier(String value) 的 stub</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.StubIGrantee.aoss::Aliyun#OSS#IGrantee#Identifier">
            <summary>设置 IGrantee.get_Identifier() 的 stub</summary>
        </member>
        <member name="T:Aliyun.OSS.Fakes.StubIOss">
            <summary>Aliyun.OSS.IOss 的存根类型</summary>
        </member>
        <member name="M:Aliyun.OSS.Fakes.StubIOss.#ctor">
            <summary>初始化 type StubIOss 的新实例</summary>
        </member>
        <member name="F:Aliyun.OSS.Fakes.StubIOss.AbortMultipartUploadAbortMultipartUploadRequest">
            <summary>设置 IOss.AbortMultipartUpload(AbortMultipartUploadRequest abortMultipartUploadRequest) 的 stub</summary>
        </member>
        <member name="M:Aliyun.OSS.Fakes.StubIOss.aoss::Aliyun#OSS#IOss#AbortMultipartUpload(Aliyun.OSS.AbortMultipartUploadRequest)">
            <summary>设置 IOss.AbortMultipartUpload(AbortMultipartUploadRequest abortMultipartUploadRequest) 的 存根</summary>
        </member>
        <member name="M:Aliyun.OSS.Fakes.StubIOss.aoss::Aliyun#OSS#IOss#AppendObject(Aliyun.OSS.AppendObjectRequest)">
            <summary>设置 IOss.AppendObject(AppendObjectRequest request) 的 存根</summary>
        </member>
        <member name="M:Aliyun.OSS.Fakes.StubIOss.aoss::Aliyun#OSS#IOss#BeginAppendObject(Aliyun.OSS.AppendObjectRequest,System.AsyncCallback,System.Object)">
            <summary>设置 IOss.BeginAppendObject(AppendObjectRequest request, AsyncCallback callback, Object state) 的 存根</summary>
        </member>
        <member name="M:Aliyun.OSS.Fakes.StubIOss.aoss::Aliyun#OSS#IOss#BeginCopyObject(Aliyun.OSS.CopyObjectRequest,System.AsyncCallback,System.Object)">
            <summary>设置 IOss.BeginCopyObject(CopyObjectRequest copyObjectRequst, AsyncCallback callback, Object state) 的 存根</summary>
        </member>
        <member name="M:Aliyun.OSS.Fakes.StubIOss.aoss::Aliyun#OSS#IOss#BeginGetObject(Aliyun.OSS.GetObjectRequest,System.AsyncCallback,System.Object)">
            <summary>设置 IOss.BeginGetObject(GetObjectRequest getObjectRequest, AsyncCallback callback, Object state) 的 存根</summary>
        </member>
        <member name="M:Aliyun.OSS.Fakes.StubIOss.aoss::Aliyun#OSS#IOss#BeginGetObject(System.String,System.String,System.AsyncCallback,System.Object)">
            <summary>设置 IOss.BeginGetObject(String bucketName, String key, AsyncCallback callback, Object state) 的 存根</summary>
        </member>
        <member name="M:Aliyun.OSS.Fakes.StubIOss.aoss::Aliyun#OSS#IOss#BeginListObjects(Aliyun.OSS.ListObjectsRequest,System.AsyncCallback,System.Object)">
            <summary>设置 IOss.BeginListObjects(ListObjectsRequest listObjectsRequest, AsyncCallback callback, Object state) 的 存根</summary>
        </member>
        <member name="M:Aliyun.OSS.Fakes.StubIOss.aoss::Aliyun#OSS#IOss#BeginListObjects(System.String,System.AsyncCallback,System.Object)">
            <summary>设置 IOss.BeginListObjects(String bucketName, AsyncCallback callback, Object state) 的 存根</summary>
        </member>
        <member name="M:Aliyun.OSS.Fakes.StubIOss.aoss::Aliyun#OSS#IOss#BeginListObjects(System.String,System.String,System.AsyncCallback,System.Object)">
            <summary>设置 IOss.BeginListObjects(String bucketName, String prefix, AsyncCallback callback, Object state) 的 存根</summary>
        </member>
        <member name="M:Aliyun.OSS.Fakes.StubIOss.aoss::Aliyun#OSS#IOss#BeginPutObject(Aliyun.OSS.PutObjectRequest,System.AsyncCallback,System.Object)">
            <summary>设置 IOss.BeginPutObject(PutObjectRequest putObjectRequest, AsyncCallback callback, Object state) 的 存根</summary>
        </member>
        <member name="M:Aliyun.OSS.Fakes.StubIOss.aoss::Aliyun#OSS#IOss#BeginPutObject(System.String,System.String,System.String,System.AsyncCallback,System.Object)">
            <summary>设置 IOss.BeginPutObject(String bucketName, String key, String fileToUpload, AsyncCallback callback, Object state) 的 存根</summary>
        </member>
        <member name="M:Aliyun.OSS.Fakes.StubIOss.aoss::Aliyun#OSS#IOss#BeginPutObject(System.String,System.String,System.IO.Stream,System.AsyncCallback,System.Object)">
            <summary>设置 IOss.BeginPutObject(String bucketName, String key, Stream content, AsyncCallback callback, Object state) 的 存根</summary>
        </member>
        <member name="M:Aliyun.OSS.Fakes.StubIOss.aoss::Aliyun#OSS#IOss#BeginPutObject(System.String,System.String,System.String,Aliyun.OSS.ObjectMetadata,System.AsyncCallback,System.Object)">
            <summary>设置 IOss.BeginPutObject(String bucketName, String key, String fileToUpload, ObjectMetadata metadata, AsyncCallback callback, Object state) 的 存根</summary>
        </member>
        <member name="M:Aliyun.OSS.Fakes.StubIOss.aoss::Aliyun#OSS#IOss#BeginPutObject(System.String,System.String,System.IO.Stream,Aliyun.OSS.ObjectMetadata,System.AsyncCallback,System.Object)">
            <summary>设置 IOss.BeginPutObject(String bucketName, String key, Stream content, ObjectMetadata metadata, AsyncCallback callback, Object state) 的 存根</summary>
        </member>
        <member name="M:Aliyun.OSS.Fakes.StubIOss.aoss::Aliyun#OSS#IOss#BeginUploadPart(Aliyun.OSS.UploadPartRequest,System.AsyncCallback,System.Object)">
            <summary>设置 IOss.BeginUploadPart(UploadPartRequest uploadPartRequest, AsyncCallback callback, Object state) 的 存根</summary>
        </member>
        <member name="M:Aliyun.OSS.Fakes.StubIOss.aoss::Aliyun#OSS#IOss#BeginUploadPartCopy(Aliyun.OSS.UploadPartCopyRequest,System.AsyncCallback,System.Object)">
            <summary>设置 IOss.BeginUploadPartCopy(UploadPartCopyRequest uploadPartCopyRequest, AsyncCallback callback, Object state) 的 存根</summary>
        </member>
        <member name="M:Aliyun.OSS.Fakes.StubIOss.aoss::Aliyun#OSS#IOss#CompleteMultipartUpload(Aliyun.OSS.CompleteMultipartUploadRequest)">
            <summary>设置 IOss.CompleteMultipartUpload(CompleteMultipartUploadRequest completeMultipartUploadRequest) 的 存根</summary>
        </member>
        <member name="M:Aliyun.OSS.Fakes.StubIOss.aoss::Aliyun#OSS#IOss#CopyBigObject(Aliyun.OSS.CopyObjectRequest,System.Nullable{System.Int64},System.String)">
            <summary>设置 IOss.CopyBigObject(CopyObjectRequest copyObjectRequest, Nullable`1&lt;Int64&gt; partSize, String checkpointDir) 的 存根</summary>
        </member>
        <member name="M:Aliyun.OSS.Fakes.StubIOss.aoss::Aliyun#OSS#IOss#CopyObject(Aliyun.OSS.CopyObjectRequest)">
            <summary>设置 IOss.CopyObject(CopyObjectRequest copyObjectRequst) 的 存根</summary>
        </member>
        <member name="M:Aliyun.OSS.Fakes.StubIOss.aoss::Aliyun#OSS#IOss#CreateBucket(System.String)">
            <summary>设置 IOss.CreateBucket(String bucketName) 的 存根</summary>
        </member>
        <member name="M:Aliyun.OSS.Fakes.StubIOss.aoss::Aliyun#OSS#IOss#DeleteBucket(System.String)">
            <summary>设置 IOss.DeleteBucket(String bucketName) 的 存根</summary>
        </member>
        <member name="M:Aliyun.OSS.Fakes.StubIOss.aoss::Aliyun#OSS#IOss#DeleteBucketCors(System.String)">
            <summary>设置 IOss.DeleteBucketCors(String bucketName) 的 存根</summary>
        </member>
        <member name="M:Aliyun.OSS.Fakes.StubIOss.aoss::Aliyun#OSS#IOss#DeleteBucketLogging(System.String)">
            <summary>设置 IOss.DeleteBucketLogging(String bucketName) 的 存根</summary>
        </member>
        <member name="M:Aliyun.OSS.Fakes.StubIOss.aoss::Aliyun#OSS#IOss#DeleteBucketWebsite(System.String)">
            <summary>设置 IOss.DeleteBucketWebsite(String bucketName) 的 存根</summary>
        </member>
        <member name="M:Aliyun.OSS.Fakes.StubIOss.aoss::Aliyun#OSS#IOss#DeleteObject(System.String,System.String)">
            <summary>设置 IOss.DeleteObject(String bucketName, String key) 的 存根</summary>
        </member>
        <member name="M:Aliyun.OSS.Fakes.StubIOss.aoss::Aliyun#OSS#IOss#DeleteObjects(Aliyun.OSS.DeleteObjectsRequest)">
            <summary>设置 IOss.DeleteObjects(DeleteObjectsRequest deleteObjectsRequest) 的 存根</summary>
        </member>
        <member name="M:Aliyun.OSS.Fakes.StubIOss.aoss::Aliyun#OSS#IOss#DoesBucketExist(System.String)">
            <summary>设置 IOss.DoesBucketExist(String bucketName) 的 存根</summary>
        </member>
        <member name="M:Aliyun.OSS.Fakes.StubIOss.aoss::Aliyun#OSS#IOss#DoesObjectExist(System.String,System.String)">
            <summary>设置 IOss.DoesObjectExist(String bucketName, String key) 的 存根</summary>
        </member>
        <member name="M:Aliyun.OSS.Fakes.StubIOss.aoss::Aliyun#OSS#IOss#EndAppendObject(System.IAsyncResult)">
            <summary>设置 IOss.EndAppendObject(IAsyncResult asyncResult) 的 存根</summary>
        </member>
        <member name="M:Aliyun.OSS.Fakes.StubIOss.aoss::Aliyun#OSS#IOss#EndCopyResult(System.IAsyncResult)">
            <summary>设置 IOss.EndCopyResult(IAsyncResult asyncResult) 的 存根</summary>
        </member>
        <member name="M:Aliyun.OSS.Fakes.StubIOss.aoss::Aliyun#OSS#IOss#EndGetObject(System.IAsyncResult)">
            <summary>设置 IOss.EndGetObject(IAsyncResult asyncResult) 的 存根</summary>
        </member>
        <member name="M:Aliyun.OSS.Fakes.StubIOss.aoss::Aliyun#OSS#IOss#EndListObjects(System.IAsyncResult)">
            <summary>设置 IOss.EndListObjects(IAsyncResult asyncResult) 的 存根</summary>
        </member>
        <member name="M:Aliyun.OSS.Fakes.StubIOss.aoss::Aliyun#OSS#IOss#EndPutObject(System.IAsyncResult)">
            <summary>设置 IOss.EndPutObject(IAsyncResult asyncResult) 的 存根</summary>
        </member>
        <member name="M:Aliyun.OSS.Fakes.StubIOss.aoss::Aliyun#OSS#IOss#EndUploadPart(System.IAsyncResult)">
            <summary>设置 IOss.EndUploadPart(IAsyncResult asyncResult) 的 存根</summary>
        </member>
        <member name="M:Aliyun.OSS.Fakes.StubIOss.aoss::Aliyun#OSS#IOss#EndUploadPartCopy(System.IAsyncResult)">
            <summary>设置 IOss.EndUploadPartCopy(IAsyncResult asyncResult) 的 存根</summary>
        </member>
        <member name="M:Aliyun.OSS.Fakes.StubIOss.aoss::Aliyun#OSS#IOss#GeneratePostPolicy(System.DateTime,Aliyun.OSS.PolicyConditions)">
            <summary>设置 IOss.GeneratePostPolicy(DateTime expiration, PolicyConditions conds) 的 存根</summary>
        </member>
        <member name="M:Aliyun.OSS.Fakes.StubIOss.aoss::Aliyun#OSS#IOss#GeneratePresignedUri(Aliyun.OSS.GeneratePresignedUriRequest)">
            <summary>设置 IOss.GeneratePresignedUri(GeneratePresignedUriRequest generatePresignedUriRequest) 的 存根</summary>
        </member>
        <member name="M:Aliyun.OSS.Fakes.StubIOss.aoss::Aliyun#OSS#IOss#GeneratePresignedUri(System.String,System.String)">
            <summary>设置 IOss.GeneratePresignedUri(String bucketName, String key) 的 存根</summary>
        </member>
        <member name="M:Aliyun.OSS.Fakes.StubIOss.aoss::Aliyun#OSS#IOss#GeneratePresignedUri(System.String,System.String,Aliyun.OSS.SignHttpMethod)">
            <summary>设置 IOss.GeneratePresignedUri(String bucketName, String key, SignHttpMethod method) 的 存根</summary>
        </member>
        <member name="M:Aliyun.OSS.Fakes.StubIOss.aoss::Aliyun#OSS#IOss#GeneratePresignedUri(System.String,System.String,System.DateTime)">
            <summary>设置 IOss.GeneratePresignedUri(String bucketName, String key, DateTime expiration) 的 存根</summary>
        </member>
        <member name="M:Aliyun.OSS.Fakes.StubIOss.aoss::Aliyun#OSS#IOss#GeneratePresignedUri(System.String,System.String,System.DateTime,Aliyun.OSS.SignHttpMethod)">
            <summary>设置 IOss.GeneratePresignedUri(String bucketName, String key, DateTime expiration, SignHttpMethod method) 的 存根</summary>
        </member>
        <member name="M:Aliyun.OSS.Fakes.StubIOss.aoss::Aliyun#OSS#IOss#GetBucketAcl(System.String)">
            <summary>设置 IOss.GetBucketAcl(String bucketName) 的 存根</summary>
        </member>
        <member name="M:Aliyun.OSS.Fakes.StubIOss.aoss::Aliyun#OSS#IOss#GetBucketCors(System.String)">
            <summary>设置 IOss.GetBucketCors(String bucketName) 的 存根</summary>
        </member>
        <member name="M:Aliyun.OSS.Fakes.StubIOss.aoss::Aliyun#OSS#IOss#GetBucketLifecycle(System.String)">
            <summary>设置 IOss.GetBucketLifecycle(String bucketName) 的 存根</summary>
        </member>
        <member name="M:Aliyun.OSS.Fakes.StubIOss.aoss::Aliyun#OSS#IOss#GetBucketLogging(System.String)">
            <summary>设置 IOss.GetBucketLogging(String bucketName) 的 存根</summary>
        </member>
        <member name="M:Aliyun.OSS.Fakes.StubIOss.aoss::Aliyun#OSS#IOss#GetBucketReferer(System.String)">
            <summary>设置 IOss.GetBucketReferer(String bucketName) 的 存根</summary>
        </member>
        <member name="M:Aliyun.OSS.Fakes.StubIOss.aoss::Aliyun#OSS#IOss#GetBucketWebsite(System.String)">
            <summary>设置 IOss.GetBucketWebsite(String bucketName) 的 存根</summary>
        </member>
        <member name="M:Aliyun.OSS.Fakes.StubIOss.aoss::Aliyun#OSS#IOss#GetObject(Aliyun.OSS.GetObjectRequest,System.IO.Stream)">
            <summary>设置 IOss.GetObject(GetObjectRequest getObjectRequest, Stream output) 的 存根</summary>
        </member>
        <member name="M:Aliyun.OSS.Fakes.StubIOss.aoss::Aliyun#OSS#IOss#GetObject(Aliyun.OSS.GetObjectRequest)">
            <summary>设置 IOss.GetObject(GetObjectRequest getObjectRequest) 的 存根</summary>
        </member>
        <member name="M:Aliyun.OSS.Fakes.StubIOss.aoss::Aliyun#OSS#IOss#GetObject(System.Uri)">
            <summary>设置 IOss.GetObject(Uri signedUrl) 的 存根</summary>
        </member>
        <member name="M:Aliyun.OSS.Fakes.StubIOss.aoss::Aliyun#OSS#IOss#GetObject(System.String,System.String)">
            <summary>设置 IOss.GetObject(String bucketName, String key) 的 存根</summary>
        </member>
        <member name="M:Aliyun.OSS.Fakes.StubIOss.aoss::Aliyun#OSS#IOss#GetObjectAcl(System.String,System.String)">
            <summary>设置 IOss.GetObjectAcl(String bucketName, String key) 的 存根</summary>
        </member>
        <member name="M:Aliyun.OSS.Fakes.StubIOss.aoss::Aliyun#OSS#IOss#GetObjectMetadata(System.String,System.String)">
            <summary>设置 IOss.GetObjectMetadata(String bucketName, String key) 的 存根</summary>
        </member>
        <member name="M:Aliyun.OSS.Fakes.StubIOss.aoss::Aliyun#OSS#IOss#InitiateMultipartUpload(Aliyun.OSS.InitiateMultipartUploadRequest)">
            <summary>设置 IOss.InitiateMultipartUpload(InitiateMultipartUploadRequest initiateMultipartUploadRequest) 的 存根</summary>
        </member>
        <member name="M:Aliyun.OSS.Fakes.StubIOss.aoss::Aliyun#OSS#IOss#ListBuckets(Aliyun.OSS.ListBucketsRequest)">
            <summary>设置 IOss.ListBuckets(ListBucketsRequest listBucketsRequest) 的 存根</summary>
        </member>
        <member name="M:Aliyun.OSS.Fakes.StubIOss.aoss::Aliyun#OSS#IOss#ListBuckets">
            <summary>设置 IOss.ListBuckets() 的 存根</summary>
        </member>
        <member name="M:Aliyun.OSS.Fakes.StubIOss.aoss::Aliyun#OSS#IOss#ListMultipartUploads(Aliyun.OSS.ListMultipartUploadsRequest)">
            <summary>设置 IOss.ListMultipartUploads(ListMultipartUploadsRequest listMultipartUploadsRequest) 的 存根</summary>
        </member>
        <member name="M:Aliyun.OSS.Fakes.StubIOss.aoss::Aliyun#OSS#IOss#ListObjects(Aliyun.OSS.ListObjectsRequest)">
            <summary>设置 IOss.ListObjects(ListObjectsRequest listObjectsRequest) 的 存根</summary>
        </member>
        <member name="M:Aliyun.OSS.Fakes.StubIOss.aoss::Aliyun#OSS#IOss#ListObjects(System.String)">
            <summary>设置 IOss.ListObjects(String bucketName) 的 存根</summary>
        </member>
        <member name="M:Aliyun.OSS.Fakes.StubIOss.aoss::Aliyun#OSS#IOss#ListObjects(System.String,System.String)">
            <summary>设置 IOss.ListObjects(String bucketName, String prefix) 的 存根</summary>
        </member>
        <member name="M:Aliyun.OSS.Fakes.StubIOss.aoss::Aliyun#OSS#IOss#ListParts(Aliyun.OSS.ListPartsRequest)">
            <summary>设置 IOss.ListParts(ListPartsRequest listPartsRequest) 的 存根</summary>
        </member>
        <member name="M:Aliyun.OSS.Fakes.StubIOss.aoss::Aliyun#OSS#IOss#ModifyObjectMeta(System.String,System.String,Aliyun.OSS.ObjectMetadata,System.Nullable{System.Int64},System.String)">
            <summary>设置 IOss.ModifyObjectMeta(String bucketName, String key, ObjectMetadata newMeta, Nullable`1&lt;Int64&gt; partSize, String checkpointDir) 的 存根</summary>
        </member>
        <member name="M:Aliyun.OSS.Fakes.StubIOss.aoss::Aliyun#OSS#IOss#PutBigObject(System.String,System.String,System.String,Aliyun.OSS.ObjectMetadata,System.Nullable{System.Int64})">
            <summary>设置 IOss.PutBigObject(String bucketName, String key, String fileToUpload, ObjectMetadata metadata, Nullable`1&lt;Int64&gt; partSize) 的 存根</summary>
        </member>
        <member name="M:Aliyun.OSS.Fakes.StubIOss.aoss::Aliyun#OSS#IOss#PutBigObject(System.String,System.String,System.IO.Stream,Aliyun.OSS.ObjectMetadata,System.Nullable{System.Int64})">
            <summary>设置 IOss.PutBigObject(String bucketName, String key, Stream content, ObjectMetadata metadata, Nullable`1&lt;Int64&gt; partSize) 的 存根</summary>
        </member>
        <member name="M:Aliyun.OSS.Fakes.StubIOss.aoss::Aliyun#OSS#IOss#PutObject(Aliyun.OSS.PutObjectRequest)">
            <summary>设置 IOss.PutObject(PutObjectRequest putObjectRequest) 的 存根</summary>
        </member>
        <member name="M:Aliyun.OSS.Fakes.StubIOss.aoss::Aliyun#OSS#IOss#PutObject(System.Uri,System.String)">
            <summary>设置 IOss.PutObject(Uri signedUrl, String fileToUpload) 的 存根</summary>
        </member>
        <member name="M:Aliyun.OSS.Fakes.StubIOss.aoss::Aliyun#OSS#IOss#PutObject(System.Uri,System.IO.Stream)">
            <summary>设置 IOss.PutObject(Uri signedUrl, Stream content) 的 存根</summary>
        </member>
        <member name="M:Aliyun.OSS.Fakes.StubIOss.aoss::Aliyun#OSS#IOss#PutObject(System.Uri,System.String,Aliyun.OSS.ObjectMetadata)">
            <summary>设置 IOss.PutObject(Uri signedUrl, String fileToUpload, ObjectMetadata metadata) 的 存根</summary>
        </member>
        <member name="M:Aliyun.OSS.Fakes.StubIOss.aoss::Aliyun#OSS#IOss#PutObject(System.Uri,System.IO.Stream,Aliyun.OSS.ObjectMetadata)">
            <summary>设置 IOss.PutObject(Uri signedUrl, Stream content, ObjectMetadata metadata) 的 存根</summary>
        </member>
        <member name="M:Aliyun.OSS.Fakes.StubIOss.aoss::Aliyun#OSS#IOss#PutObject(System.String,System.String,System.String)">
            <summary>设置 IOss.PutObject(String bucketName, String key, String fileToUpload) 的 存根</summary>
        </member>
        <member name="M:Aliyun.OSS.Fakes.StubIOss.aoss::Aliyun#OSS#IOss#PutObject(System.String,System.String,System.IO.Stream)">
            <summary>设置 IOss.PutObject(String bucketName, String key, Stream content) 的 存根</summary>
        </member>
        <member name="M:Aliyun.OSS.Fakes.StubIOss.aoss::Aliyun#OSS#IOss#PutObject(System.String,System.String,System.String,Aliyun.OSS.ObjectMetadata)">
            <summary>设置 IOss.PutObject(String bucketName, String key, String fileToUpload, ObjectMetadata metadata) 的 存根</summary>
        </member>
        <member name="M:Aliyun.OSS.Fakes.StubIOss.aoss::Aliyun#OSS#IOss#PutObject(System.String,System.String,System.IO.Stream,Aliyun.OSS.ObjectMetadata)">
            <summary>设置 IOss.PutObject(String bucketName, String key, Stream content, ObjectMetadata metadata) 的 存根</summary>
        </member>
        <member name="M:Aliyun.OSS.Fakes.StubIOss.aoss::Aliyun#OSS#IOss#ResumableCopyObject(Aliyun.OSS.CopyObjectRequest,System.String,System.Nullable{System.Int64})">
            <summary>设置 IOss.ResumableCopyObject(CopyObjectRequest copyObjectRequest, String checkpointDir, Nullable`1&lt;Int64&gt; partSize) 的 存根</summary>
        </member>
        <member name="M:Aliyun.OSS.Fakes.StubIOss.aoss::Aliyun#OSS#IOss#ResumableUploadObject(System.String,System.String,System.String,Aliyun.OSS.ObjectMetadata,System.String,System.Nullable{System.Int64},System.EventHandler{Aliyun.OSS.StreamTransferProgressArgs})">
            <summary>设置 IOss.ResumableUploadObject(String bucketName, String key, String fileToUpload, ObjectMetadata metadata, String checkpointDir, Nullable`1&lt;Int64&gt; partSize, EventHandler`1&lt;StreamTransferProgressArgs&gt; streamTransferProgress) 的 存根</summary>
        </member>
        <member name="M:Aliyun.OSS.Fakes.StubIOss.aoss::Aliyun#OSS#IOss#ResumableUploadObject(System.String,System.String,System.IO.Stream,Aliyun.OSS.ObjectMetadata,System.String,System.Nullable{System.Int64},System.EventHandler{Aliyun.OSS.StreamTransferProgressArgs})">
            <summary>设置 IOss.ResumableUploadObject(String bucketName, String key, Stream content, ObjectMetadata metadata, String checkpointDir, Nullable`1&lt;Int64&gt; partSize, EventHandler`1&lt;StreamTransferProgressArgs&gt; treamTransferProgress) 的 存根</summary>
        </member>
        <member name="M:Aliyun.OSS.Fakes.StubIOss.aoss::Aliyun#OSS#IOss#SetBucketAcl(Aliyun.OSS.SetBucketAclRequest)">
            <summary>设置 IOss.SetBucketAcl(SetBucketAclRequest setBucketAclRequest) 的 存根</summary>
        </member>
        <member name="M:Aliyun.OSS.Fakes.StubIOss.aoss::Aliyun#OSS#IOss#SetBucketAcl(System.String,Aliyun.OSS.CannedAccessControlList)">
            <summary>设置 IOss.SetBucketAcl(String bucketName, CannedAccessControlList acl) 的 存根</summary>
        </member>
        <member name="M:Aliyun.OSS.Fakes.StubIOss.aoss::Aliyun#OSS#IOss#SetBucketCors(Aliyun.OSS.SetBucketCorsRequest)">
            <summary>设置 IOss.SetBucketCors(SetBucketCorsRequest setBucketCorsRequest) 的 存根</summary>
        </member>
        <member name="M:Aliyun.OSS.Fakes.StubIOss.aoss::Aliyun#OSS#IOss#SetBucketLifecycle(Aliyun.OSS.SetBucketLifecycleRequest)">
            <summary>设置 IOss.SetBucketLifecycle(SetBucketLifecycleRequest setBucketLifecycleRequest) 的 存根</summary>
        </member>
        <member name="M:Aliyun.OSS.Fakes.StubIOss.aoss::Aliyun#OSS#IOss#SetBucketLogging(Aliyun.OSS.SetBucketLoggingRequest)">
            <summary>设置 IOss.SetBucketLogging(SetBucketLoggingRequest setBucketLoggingRequest) 的 存根</summary>
        </member>
        <member name="M:Aliyun.OSS.Fakes.StubIOss.aoss::Aliyun#OSS#IOss#SetBucketReferer(Aliyun.OSS.SetBucketRefererRequest)">
            <summary>设置 IOss.SetBucketReferer(SetBucketRefererRequest setBucketRefererRequest) 的 存根</summary>
        </member>
        <member name="M:Aliyun.OSS.Fakes.StubIOss.aoss::Aliyun#OSS#IOss#SetBucketWebsite(Aliyun.OSS.SetBucketWebsiteRequest)">
            <summary>设置 IOss.SetBucketWebsite(SetBucketWebsiteRequest setBucketWebSiteRequest) 的 存根</summary>
        </member>
        <member name="M:Aliyun.OSS.Fakes.StubIOss.aoss::Aliyun#OSS#IOss#SetEndpoint(System.Uri)">
            <summary>设置 IOss.SetEndpoint(Uri endpoint) 的 存根</summary>
        </member>
        <member name="M:Aliyun.OSS.Fakes.StubIOss.aoss::Aliyun#OSS#IOss#SetObjectAcl(Aliyun.OSS.SetObjectAclRequest)">
            <summary>设置 IOss.SetObjectAcl(SetObjectAclRequest setObjectAclRequest) 的 存根</summary>
        </member>
        <member name="M:Aliyun.OSS.Fakes.StubIOss.aoss::Aliyun#OSS#IOss#SetObjectAcl(System.String,System.String,Aliyun.OSS.CannedAccessControlList)">
            <summary>设置 IOss.SetObjectAcl(String bucketName, String key, CannedAccessControlList acl) 的 存根</summary>
        </member>
        <member name="M:Aliyun.OSS.Fakes.StubIOss.aoss::Aliyun#OSS#IOss#SwitchCredentials(Aliyun.OSS.Common.Authentication.ICredentials)">
            <summary>设置 IOss.SwitchCredentials(ICredentials creds) 的 存根</summary>
        </member>
        <member name="M:Aliyun.OSS.Fakes.StubIOss.aoss::Aliyun#OSS#IOss#UploadPart(Aliyun.OSS.UploadPartRequest)">
            <summary>设置 IOss.UploadPart(UploadPartRequest uploadPartRequest) 的 存根</summary>
        </member>
        <member name="M:Aliyun.OSS.Fakes.StubIOss.aoss::Aliyun#OSS#IOss#UploadPartCopy(Aliyun.OSS.UploadPartCopyRequest)">
            <summary>设置 IOss.UploadPartCopy(UploadPartCopyRequest uploadPartCopyRequest) 的 存根</summary>
        </member>
        <member name="F:Aliyun.OSS.Fakes.StubIOss.AppendObjectAppendObjectRequest">
            <summary>设置 IOss.AppendObject(AppendObjectRequest request) 的 stub</summary>
        </member>
        <member name="F:Aliyun.OSS.Fakes.StubIOss.BeginAppendObjectAppendObjectRequestAsyncCallbackObject">
            <summary>设置 IOss.BeginAppendObject(AppendObjectRequest request, AsyncCallback callback, Object state) 的 stub</summary>
        </member>
        <member name="F:Aliyun.OSS.Fakes.StubIOss.BeginCopyObjectCopyObjectRequestAsyncCallbackObject">
            <summary>设置 IOss.BeginCopyObject(CopyObjectRequest copyObjectRequst, AsyncCallback callback, Object state) 的 stub</summary>
        </member>
        <member name="F:Aliyun.OSS.Fakes.StubIOss.BeginGetObjectGetObjectRequestAsyncCallbackObject">
            <summary>设置 IOss.BeginGetObject(GetObjectRequest getObjectRequest, AsyncCallback callback, Object state) 的 stub</summary>
        </member>
        <member name="F:Aliyun.OSS.Fakes.StubIOss.BeginGetObjectStringStringAsyncCallbackObject">
            <summary>设置 IOss.BeginGetObject(String bucketName, String key, AsyncCallback callback, Object state) 的 stub</summary>
        </member>
        <member name="F:Aliyun.OSS.Fakes.StubIOss.BeginListObjectsListObjectsRequestAsyncCallbackObject">
            <summary>设置 IOss.BeginListObjects(ListObjectsRequest listObjectsRequest, AsyncCallback callback, Object state) 的 stub</summary>
        </member>
        <member name="F:Aliyun.OSS.Fakes.StubIOss.BeginListObjectsStringAsyncCallbackObject">
            <summary>设置 IOss.BeginListObjects(String bucketName, AsyncCallback callback, Object state) 的 stub</summary>
        </member>
        <member name="F:Aliyun.OSS.Fakes.StubIOss.BeginListObjectsStringStringAsyncCallbackObject">
            <summary>设置 IOss.BeginListObjects(String bucketName, String prefix, AsyncCallback callback, Object state) 的 stub</summary>
        </member>
        <member name="F:Aliyun.OSS.Fakes.StubIOss.BeginPutObjectPutObjectRequestAsyncCallbackObject">
            <summary>设置 IOss.BeginPutObject(PutObjectRequest putObjectRequest, AsyncCallback callback, Object state) 的 stub</summary>
        </member>
        <member name="F:Aliyun.OSS.Fakes.StubIOss.BeginPutObjectStringStringStreamAsyncCallbackObject">
            <summary>设置 IOss.BeginPutObject(String bucketName, String key, Stream content, AsyncCallback callback, Object state) 的 stub</summary>
        </member>
        <member name="F:Aliyun.OSS.Fakes.StubIOss.BeginPutObjectStringStringStreamObjectMetadataAsyncCallbackObject">
            <summary>设置 IOss.BeginPutObject(String bucketName, String key, Stream content, ObjectMetadata metadata, AsyncCallback callback, Object state) 的 stub</summary>
        </member>
        <member name="F:Aliyun.OSS.Fakes.StubIOss.BeginPutObjectStringStringStringAsyncCallbackObject">
            <summary>设置 IOss.BeginPutObject(String bucketName, String key, String fileToUpload, AsyncCallback callback, Object state) 的 stub</summary>
        </member>
        <member name="F:Aliyun.OSS.Fakes.StubIOss.BeginPutObjectStringStringStringObjectMetadataAsyncCallbackObject">
            <summary>设置 IOss.BeginPutObject(String bucketName, String key, String fileToUpload, ObjectMetadata metadata, AsyncCallback callback, Object state) 的 stub</summary>
        </member>
        <member name="F:Aliyun.OSS.Fakes.StubIOss.BeginUploadPartCopyUploadPartCopyRequestAsyncCallbackObject">
            <summary>设置 IOss.BeginUploadPartCopy(UploadPartCopyRequest uploadPartCopyRequest, AsyncCallback callback, Object state) 的 stub</summary>
        </member>
        <member name="F:Aliyun.OSS.Fakes.StubIOss.BeginUploadPartUploadPartRequestAsyncCallbackObject">
            <summary>设置 IOss.BeginUploadPart(UploadPartRequest uploadPartRequest, AsyncCallback callback, Object state) 的 stub</summary>
        </member>
        <member name="F:Aliyun.OSS.Fakes.StubIOss.CompleteMultipartUploadCompleteMultipartUploadRequest">
            <summary>设置 IOss.CompleteMultipartUpload(CompleteMultipartUploadRequest completeMultipartUploadRequest) 的 stub</summary>
        </member>
        <member name="F:Aliyun.OSS.Fakes.StubIOss.CopyBigObjectCopyObjectRequestNullableOfInt64String">
            <summary>设置 IOss.CopyBigObject(CopyObjectRequest copyObjectRequest, Nullable`1&lt;Int64&gt; partSize, String checkpointDir) 的 stub</summary>
        </member>
        <member name="F:Aliyun.OSS.Fakes.StubIOss.CopyObjectCopyObjectRequest">
            <summary>设置 IOss.CopyObject(CopyObjectRequest copyObjectRequst) 的 stub</summary>
        </member>
        <member name="F:Aliyun.OSS.Fakes.StubIOss.CreateBucketString">
            <summary>设置 IOss.CreateBucket(String bucketName) 的 stub</summary>
        </member>
        <member name="F:Aliyun.OSS.Fakes.StubIOss.DeleteBucketCorsString">
            <summary>设置 IOss.DeleteBucketCors(String bucketName) 的 stub</summary>
        </member>
        <member name="F:Aliyun.OSS.Fakes.StubIOss.DeleteBucketLoggingString">
            <summary>设置 IOss.DeleteBucketLogging(String bucketName) 的 stub</summary>
        </member>
        <member name="F:Aliyun.OSS.Fakes.StubIOss.DeleteBucketString">
            <summary>设置 IOss.DeleteBucket(String bucketName) 的 stub</summary>
        </member>
        <member name="F:Aliyun.OSS.Fakes.StubIOss.DeleteBucketWebsiteString">
            <summary>设置 IOss.DeleteBucketWebsite(String bucketName) 的 stub</summary>
        </member>
        <member name="F:Aliyun.OSS.Fakes.StubIOss.DeleteObjectStringString">
            <summary>设置 IOss.DeleteObject(String bucketName, String key) 的 stub</summary>
        </member>
        <member name="F:Aliyun.OSS.Fakes.StubIOss.DeleteObjectsDeleteObjectsRequest">
            <summary>设置 IOss.DeleteObjects(DeleteObjectsRequest deleteObjectsRequest) 的 stub</summary>
        </member>
        <member name="F:Aliyun.OSS.Fakes.StubIOss.DoesBucketExistString">
            <summary>设置 IOss.DoesBucketExist(String bucketName) 的 stub</summary>
        </member>
        <member name="F:Aliyun.OSS.Fakes.StubIOss.DoesObjectExistStringString">
            <summary>设置 IOss.DoesObjectExist(String bucketName, String key) 的 stub</summary>
        </member>
        <member name="F:Aliyun.OSS.Fakes.StubIOss.EndAppendObjectIAsyncResult">
            <summary>设置 IOss.EndAppendObject(IAsyncResult asyncResult) 的 stub</summary>
        </member>
        <member name="F:Aliyun.OSS.Fakes.StubIOss.EndCopyResultIAsyncResult">
            <summary>设置 IOss.EndCopyResult(IAsyncResult asyncResult) 的 stub</summary>
        </member>
        <member name="F:Aliyun.OSS.Fakes.StubIOss.EndGetObjectIAsyncResult">
            <summary>设置 IOss.EndGetObject(IAsyncResult asyncResult) 的 stub</summary>
        </member>
        <member name="F:Aliyun.OSS.Fakes.StubIOss.EndListObjectsIAsyncResult">
            <summary>设置 IOss.EndListObjects(IAsyncResult asyncResult) 的 stub</summary>
        </member>
        <member name="F:Aliyun.OSS.Fakes.StubIOss.EndPutObjectIAsyncResult">
            <summary>设置 IOss.EndPutObject(IAsyncResult asyncResult) 的 stub</summary>
        </member>
        <member name="F:Aliyun.OSS.Fakes.StubIOss.EndUploadPartCopyIAsyncResult">
            <summary>设置 IOss.EndUploadPartCopy(IAsyncResult asyncResult) 的 stub</summary>
        </member>
        <member name="F:Aliyun.OSS.Fakes.StubIOss.EndUploadPartIAsyncResult">
            <summary>设置 IOss.EndUploadPart(IAsyncResult asyncResult) 的 stub</summary>
        </member>
        <member name="F:Aliyun.OSS.Fakes.StubIOss.GeneratePostPolicyDateTimePolicyConditions">
            <summary>设置 IOss.GeneratePostPolicy(DateTime expiration, PolicyConditions conds) 的 stub</summary>
        </member>
        <member name="F:Aliyun.OSS.Fakes.StubIOss.GeneratePresignedUriGeneratePresignedUriRequest">
            <summary>设置 IOss.GeneratePresignedUri(GeneratePresignedUriRequest generatePresignedUriRequest) 的 stub</summary>
        </member>
        <member name="F:Aliyun.OSS.Fakes.StubIOss.GeneratePresignedUriStringString">
            <summary>设置 IOss.GeneratePresignedUri(String bucketName, String key) 的 stub</summary>
        </member>
        <member name="F:Aliyun.OSS.Fakes.StubIOss.GeneratePresignedUriStringStringDateTime">
            <summary>设置 IOss.GeneratePresignedUri(String bucketName, String key, DateTime expiration) 的 stub</summary>
        </member>
        <member name="F:Aliyun.OSS.Fakes.StubIOss.GeneratePresignedUriStringStringDateTimeSignHttpMethod">
            <summary>设置 IOss.GeneratePresignedUri(String bucketName, String key, DateTime expiration, SignHttpMethod method) 的 stub</summary>
        </member>
        <member name="F:Aliyun.OSS.Fakes.StubIOss.GeneratePresignedUriStringStringSignHttpMethod">
            <summary>设置 IOss.GeneratePresignedUri(String bucketName, String key, SignHttpMethod method) 的 stub</summary>
        </member>
        <member name="F:Aliyun.OSS.Fakes.StubIOss.GetBucketAclString">
            <summary>设置 IOss.GetBucketAcl(String bucketName) 的 stub</summary>
        </member>
        <member name="F:Aliyun.OSS.Fakes.StubIOss.GetBucketCorsString">
            <summary>设置 IOss.GetBucketCors(String bucketName) 的 stub</summary>
        </member>
        <member name="F:Aliyun.OSS.Fakes.StubIOss.GetBucketLifecycleString">
            <summary>设置 IOss.GetBucketLifecycle(String bucketName) 的 stub</summary>
        </member>
        <member name="F:Aliyun.OSS.Fakes.StubIOss.GetBucketLoggingString">
            <summary>设置 IOss.GetBucketLogging(String bucketName) 的 stub</summary>
        </member>
        <member name="F:Aliyun.OSS.Fakes.StubIOss.GetBucketRefererString">
            <summary>设置 IOss.GetBucketReferer(String bucketName) 的 stub</summary>
        </member>
        <member name="F:Aliyun.OSS.Fakes.StubIOss.GetBucketWebsiteString">
            <summary>设置 IOss.GetBucketWebsite(String bucketName) 的 stub</summary>
        </member>
        <member name="F:Aliyun.OSS.Fakes.StubIOss.GetObjectAclStringString">
            <summary>设置 IOss.GetObjectAcl(String bucketName, String key) 的 stub</summary>
        </member>
        <member name="F:Aliyun.OSS.Fakes.StubIOss.GetObjectGetObjectRequest">
            <summary>设置 IOss.GetObject(GetObjectRequest getObjectRequest) 的 stub</summary>
        </member>
        <member name="F:Aliyun.OSS.Fakes.StubIOss.GetObjectGetObjectRequestStream">
            <summary>设置 IOss.GetObject(GetObjectRequest getObjectRequest, Stream output) 的 stub</summary>
        </member>
        <member name="F:Aliyun.OSS.Fakes.StubIOss.GetObjectMetadataStringString">
            <summary>设置 IOss.GetObjectMetadata(String bucketName, String key) 的 stub</summary>
        </member>
        <member name="F:Aliyun.OSS.Fakes.StubIOss.GetObjectStringString">
            <summary>设置 IOss.GetObject(String bucketName, String key) 的 stub</summary>
        </member>
        <member name="F:Aliyun.OSS.Fakes.StubIOss.GetObjectUri">
            <summary>设置 IOss.GetObject(Uri signedUrl) 的 stub</summary>
        </member>
        <member name="F:Aliyun.OSS.Fakes.StubIOss.InitiateMultipartUploadInitiateMultipartUploadRequest">
            <summary>设置 IOss.InitiateMultipartUpload(InitiateMultipartUploadRequest initiateMultipartUploadRequest) 的 stub</summary>
        </member>
        <member name="F:Aliyun.OSS.Fakes.StubIOss.ListBuckets">
            <summary>设置 IOss.ListBuckets() 的 stub</summary>
        </member>
        <member name="F:Aliyun.OSS.Fakes.StubIOss.ListBucketsListBucketsRequest">
            <summary>设置 IOss.ListBuckets(ListBucketsRequest listBucketsRequest) 的 stub</summary>
        </member>
        <member name="F:Aliyun.OSS.Fakes.StubIOss.ListMultipartUploadsListMultipartUploadsRequest">
            <summary>设置 IOss.ListMultipartUploads(ListMultipartUploadsRequest listMultipartUploadsRequest) 的 stub</summary>
        </member>
        <member name="F:Aliyun.OSS.Fakes.StubIOss.ListObjectsListObjectsRequest">
            <summary>设置 IOss.ListObjects(ListObjectsRequest listObjectsRequest) 的 stub</summary>
        </member>
        <member name="F:Aliyun.OSS.Fakes.StubIOss.ListObjectsString">
            <summary>设置 IOss.ListObjects(String bucketName) 的 stub</summary>
        </member>
        <member name="F:Aliyun.OSS.Fakes.StubIOss.ListObjectsStringString">
            <summary>设置 IOss.ListObjects(String bucketName, String prefix) 的 stub</summary>
        </member>
        <member name="F:Aliyun.OSS.Fakes.StubIOss.ListPartsListPartsRequest">
            <summary>设置 IOss.ListParts(ListPartsRequest listPartsRequest) 的 stub</summary>
        </member>
        <member name="F:Aliyun.OSS.Fakes.StubIOss.ModifyObjectMetaStringStringObjectMetadataNullableOfInt64String">
            <summary>设置 IOss.ModifyObjectMeta(String bucketName, String key, ObjectMetadata newMeta, Nullable`1&lt;Int64&gt; partSize, String checkpointDir) 的 stub</summary>
        </member>
        <member name="F:Aliyun.OSS.Fakes.StubIOss.PutBigObjectStringStringStreamObjectMetadataNullableOfInt64">
            <summary>设置 IOss.PutBigObject(String bucketName, String key, Stream content, ObjectMetadata metadata, Nullable`1&lt;Int64&gt; partSize) 的 stub</summary>
        </member>
        <member name="F:Aliyun.OSS.Fakes.StubIOss.PutBigObjectStringStringStringObjectMetadataNullableOfInt64">
            <summary>设置 IOss.PutBigObject(String bucketName, String key, String fileToUpload, ObjectMetadata metadata, Nullable`1&lt;Int64&gt; partSize) 的 stub</summary>
        </member>
        <member name="F:Aliyun.OSS.Fakes.StubIOss.PutObjectPutObjectRequest">
            <summary>设置 IOss.PutObject(PutObjectRequest putObjectRequest) 的 stub</summary>
        </member>
        <member name="F:Aliyun.OSS.Fakes.StubIOss.PutObjectStringStringStream">
            <summary>设置 IOss.PutObject(String bucketName, String key, Stream content) 的 stub</summary>
        </member>
        <member name="F:Aliyun.OSS.Fakes.StubIOss.PutObjectStringStringStreamObjectMetadata">
            <summary>设置 IOss.PutObject(String bucketName, String key, Stream content, ObjectMetadata metadata) 的 stub</summary>
        </member>
        <member name="F:Aliyun.OSS.Fakes.StubIOss.PutObjectStringStringString">
            <summary>设置 IOss.PutObject(String bucketName, String key, String fileToUpload) 的 stub</summary>
        </member>
        <member name="F:Aliyun.OSS.Fakes.StubIOss.PutObjectStringStringStringObjectMetadata">
            <summary>设置 IOss.PutObject(String bucketName, String key, String fileToUpload, ObjectMetadata metadata) 的 stub</summary>
        </member>
        <member name="F:Aliyun.OSS.Fakes.StubIOss.PutObjectUriStream">
            <summary>设置 IOss.PutObject(Uri signedUrl, Stream content) 的 stub</summary>
        </member>
        <member name="F:Aliyun.OSS.Fakes.StubIOss.PutObjectUriStreamObjectMetadata">
            <summary>设置 IOss.PutObject(Uri signedUrl, Stream content, ObjectMetadata metadata) 的 stub</summary>
        </member>
        <member name="F:Aliyun.OSS.Fakes.StubIOss.PutObjectUriString">
            <summary>设置 IOss.PutObject(Uri signedUrl, String fileToUpload) 的 stub</summary>
        </member>
        <member name="F:Aliyun.OSS.Fakes.StubIOss.PutObjectUriStringObjectMetadata">
            <summary>设置 IOss.PutObject(Uri signedUrl, String fileToUpload, ObjectMetadata metadata) 的 stub</summary>
        </member>
        <member name="F:Aliyun.OSS.Fakes.StubIOss.ResumableCopyObjectCopyObjectRequestStringNullableOfInt64">
            <summary>设置 IOss.ResumableCopyObject(CopyObjectRequest copyObjectRequest, String checkpointDir, Nullable`1&lt;Int64&gt; partSize) 的 stub</summary>
        </member>
        <member name="F:Aliyun.OSS.Fakes.StubIOss.ResumableUploadObjectStringStringStreamObjectMetadataStringNullableOfInt64EventHandlerOfStreamTransferProgressArgs">
            <summary>设置 IOss.ResumableUploadObject(String bucketName, String key, Stream content, ObjectMetadata metadata, String checkpointDir, Nullable`1&lt;Int64&gt; partSize, EventHandler`1&lt;StreamTransferProgressArgs&gt; treamTransferProgress) 的 stub</summary>
        </member>
        <member name="F:Aliyun.OSS.Fakes.StubIOss.ResumableUploadObjectStringStringStringObjectMetadataStringNullableOfInt64EventHandlerOfStreamTransferProgressArgs">
            <summary>设置 IOss.ResumableUploadObject(String bucketName, String key, String fileToUpload, ObjectMetadata metadata, String checkpointDir, Nullable`1&lt;Int64&gt; partSize, EventHandler`1&lt;StreamTransferProgressArgs&gt; streamTransferProgress) 的 stub</summary>
        </member>
        <member name="F:Aliyun.OSS.Fakes.StubIOss.SetBucketAclSetBucketAclRequest">
            <summary>设置 IOss.SetBucketAcl(SetBucketAclRequest setBucketAclRequest) 的 stub</summary>
        </member>
        <member name="F:Aliyun.OSS.Fakes.StubIOss.SetBucketAclStringCannedAccessControlList">
            <summary>设置 IOss.SetBucketAcl(String bucketName, CannedAccessControlList acl) 的 stub</summary>
        </member>
        <member name="F:Aliyun.OSS.Fakes.StubIOss.SetBucketCorsSetBucketCorsRequest">
            <summary>设置 IOss.SetBucketCors(SetBucketCorsRequest setBucketCorsRequest) 的 stub</summary>
        </member>
        <member name="F:Aliyun.OSS.Fakes.StubIOss.SetBucketLifecycleSetBucketLifecycleRequest">
            <summary>设置 IOss.SetBucketLifecycle(SetBucketLifecycleRequest setBucketLifecycleRequest) 的 stub</summary>
        </member>
        <member name="F:Aliyun.OSS.Fakes.StubIOss.SetBucketLoggingSetBucketLoggingRequest">
            <summary>设置 IOss.SetBucketLogging(SetBucketLoggingRequest setBucketLoggingRequest) 的 stub</summary>
        </member>
        <member name="F:Aliyun.OSS.Fakes.StubIOss.SetBucketRefererSetBucketRefererRequest">
            <summary>设置 IOss.SetBucketReferer(SetBucketRefererRequest setBucketRefererRequest) 的 stub</summary>
        </member>
        <member name="F:Aliyun.OSS.Fakes.StubIOss.SetBucketWebsiteSetBucketWebsiteRequest">
            <summary>设置 IOss.SetBucketWebsite(SetBucketWebsiteRequest setBucketWebSiteRequest) 的 stub</summary>
        </member>
        <member name="F:Aliyun.OSS.Fakes.StubIOss.SetEndpointUri">
            <summary>设置 IOss.SetEndpoint(Uri endpoint) 的 stub</summary>
        </member>
        <member name="F:Aliyun.OSS.Fakes.StubIOss.SetObjectAclSetObjectAclRequest">
            <summary>设置 IOss.SetObjectAcl(SetObjectAclRequest setObjectAclRequest) 的 stub</summary>
        </member>
        <member name="F:Aliyun.OSS.Fakes.StubIOss.SetObjectAclStringStringCannedAccessControlList">
            <summary>设置 IOss.SetObjectAcl(String bucketName, String key, CannedAccessControlList acl) 的 stub</summary>
        </member>
        <member name="F:Aliyun.OSS.Fakes.StubIOss.SwitchCredentialsICredentials">
            <summary>设置 IOss.SwitchCredentials(ICredentials creds) 的 stub</summary>
        </member>
        <member name="F:Aliyun.OSS.Fakes.StubIOss.UploadPartCopyUploadPartCopyRequest">
            <summary>设置 IOss.UploadPartCopy(UploadPartCopyRequest uploadPartCopyRequest) 的 stub</summary>
        </member>
        <member name="F:Aliyun.OSS.Fakes.StubIOss.UploadPartUploadPartRequest">
            <summary>设置 IOss.UploadPart(UploadPartRequest uploadPartRequest) 的 stub</summary>
        </member>
        <member name="T:Aliyun.OSS.Fakes.StubInitiateMultipartUploadRequest">
            <summary>Aliyun.OSS.InitiateMultipartUploadRequest 的存根类型</summary>
        </member>
        <member name="M:Aliyun.OSS.Fakes.StubInitiateMultipartUploadRequest.#ctor(System.String,System.String)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Aliyun.OSS.Fakes.StubInitiateMultipartUploadRequest.#ctor(System.String,System.String,Aliyun.OSS.ObjectMetadata)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Aliyun.OSS.Fakes.StubInitiateMultipartUploadRequest.InitializeStub">
            <summary>初始化 type StubInitiateMultipartUploadRequest 的新实例</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.StubInitiateMultipartUploadRequest.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.StubInitiateMultipartUploadRequest.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.StubInitiateMultipartUploadRequest.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Aliyun.OSS.Fakes.StubInitiateMultipartUploadResult">
            <summary>Aliyun.OSS.InitiateMultipartUploadResult 的存根类型</summary>
        </member>
        <member name="M:Aliyun.OSS.Fakes.StubInitiateMultipartUploadResult.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Aliyun.OSS.Fakes.StubInitiateMultipartUploadResult.InitializeStub">
            <summary>初始化 type StubInitiateMultipartUploadResult 的新实例</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.StubInitiateMultipartUploadResult.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.StubInitiateMultipartUploadResult.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.StubInitiateMultipartUploadResult.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Aliyun.OSS.Fakes.StubLifecycleRule">
            <summary>Aliyun.OSS.LifecycleRule 的存根类型</summary>
        </member>
        <member name="M:Aliyun.OSS.Fakes.StubLifecycleRule.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Aliyun.OSS.Fakes.StubLifecycleRule.InitializeStub">
            <summary>初始化 type StubLifecycleRule 的新实例</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.StubLifecycleRule.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.StubLifecycleRule.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.StubLifecycleRule.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Aliyun.OSS.Fakes.StubListBucketsRequest">
            <summary>Aliyun.OSS.ListBucketsRequest 的存根类型</summary>
        </member>
        <member name="M:Aliyun.OSS.Fakes.StubListBucketsRequest.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Aliyun.OSS.Fakes.StubListBucketsRequest.InitializeStub">
            <summary>初始化 type StubListBucketsRequest 的新实例</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.StubListBucketsRequest.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.StubListBucketsRequest.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.StubListBucketsRequest.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Aliyun.OSS.Fakes.StubListBucketsResult">
            <summary>Aliyun.OSS.ListBucketsResult 的存根类型</summary>
        </member>
        <member name="M:Aliyun.OSS.Fakes.StubListBucketsResult.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Aliyun.OSS.Fakes.StubListBucketsResult.InitializeStub">
            <summary>初始化 type StubListBucketsResult 的新实例</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.StubListBucketsResult.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.StubListBucketsResult.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.StubListBucketsResult.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Aliyun.OSS.Fakes.StubListMultipartUploadsRequest">
            <summary>Aliyun.OSS.ListMultipartUploadsRequest 的存根类型</summary>
        </member>
        <member name="M:Aliyun.OSS.Fakes.StubListMultipartUploadsRequest.#ctor(System.String)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Aliyun.OSS.Fakes.StubListMultipartUploadsRequest.InitializeStub">
            <summary>初始化 type StubListMultipartUploadsRequest 的新实例</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.StubListMultipartUploadsRequest.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.StubListMultipartUploadsRequest.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.StubListMultipartUploadsRequest.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Aliyun.OSS.Fakes.StubListObjectsRequest">
            <summary>Aliyun.OSS.ListObjectsRequest 的存根类型</summary>
        </member>
        <member name="M:Aliyun.OSS.Fakes.StubListObjectsRequest.#ctor(System.String)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Aliyun.OSS.Fakes.StubListObjectsRequest.InitializeStub">
            <summary>初始化 type StubListObjectsRequest 的新实例</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.StubListObjectsRequest.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.StubListObjectsRequest.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.StubListObjectsRequest.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Aliyun.OSS.Fakes.StubListPartsRequest">
            <summary>Aliyun.OSS.ListPartsRequest 的存根类型</summary>
        </member>
        <member name="M:Aliyun.OSS.Fakes.StubListPartsRequest.#ctor(System.String,System.String,System.String)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Aliyun.OSS.Fakes.StubListPartsRequest.InitializeStub">
            <summary>初始化 type StubListPartsRequest 的新实例</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.StubListPartsRequest.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.StubListPartsRequest.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.StubListPartsRequest.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Aliyun.OSS.Fakes.StubMultipartUploadListing">
            <summary>Aliyun.OSS.MultipartUploadListing 的存根类型</summary>
        </member>
        <member name="M:Aliyun.OSS.Fakes.StubMultipartUploadListing.#ctor(System.String)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Aliyun.OSS.Fakes.StubMultipartUploadListing.InitializeStub">
            <summary>初始化 type StubMultipartUploadListing 的新实例</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.StubMultipartUploadListing.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.StubMultipartUploadListing.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.StubMultipartUploadListing.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Aliyun.OSS.Fakes.StubObjectMetadata">
            <summary>Aliyun.OSS.ObjectMetadata 的存根类型</summary>
        </member>
        <member name="M:Aliyun.OSS.Fakes.StubObjectMetadata.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Aliyun.OSS.Fakes.StubObjectMetadata.InitializeStub">
            <summary>初始化 type StubObjectMetadata 的新实例</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.StubObjectMetadata.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.StubObjectMetadata.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.StubObjectMetadata.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Aliyun.OSS.Fakes.StubOssClient">
            <summary>Aliyun.OSS.OssClient 的存根类型</summary>
        </member>
        <member name="M:Aliyun.OSS.Fakes.StubOssClient.#ctor(System.Uri,Aliyun.OSS.Common.Authentication.ICredentialsProvider)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Aliyun.OSS.Fakes.StubOssClient.#ctor(System.String,Aliyun.OSS.Common.Authentication.ICredentialsProvider)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Aliyun.OSS.Fakes.StubOssClient.#ctor(System.Uri,Aliyun.OSS.Common.Authentication.ICredentialsProvider,Aliyun.OSS.Common.ClientConfiguration)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Aliyun.OSS.Fakes.StubOssClient.#ctor(System.Uri,System.String,System.String)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Aliyun.OSS.Fakes.StubOssClient.#ctor(System.String,Aliyun.OSS.Common.Authentication.ICredentialsProvider,Aliyun.OSS.Common.ClientConfiguration)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Aliyun.OSS.Fakes.StubOssClient.#ctor(System.String,System.String,System.String)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Aliyun.OSS.Fakes.StubOssClient.#ctor(System.Uri,System.String,System.String,Aliyun.OSS.Common.ClientConfiguration)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Aliyun.OSS.Fakes.StubOssClient.#ctor(System.Uri,System.String,System.String,System.String)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Aliyun.OSS.Fakes.StubOssClient.#ctor(System.String,System.String,System.String,Aliyun.OSS.Common.ClientConfiguration)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Aliyun.OSS.Fakes.StubOssClient.#ctor(System.String,System.String,System.String,System.String)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Aliyun.OSS.Fakes.StubOssClient.#ctor(System.Uri,System.String,System.String,System.String,Aliyun.OSS.Common.ClientConfiguration)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Aliyun.OSS.Fakes.StubOssClient.#ctor(System.String,System.String,System.String,System.String,Aliyun.OSS.Common.ClientConfiguration)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Aliyun.OSS.Fakes.StubOssClient.InitializeStub">
            <summary>初始化 type StubOssClient 的新实例</summary>
        </member>
        <member name="M:Aliyun.OSS.Fakes.StubOssClient.ThrowIfNullRequest``1(``0)">
            <summary>设置 OssClient.ThrowIfNullRequest(!!0 request) 的 存根</summary>
        </member>
        <member name="M:Aliyun.OSS.Fakes.StubOssClient.ThrowIfNullRequestOf1M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{``0})">
            <summary>设置 ThrowIfNullRequest(!!0 request) 的存根</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.StubOssClient.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.StubOssClient.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.StubOssClient.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Aliyun.OSS.Fakes.StubPartETag">
            <summary>Aliyun.OSS.PartETag 的存根类型</summary>
        </member>
        <member name="M:Aliyun.OSS.Fakes.StubPartETag.#ctor(System.Int32,System.String)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Aliyun.OSS.Fakes.StubPartETag.InitializeStub">
            <summary>初始化 type StubPartETag 的新实例</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.StubPartETag.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.StubPartETag.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.StubPartETag.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Aliyun.OSS.Fakes.StubPolicyConditions">
            <summary>Aliyun.OSS.PolicyConditions 的存根类型</summary>
        </member>
        <member name="M:Aliyun.OSS.Fakes.StubPolicyConditions.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Aliyun.OSS.Fakes.StubPolicyConditions.InitializeStub">
            <summary>初始化 type StubPolicyConditions 的新实例</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.StubPolicyConditions.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.StubPolicyConditions.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.StubPolicyConditions.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Aliyun.OSS.Fakes.StubPutObjectRequest">
            <summary>Aliyun.OSS.PutObjectRequest 的存根类型</summary>
        </member>
        <member name="M:Aliyun.OSS.Fakes.StubPutObjectRequest.#ctor(System.String,System.String,System.IO.Stream)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Aliyun.OSS.Fakes.StubPutObjectRequest.#ctor(System.String,System.String,System.IO.Stream,Aliyun.OSS.ObjectMetadata)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Aliyun.OSS.Fakes.StubPutObjectRequest.InitializeStub">
            <summary>初始化 type StubPutObjectRequest 的新实例</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.StubPutObjectRequest.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.StubPutObjectRequest.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.StubPutObjectRequest.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Aliyun.OSS.Fakes.StubResponseHeaderOverrides">
            <summary>Aliyun.OSS.ResponseHeaderOverrides 的存根类型</summary>
        </member>
        <member name="M:Aliyun.OSS.Fakes.StubResponseHeaderOverrides.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Aliyun.OSS.Fakes.StubResponseHeaderOverrides.InitializeStub">
            <summary>初始化 type StubResponseHeaderOverrides 的新实例</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.StubResponseHeaderOverrides.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.StubResponseHeaderOverrides.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.StubResponseHeaderOverrides.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Aliyun.OSS.Fakes.StubSetBucketAclRequest">
            <summary>Aliyun.OSS.SetBucketAclRequest 的存根类型</summary>
        </member>
        <member name="M:Aliyun.OSS.Fakes.StubSetBucketAclRequest.#ctor(System.String,Aliyun.OSS.CannedAccessControlList)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Aliyun.OSS.Fakes.StubSetBucketAclRequest.InitializeStub">
            <summary>初始化 type StubSetBucketAclRequest 的新实例</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.StubSetBucketAclRequest.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.StubSetBucketAclRequest.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.StubSetBucketAclRequest.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Aliyun.OSS.Fakes.StubSetBucketCorsRequest">
            <summary>Aliyun.OSS.SetBucketCorsRequest 的存根类型</summary>
        </member>
        <member name="M:Aliyun.OSS.Fakes.StubSetBucketCorsRequest.#ctor(System.String)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Aliyun.OSS.Fakes.StubSetBucketCorsRequest.InitializeStub">
            <summary>初始化 type StubSetBucketCorsRequest 的新实例</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.StubSetBucketCorsRequest.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.StubSetBucketCorsRequest.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.StubSetBucketCorsRequest.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Aliyun.OSS.Fakes.StubSetBucketLifecycleRequest">
            <summary>Aliyun.OSS.SetBucketLifecycleRequest 的存根类型</summary>
        </member>
        <member name="M:Aliyun.OSS.Fakes.StubSetBucketLifecycleRequest.#ctor(System.String)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Aliyun.OSS.Fakes.StubSetBucketLifecycleRequest.InitializeStub">
            <summary>初始化 type StubSetBucketLifecycleRequest 的新实例</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.StubSetBucketLifecycleRequest.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.StubSetBucketLifecycleRequest.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.StubSetBucketLifecycleRequest.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Aliyun.OSS.Fakes.StubSetBucketLoggingRequest">
            <summary>Aliyun.OSS.SetBucketLoggingRequest 的存根类型</summary>
        </member>
        <member name="M:Aliyun.OSS.Fakes.StubSetBucketLoggingRequest.#ctor(System.String,System.String,System.String)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Aliyun.OSS.Fakes.StubSetBucketLoggingRequest.InitializeStub">
            <summary>初始化 type StubSetBucketLoggingRequest 的新实例</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.StubSetBucketLoggingRequest.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.StubSetBucketLoggingRequest.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.StubSetBucketLoggingRequest.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Aliyun.OSS.Fakes.StubSetBucketRefererRequest">
            <summary>Aliyun.OSS.SetBucketRefererRequest 的存根类型</summary>
        </member>
        <member name="M:Aliyun.OSS.Fakes.StubSetBucketRefererRequest.#ctor(System.String)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Aliyun.OSS.Fakes.StubSetBucketRefererRequest.#ctor(System.String,System.Collections.Generic.IList{System.String})">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Aliyun.OSS.Fakes.StubSetBucketRefererRequest.#ctor(System.String,System.Collections.Generic.IEnumerable{System.String},System.Boolean)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Aliyun.OSS.Fakes.StubSetBucketRefererRequest.InitializeStub">
            <summary>初始化 type StubSetBucketRefererRequest 的新实例</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.StubSetBucketRefererRequest.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.StubSetBucketRefererRequest.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.StubSetBucketRefererRequest.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Aliyun.OSS.Fakes.StubSetBucketWebsiteRequest">
            <summary>Aliyun.OSS.SetBucketWebsiteRequest 的存根类型</summary>
        </member>
        <member name="M:Aliyun.OSS.Fakes.StubSetBucketWebsiteRequest.#ctor(System.String,System.String,System.String)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Aliyun.OSS.Fakes.StubSetBucketWebsiteRequest.InitializeStub">
            <summary>初始化 type StubSetBucketWebsiteRequest 的新实例</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.StubSetBucketWebsiteRequest.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.StubSetBucketWebsiteRequest.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.StubSetBucketWebsiteRequest.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Aliyun.OSS.Fakes.StubSetObjectAclRequest">
            <summary>Aliyun.OSS.SetObjectAclRequest 的存根类型</summary>
        </member>
        <member name="M:Aliyun.OSS.Fakes.StubSetObjectAclRequest.#ctor(System.String,System.String,Aliyun.OSS.CannedAccessControlList)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Aliyun.OSS.Fakes.StubSetObjectAclRequest.InitializeStub">
            <summary>初始化 type StubSetObjectAclRequest 的新实例</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.StubSetObjectAclRequest.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.StubSetObjectAclRequest.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.StubSetObjectAclRequest.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Aliyun.OSS.Fakes.StubStreamTransferProgressArgs">
            <summary>Aliyun.OSS.StreamTransferProgressArgs 的存根类型</summary>
        </member>
        <member name="M:Aliyun.OSS.Fakes.StubStreamTransferProgressArgs.#ctor(System.Int64,System.Int64,System.Int64)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Aliyun.OSS.Fakes.StubStreamTransferProgressArgs.InitializeStub">
            <summary>初始化 type StubStreamTransferProgressArgs 的新实例</summary>
        </member>
        <member name="M:Aliyun.OSS.Fakes.StubStreamTransferProgressArgs.ToString">
            <summary>设置 StreamTransferProgressArgs.ToString() 的 存根</summary>
        </member>
        <member name="F:Aliyun.OSS.Fakes.StubStreamTransferProgressArgs.ToString01">
            <summary>设置 StreamTransferProgressArgs.ToString() 的 stub</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.StubStreamTransferProgressArgs.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.StubStreamTransferProgressArgs.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.StubStreamTransferProgressArgs.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Aliyun.OSS.Fakes.StubUploadPartCopyRequest">
            <summary>Aliyun.OSS.UploadPartCopyRequest 的存根类型</summary>
        </member>
        <member name="M:Aliyun.OSS.Fakes.StubUploadPartCopyRequest.#ctor(System.String,System.String,System.String,System.String,System.String)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Aliyun.OSS.Fakes.StubUploadPartCopyRequest.InitializeStub">
            <summary>初始化 type StubUploadPartCopyRequest 的新实例</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.StubUploadPartCopyRequest.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.StubUploadPartCopyRequest.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.StubUploadPartCopyRequest.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Aliyun.OSS.Fakes.StubUploadPartRequest">
            <summary>Aliyun.OSS.UploadPartRequest 的存根类型</summary>
        </member>
        <member name="M:Aliyun.OSS.Fakes.StubUploadPartRequest.#ctor(System.String,System.String,System.String)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Aliyun.OSS.Fakes.StubUploadPartRequest.InitializeStub">
            <summary>初始化 type StubUploadPartRequest 的新实例</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.StubUploadPartRequest.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.StubUploadPartRequest.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Aliyun.OSS.Fakes.StubUploadPartRequest.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Aliyun.OSS.Model.Fakes.ShimAccessControlPolicy">
            <summary>Aliyun.OSS.Model.AccessControlPolicy 的填充码类型</summary>
        </member>
        <member name="M:Aliyun.OSS.Model.Fakes.ShimAccessControlPolicy.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Aliyun.OSS.Model.Fakes.ShimAccessControlPolicy.#ctor(Aliyun.OSS.Model.AccessControlPolicy)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Aliyun.OSS.Model.Fakes.ShimAccessControlPolicy.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Aliyun.OSS.Model.Fakes.ShimAccessControlPolicy.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.ShimAccessControlPolicy.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.ShimAccessControlPolicy.Constructor">
            <summary>设置 AccessControlPolicy.AccessControlPolicy() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.ShimAccessControlPolicy.GrantsGet">
            <summary>设置 AccessControlPolicy.get_Grants() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.ShimAccessControlPolicy.GrantsSetListOfString">
            <summary>设置 AccessControlPolicy.set_Grants(List`1&lt;String&gt; value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.ShimAccessControlPolicy.OwnerGet">
            <summary>设置 AccessControlPolicy.get_Owner() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.ShimAccessControlPolicy.OwnerSetOwner">
            <summary>设置 AccessControlPolicy.set_Owner(Owner value) 的 填充码</summary>
        </member>
        <member name="T:Aliyun.OSS.Model.Fakes.ShimAccessControlPolicy.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.ShimAccessControlPolicy.AllInstances.GrantsGet">
            <summary>设置 AccessControlPolicy.get_Grants() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.ShimAccessControlPolicy.AllInstances.GrantsSetListOfString">
            <summary>设置 AccessControlPolicy.set_Grants(List`1&lt;String&gt; value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.ShimAccessControlPolicy.AllInstances.OwnerGet">
            <summary>设置 AccessControlPolicy.get_Owner() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.ShimAccessControlPolicy.AllInstances.OwnerSetOwner">
            <summary>设置 AccessControlPolicy.set_Owner(Owner value) 的 填充码</summary>
        </member>
        <member name="T:Aliyun.OSS.Model.Fakes.ShimBucketModel">
            <summary>Aliyun.OSS.Model.BucketModel 的填充码类型</summary>
        </member>
        <member name="M:Aliyun.OSS.Model.Fakes.ShimBucketModel.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Aliyun.OSS.Model.Fakes.ShimBucketModel.#ctor(Aliyun.OSS.Model.BucketModel)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Aliyun.OSS.Model.Fakes.ShimBucketModel.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Aliyun.OSS.Model.Fakes.ShimBucketModel.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.ShimBucketModel.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.ShimBucketModel.Constructor">
            <summary>设置 BucketModel.BucketModel() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.ShimBucketModel.CreationDateGet">
            <summary>设置 BucketModel.get_CreationDate() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.ShimBucketModel.CreationDateSetDateTime">
            <summary>设置 BucketModel.set_CreationDate(DateTime value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.ShimBucketModel.LocationGet">
            <summary>设置 BucketModel.get_Location() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.ShimBucketModel.LocationSetString">
            <summary>设置 BucketModel.set_Location(String value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.ShimBucketModel.NameGet">
            <summary>设置 BucketModel.get_Name() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.ShimBucketModel.NameSetString">
            <summary>设置 BucketModel.set_Name(String value) 的 填充码</summary>
        </member>
        <member name="T:Aliyun.OSS.Model.Fakes.ShimBucketModel.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.ShimBucketModel.AllInstances.CreationDateGet">
            <summary>设置 BucketModel.get_CreationDate() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.ShimBucketModel.AllInstances.CreationDateSetDateTime">
            <summary>设置 BucketModel.set_CreationDate(DateTime value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.ShimBucketModel.AllInstances.LocationGet">
            <summary>设置 BucketModel.get_Location() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.ShimBucketModel.AllInstances.LocationSetString">
            <summary>设置 BucketModel.set_Location(String value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.ShimBucketModel.AllInstances.NameGet">
            <summary>设置 BucketModel.get_Name() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.ShimBucketModel.AllInstances.NameSetString">
            <summary>设置 BucketModel.set_Name(String value) 的 填充码</summary>
        </member>
        <member name="T:Aliyun.OSS.Model.Fakes.ShimCompleteMultipartUploadRequestModel">
            <summary>Aliyun.OSS.Model.CompleteMultipartUploadRequestModel 的填充码类型</summary>
        </member>
        <member name="M:Aliyun.OSS.Model.Fakes.ShimCompleteMultipartUploadRequestModel.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Aliyun.OSS.Model.Fakes.ShimCompleteMultipartUploadRequestModel.#ctor(Aliyun.OSS.Model.CompleteMultipartUploadRequestModel)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Aliyun.OSS.Model.Fakes.ShimCompleteMultipartUploadRequestModel.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Aliyun.OSS.Model.Fakes.ShimCompleteMultipartUploadRequestModel.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.ShimCompleteMultipartUploadRequestModel.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.ShimCompleteMultipartUploadRequestModel.Constructor">
            <summary>设置 CompleteMultipartUploadRequestModel.CompleteMultipartUploadRequestModel() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.ShimCompleteMultipartUploadRequestModel.PartsGet">
            <summary>设置 CompleteMultipartUploadRequestModel.get_Parts() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.ShimCompleteMultipartUploadRequestModel.PartsSetCompleteMultipartUploadRequestModelCompletePartArray">
            <summary>设置 CompleteMultipartUploadRequestModel.set_Parts(CompletePart[] value) 的 填充码</summary>
        </member>
        <member name="T:Aliyun.OSS.Model.Fakes.ShimCompleteMultipartUploadRequestModel.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.ShimCompleteMultipartUploadRequestModel.AllInstances.PartsGet">
            <summary>设置 CompleteMultipartUploadRequestModel.get_Parts() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.ShimCompleteMultipartUploadRequestModel.AllInstances.PartsSetCompleteMultipartUploadRequestModelCompletePartArray">
            <summary>设置 CompleteMultipartUploadRequestModel.set_Parts(CompletePart[] value) 的 填充码</summary>
        </member>
        <member name="T:Aliyun.OSS.Model.Fakes.ShimCompleteMultipartUploadRequestModel.ShimCompletePart">
            <summary>Aliyun.OSS.Model.CompleteMultipartUploadRequestModel+CompletePart 的填充码类型</summary>
        </member>
        <member name="M:Aliyun.OSS.Model.Fakes.ShimCompleteMultipartUploadRequestModel.ShimCompletePart.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Aliyun.OSS.Model.Fakes.ShimCompleteMultipartUploadRequestModel.ShimCompletePart.#ctor(Aliyun.OSS.Model.CompleteMultipartUploadRequestModel.CompletePart)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Aliyun.OSS.Model.Fakes.ShimCompleteMultipartUploadRequestModel.ShimCompletePart.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Aliyun.OSS.Model.Fakes.ShimCompleteMultipartUploadRequestModel.ShimCompletePart.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.ShimCompleteMultipartUploadRequestModel.ShimCompletePart.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.ShimCompleteMultipartUploadRequestModel.ShimCompletePart.Constructor">
            <summary>设置 CompletePart.CompletePart() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.ShimCompleteMultipartUploadRequestModel.ShimCompletePart.ETagGet">
            <summary>设置 CompletePart.get_ETag() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.ShimCompleteMultipartUploadRequestModel.ShimCompletePart.ETagSetString">
            <summary>设置 CompletePart.set_ETag(String value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.ShimCompleteMultipartUploadRequestModel.ShimCompletePart.PartNumberGet">
            <summary>设置 CompletePart.get_PartNumber() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.ShimCompleteMultipartUploadRequestModel.ShimCompletePart.PartNumberSetInt32">
            <summary>设置 CompletePart.set_PartNumber(Int32 value) 的 填充码</summary>
        </member>
        <member name="T:Aliyun.OSS.Model.Fakes.ShimCompleteMultipartUploadRequestModel.ShimCompletePart.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.ShimCompleteMultipartUploadRequestModel.ShimCompletePart.AllInstances.ETagGet">
            <summary>设置 CompletePart.get_ETag() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.ShimCompleteMultipartUploadRequestModel.ShimCompletePart.AllInstances.ETagSetString">
            <summary>设置 CompletePart.set_ETag(String value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.ShimCompleteMultipartUploadRequestModel.ShimCompletePart.AllInstances.PartNumberGet">
            <summary>设置 CompletePart.get_PartNumber() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.ShimCompleteMultipartUploadRequestModel.ShimCompletePart.AllInstances.PartNumberSetInt32">
            <summary>设置 CompletePart.set_PartNumber(Int32 value) 的 填充码</summary>
        </member>
        <member name="T:Aliyun.OSS.Model.Fakes.ShimCompleteMultipartUploadResultModel">
            <summary>Aliyun.OSS.Model.CompleteMultipartUploadResultModel 的填充码类型</summary>
        </member>
        <member name="M:Aliyun.OSS.Model.Fakes.ShimCompleteMultipartUploadResultModel.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Aliyun.OSS.Model.Fakes.ShimCompleteMultipartUploadResultModel.#ctor(Aliyun.OSS.Model.CompleteMultipartUploadResultModel)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Aliyun.OSS.Model.Fakes.ShimCompleteMultipartUploadResultModel.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Aliyun.OSS.Model.Fakes.ShimCompleteMultipartUploadResultModel.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.ShimCompleteMultipartUploadResultModel.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.ShimCompleteMultipartUploadResultModel.BucketGet">
            <summary>设置 CompleteMultipartUploadResultModel.get_Bucket() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.ShimCompleteMultipartUploadResultModel.BucketSetString">
            <summary>设置 CompleteMultipartUploadResultModel.set_Bucket(String value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.ShimCompleteMultipartUploadResultModel.Constructor">
            <summary>设置 CompleteMultipartUploadResultModel.CompleteMultipartUploadResultModel() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.ShimCompleteMultipartUploadResultModel.ETagGet">
            <summary>设置 CompleteMultipartUploadResultModel.get_ETag() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.ShimCompleteMultipartUploadResultModel.ETagSetString">
            <summary>设置 CompleteMultipartUploadResultModel.set_ETag(String value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.ShimCompleteMultipartUploadResultModel.KeyGet">
            <summary>设置 CompleteMultipartUploadResultModel.get_Key() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.ShimCompleteMultipartUploadResultModel.KeySetString">
            <summary>设置 CompleteMultipartUploadResultModel.set_Key(String value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.ShimCompleteMultipartUploadResultModel.LocationGet">
            <summary>设置 CompleteMultipartUploadResultModel.get_Location() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.ShimCompleteMultipartUploadResultModel.LocationSetString">
            <summary>设置 CompleteMultipartUploadResultModel.set_Location(String value) 的 填充码</summary>
        </member>
        <member name="T:Aliyun.OSS.Model.Fakes.ShimCompleteMultipartUploadResultModel.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.ShimCompleteMultipartUploadResultModel.AllInstances.BucketGet">
            <summary>设置 CompleteMultipartUploadResultModel.get_Bucket() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.ShimCompleteMultipartUploadResultModel.AllInstances.BucketSetString">
            <summary>设置 CompleteMultipartUploadResultModel.set_Bucket(String value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.ShimCompleteMultipartUploadResultModel.AllInstances.ETagGet">
            <summary>设置 CompleteMultipartUploadResultModel.get_ETag() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.ShimCompleteMultipartUploadResultModel.AllInstances.ETagSetString">
            <summary>设置 CompleteMultipartUploadResultModel.set_ETag(String value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.ShimCompleteMultipartUploadResultModel.AllInstances.KeyGet">
            <summary>设置 CompleteMultipartUploadResultModel.get_Key() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.ShimCompleteMultipartUploadResultModel.AllInstances.KeySetString">
            <summary>设置 CompleteMultipartUploadResultModel.set_Key(String value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.ShimCompleteMultipartUploadResultModel.AllInstances.LocationGet">
            <summary>设置 CompleteMultipartUploadResultModel.get_Location() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.ShimCompleteMultipartUploadResultModel.AllInstances.LocationSetString">
            <summary>设置 CompleteMultipartUploadResultModel.set_Location(String value) 的 填充码</summary>
        </member>
        <member name="T:Aliyun.OSS.Model.Fakes.ShimCopyObjectResultModel">
            <summary>Aliyun.OSS.Model.CopyObjectResultModel 的填充码类型</summary>
        </member>
        <member name="M:Aliyun.OSS.Model.Fakes.ShimCopyObjectResultModel.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Aliyun.OSS.Model.Fakes.ShimCopyObjectResultModel.#ctor(Aliyun.OSS.Model.CopyObjectResultModel)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Aliyun.OSS.Model.Fakes.ShimCopyObjectResultModel.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Aliyun.OSS.Model.Fakes.ShimCopyObjectResultModel.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.ShimCopyObjectResultModel.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.ShimCopyObjectResultModel.Constructor">
            <summary>设置 CopyObjectResultModel.CopyObjectResultModel() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.ShimCopyObjectResultModel.ETagGet">
            <summary>设置 CopyObjectResultModel.get_ETag() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.ShimCopyObjectResultModel.ETagSetString">
            <summary>设置 CopyObjectResultModel.set_ETag(String value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.ShimCopyObjectResultModel.LastModifiedGet">
            <summary>设置 CopyObjectResultModel.get_LastModified() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.ShimCopyObjectResultModel.LastModifiedSetDateTime">
            <summary>设置 CopyObjectResultModel.set_LastModified(DateTime value) 的 填充码</summary>
        </member>
        <member name="T:Aliyun.OSS.Model.Fakes.ShimCopyObjectResultModel.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.ShimCopyObjectResultModel.AllInstances.ETagGet">
            <summary>设置 CopyObjectResultModel.get_ETag() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.ShimCopyObjectResultModel.AllInstances.ETagSetString">
            <summary>设置 CopyObjectResultModel.set_ETag(String value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.ShimCopyObjectResultModel.AllInstances.LastModifiedGet">
            <summary>设置 CopyObjectResultModel.get_LastModified() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.ShimCopyObjectResultModel.AllInstances.LastModifiedSetDateTime">
            <summary>设置 CopyObjectResultModel.set_LastModified(DateTime value) 的 填充码</summary>
        </member>
        <member name="T:Aliyun.OSS.Model.Fakes.ShimDeleteObjectsRequestModel">
            <summary>Aliyun.OSS.Model.DeleteObjectsRequestModel 的填充码类型</summary>
        </member>
        <member name="M:Aliyun.OSS.Model.Fakes.ShimDeleteObjectsRequestModel.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Aliyun.OSS.Model.Fakes.ShimDeleteObjectsRequestModel.#ctor(Aliyun.OSS.Model.DeleteObjectsRequestModel)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Aliyun.OSS.Model.Fakes.ShimDeleteObjectsRequestModel.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Aliyun.OSS.Model.Fakes.ShimDeleteObjectsRequestModel.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.ShimDeleteObjectsRequestModel.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.ShimDeleteObjectsRequestModel.Constructor">
            <summary>设置 DeleteObjectsRequestModel.DeleteObjectsRequestModel() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.ShimDeleteObjectsRequestModel.KeysGet">
            <summary>设置 DeleteObjectsRequestModel.get_Keys() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.ShimDeleteObjectsRequestModel.KeysSetDeleteObjectsRequestModelObjectToDelArray">
            <summary>设置 DeleteObjectsRequestModel.set_Keys(ObjectToDel[] value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.ShimDeleteObjectsRequestModel.QuietGet">
            <summary>设置 DeleteObjectsRequestModel.get_Quiet() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.ShimDeleteObjectsRequestModel.QuietSetBoolean">
            <summary>设置 DeleteObjectsRequestModel.set_Quiet(Boolean value) 的 填充码</summary>
        </member>
        <member name="T:Aliyun.OSS.Model.Fakes.ShimDeleteObjectsRequestModel.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.ShimDeleteObjectsRequestModel.AllInstances.KeysGet">
            <summary>设置 DeleteObjectsRequestModel.get_Keys() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.ShimDeleteObjectsRequestModel.AllInstances.KeysSetDeleteObjectsRequestModelObjectToDelArray">
            <summary>设置 DeleteObjectsRequestModel.set_Keys(ObjectToDel[] value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.ShimDeleteObjectsRequestModel.AllInstances.QuietGet">
            <summary>设置 DeleteObjectsRequestModel.get_Quiet() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.ShimDeleteObjectsRequestModel.AllInstances.QuietSetBoolean">
            <summary>设置 DeleteObjectsRequestModel.set_Quiet(Boolean value) 的 填充码</summary>
        </member>
        <member name="T:Aliyun.OSS.Model.Fakes.ShimDeleteObjectsRequestModel.ShimObjectToDel">
            <summary>Aliyun.OSS.Model.DeleteObjectsRequestModel+ObjectToDel 的填充码类型</summary>
        </member>
        <member name="M:Aliyun.OSS.Model.Fakes.ShimDeleteObjectsRequestModel.ShimObjectToDel.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Aliyun.OSS.Model.Fakes.ShimDeleteObjectsRequestModel.ShimObjectToDel.#ctor(Aliyun.OSS.Model.DeleteObjectsRequestModel.ObjectToDel)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Aliyun.OSS.Model.Fakes.ShimDeleteObjectsRequestModel.ShimObjectToDel.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Aliyun.OSS.Model.Fakes.ShimDeleteObjectsRequestModel.ShimObjectToDel.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.ShimDeleteObjectsRequestModel.ShimObjectToDel.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.ShimDeleteObjectsRequestModel.ShimObjectToDel.Constructor">
            <summary>设置 ObjectToDel.ObjectToDel() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.ShimDeleteObjectsRequestModel.ShimObjectToDel.KeyGet">
            <summary>设置 ObjectToDel.get_Key() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.ShimDeleteObjectsRequestModel.ShimObjectToDel.KeySetString">
            <summary>设置 ObjectToDel.set_Key(String value) 的 填充码</summary>
        </member>
        <member name="T:Aliyun.OSS.Model.Fakes.ShimDeleteObjectsRequestModel.ShimObjectToDel.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.ShimDeleteObjectsRequestModel.ShimObjectToDel.AllInstances.KeyGet">
            <summary>设置 ObjectToDel.get_Key() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.ShimDeleteObjectsRequestModel.ShimObjectToDel.AllInstances.KeySetString">
            <summary>设置 ObjectToDel.set_Key(String value) 的 填充码</summary>
        </member>
        <member name="T:Aliyun.OSS.Model.Fakes.ShimErrorResult">
            <summary>Aliyun.OSS.Model.ErrorResult 的填充码类型</summary>
        </member>
        <member name="M:Aliyun.OSS.Model.Fakes.ShimErrorResult.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Aliyun.OSS.Model.Fakes.ShimErrorResult.#ctor(Aliyun.OSS.Model.ErrorResult)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Aliyun.OSS.Model.Fakes.ShimErrorResult.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Aliyun.OSS.Model.Fakes.ShimErrorResult.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.ShimErrorResult.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.ShimErrorResult.CodeGet">
            <summary>设置 ErrorResult.get_Code() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.ShimErrorResult.CodeSetString">
            <summary>设置 ErrorResult.set_Code(String value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.ShimErrorResult.Constructor">
            <summary>设置 ErrorResult.ErrorResult() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.ShimErrorResult.HostIdGet">
            <summary>设置 ErrorResult.get_HostId() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.ShimErrorResult.HostIdSetString">
            <summary>设置 ErrorResult.set_HostId(String value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.ShimErrorResult.MessageGet">
            <summary>设置 ErrorResult.get_Message() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.ShimErrorResult.MessageSetString">
            <summary>设置 ErrorResult.set_Message(String value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.ShimErrorResult.RequestIdGet">
            <summary>设置 ErrorResult.get_RequestId() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.ShimErrorResult.RequestIdSetString">
            <summary>设置 ErrorResult.set_RequestId(String value) 的 填充码</summary>
        </member>
        <member name="T:Aliyun.OSS.Model.Fakes.ShimErrorResult.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.ShimErrorResult.AllInstances.CodeGet">
            <summary>设置 ErrorResult.get_Code() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.ShimErrorResult.AllInstances.CodeSetString">
            <summary>设置 ErrorResult.set_Code(String value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.ShimErrorResult.AllInstances.HostIdGet">
            <summary>设置 ErrorResult.get_HostId() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.ShimErrorResult.AllInstances.HostIdSetString">
            <summary>设置 ErrorResult.set_HostId(String value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.ShimErrorResult.AllInstances.MessageGet">
            <summary>设置 ErrorResult.get_Message() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.ShimErrorResult.AllInstances.MessageSetString">
            <summary>设置 ErrorResult.set_Message(String value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.ShimErrorResult.AllInstances.RequestIdGet">
            <summary>设置 ErrorResult.get_RequestId() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.ShimErrorResult.AllInstances.RequestIdSetString">
            <summary>设置 ErrorResult.set_RequestId(String value) 的 填充码</summary>
        </member>
        <member name="T:Aliyun.OSS.Model.Fakes.ShimExpiration">
            <summary>Aliyun.OSS.Model.Expiration 的填充码类型</summary>
        </member>
        <member name="M:Aliyun.OSS.Model.Fakes.ShimExpiration.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Aliyun.OSS.Model.Fakes.ShimExpiration.#ctor(Aliyun.OSS.Model.Expiration)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Aliyun.OSS.Model.Fakes.ShimExpiration.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Aliyun.OSS.Model.Fakes.ShimExpiration.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.ShimExpiration.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.ShimExpiration.Constructor">
            <summary>设置 Expiration.Expiration() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.ShimExpiration.DateGet">
            <summary>设置 Expiration.get_Date() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.ShimExpiration.DateSetString">
            <summary>设置 Expiration.set_Date(String value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.ShimExpiration.DaysGet">
            <summary>设置 Expiration.get_Days() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.ShimExpiration.DaysSetNullableOfInt32">
            <summary>设置 Expiration.set_Days(Nullable`1&lt;Int32&gt; value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.ShimExpiration.IsSetDate">
            <summary>设置 Expiration.IsSetDate() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.ShimExpiration.IsSetDays">
            <summary>设置 Expiration.IsSetDays() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.ShimExpiration.ShouldSerializeDate">
            <summary>设置 Expiration.ShouldSerializeDate() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.ShimExpiration.ShouldSerializeDays">
            <summary>设置 Expiration.ShouldSerializeDays() 的 填充码</summary>
        </member>
        <member name="T:Aliyun.OSS.Model.Fakes.ShimExpiration.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.ShimExpiration.AllInstances.DateGet">
            <summary>设置 Expiration.get_Date() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.ShimExpiration.AllInstances.DateSetString">
            <summary>设置 Expiration.set_Date(String value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.ShimExpiration.AllInstances.DaysGet">
            <summary>设置 Expiration.get_Days() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.ShimExpiration.AllInstances.DaysSetNullableOfInt32">
            <summary>设置 Expiration.set_Days(Nullable`1&lt;Int32&gt; value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.ShimExpiration.AllInstances.IsSetDate">
            <summary>设置 Expiration.IsSetDate() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.ShimExpiration.AllInstances.IsSetDays">
            <summary>设置 Expiration.IsSetDays() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.ShimExpiration.AllInstances.ShouldSerializeDate">
            <summary>设置 Expiration.ShouldSerializeDate() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.ShimExpiration.AllInstances.ShouldSerializeDays">
            <summary>设置 Expiration.ShouldSerializeDays() 的 填充码</summary>
        </member>
        <member name="T:Aliyun.OSS.Model.Fakes.ShimGenericResult">
            <summary>Aliyun.OSS.Model.GenericResult 的填充码类型</summary>
        </member>
        <member name="M:Aliyun.OSS.Model.Fakes.ShimGenericResult.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Aliyun.OSS.Model.Fakes.ShimGenericResult.#ctor(Aliyun.OSS.Model.GenericResult)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Aliyun.OSS.Model.Fakes.ShimGenericResult.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Aliyun.OSS.Model.Fakes.ShimGenericResult.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.ShimGenericResult.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.ShimGenericResult.Constructor">
            <summary>设置 GenericResult.GenericResult() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.ShimGenericResult.ContentLengthGet">
            <summary>设置 GenericResult.get_ContentLength() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.ShimGenericResult.ContentLengthSetInt64">
            <summary>设置 GenericResult.set_ContentLength(Int64 value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.ShimGenericResult.HttpStatusCodeGet">
            <summary>设置 GenericResult.get_HttpStatusCode() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.ShimGenericResult.HttpStatusCodeSetHttpStatusCode">
            <summary>设置 GenericResult.set_HttpStatusCode(HttpStatusCode value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.ShimGenericResult.RequestIdGet">
            <summary>设置 GenericResult.get_RequestId() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.ShimGenericResult.RequestIdSetString">
            <summary>设置 GenericResult.set_RequestId(String value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.ShimGenericResult.ResponseMetadataGet">
            <summary>设置 GenericResult.get_ResponseMetadata() 的 填充码</summary>
        </member>
        <member name="T:Aliyun.OSS.Model.Fakes.ShimGenericResult.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.ShimGenericResult.AllInstances.ContentLengthGet">
            <summary>设置 GenericResult.get_ContentLength() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.ShimGenericResult.AllInstances.ContentLengthSetInt64">
            <summary>设置 GenericResult.set_ContentLength(Int64 value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.ShimGenericResult.AllInstances.HttpStatusCodeGet">
            <summary>设置 GenericResult.get_HttpStatusCode() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.ShimGenericResult.AllInstances.HttpStatusCodeSetHttpStatusCode">
            <summary>设置 GenericResult.set_HttpStatusCode(HttpStatusCode value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.ShimGenericResult.AllInstances.RequestIdGet">
            <summary>设置 GenericResult.get_RequestId() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.ShimGenericResult.AllInstances.RequestIdSetString">
            <summary>设置 GenericResult.set_RequestId(String value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.ShimGenericResult.AllInstances.ResponseMetadataGet">
            <summary>设置 GenericResult.get_ResponseMetadata() 的 填充码</summary>
        </member>
        <member name="T:Aliyun.OSS.Model.Fakes.ShimInitiateMultipartResult">
            <summary>Aliyun.OSS.Model.InitiateMultipartResult 的填充码类型</summary>
        </member>
        <member name="M:Aliyun.OSS.Model.Fakes.ShimInitiateMultipartResult.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Aliyun.OSS.Model.Fakes.ShimInitiateMultipartResult.#ctor(Aliyun.OSS.Model.InitiateMultipartResult)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Aliyun.OSS.Model.Fakes.ShimInitiateMultipartResult.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Aliyun.OSS.Model.Fakes.ShimInitiateMultipartResult.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.ShimInitiateMultipartResult.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.ShimInitiateMultipartResult.BucketGet">
            <summary>设置 InitiateMultipartResult.get_Bucket() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.ShimInitiateMultipartResult.BucketSetString">
            <summary>设置 InitiateMultipartResult.set_Bucket(String value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.ShimInitiateMultipartResult.Constructor">
            <summary>设置 InitiateMultipartResult.InitiateMultipartResult() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.ShimInitiateMultipartResult.EncodingTypeGet">
            <summary>设置 InitiateMultipartResult.get_EncodingType() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.ShimInitiateMultipartResult.EncodingTypeSetString">
            <summary>设置 InitiateMultipartResult.set_EncodingType(String value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.ShimInitiateMultipartResult.KeyGet">
            <summary>设置 InitiateMultipartResult.get_Key() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.ShimInitiateMultipartResult.KeySetString">
            <summary>设置 InitiateMultipartResult.set_Key(String value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.ShimInitiateMultipartResult.UploadIdGet">
            <summary>设置 InitiateMultipartResult.get_UploadId() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.ShimInitiateMultipartResult.UploadIdSetString">
            <summary>设置 InitiateMultipartResult.set_UploadId(String value) 的 填充码</summary>
        </member>
        <member name="T:Aliyun.OSS.Model.Fakes.ShimInitiateMultipartResult.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.ShimInitiateMultipartResult.AllInstances.BucketGet">
            <summary>设置 InitiateMultipartResult.get_Bucket() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.ShimInitiateMultipartResult.AllInstances.BucketSetString">
            <summary>设置 InitiateMultipartResult.set_Bucket(String value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.ShimInitiateMultipartResult.AllInstances.EncodingTypeGet">
            <summary>设置 InitiateMultipartResult.get_EncodingType() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.ShimInitiateMultipartResult.AllInstances.EncodingTypeSetString">
            <summary>设置 InitiateMultipartResult.set_EncodingType(String value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.ShimInitiateMultipartResult.AllInstances.KeyGet">
            <summary>设置 InitiateMultipartResult.get_Key() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.ShimInitiateMultipartResult.AllInstances.KeySetString">
            <summary>设置 InitiateMultipartResult.set_Key(String value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.ShimInitiateMultipartResult.AllInstances.UploadIdGet">
            <summary>设置 InitiateMultipartResult.get_UploadId() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.ShimInitiateMultipartResult.AllInstances.UploadIdSetString">
            <summary>设置 InitiateMultipartResult.set_UploadId(String value) 的 填充码</summary>
        </member>
        <member name="T:Aliyun.OSS.Model.Fakes.ShimLifecycleConfiguration">
            <summary>Aliyun.OSS.Model.LifecycleConfiguration 的填充码类型</summary>
        </member>
        <member name="M:Aliyun.OSS.Model.Fakes.ShimLifecycleConfiguration.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Aliyun.OSS.Model.Fakes.ShimLifecycleConfiguration.#ctor(Aliyun.OSS.Model.LifecycleConfiguration)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Aliyun.OSS.Model.Fakes.ShimLifecycleConfiguration.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Aliyun.OSS.Model.Fakes.ShimLifecycleConfiguration.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.ShimLifecycleConfiguration.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.ShimLifecycleConfiguration.Constructor">
            <summary>设置 LifecycleConfiguration.LifecycleConfiguration() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.ShimLifecycleConfiguration.LifecycleRulesGet">
            <summary>设置 LifecycleConfiguration.get_LifecycleRules() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.ShimLifecycleConfiguration.LifecycleRulesSetLifecycleRuleArray">
            <summary>设置 LifecycleConfiguration.set_LifecycleRules(LifecycleRule[] value) 的 填充码</summary>
        </member>
        <member name="T:Aliyun.OSS.Model.Fakes.ShimLifecycleConfiguration.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.ShimLifecycleConfiguration.AllInstances.LifecycleRulesGet">
            <summary>设置 LifecycleConfiguration.get_LifecycleRules() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.ShimLifecycleConfiguration.AllInstances.LifecycleRulesSetLifecycleRuleArray">
            <summary>设置 LifecycleConfiguration.set_LifecycleRules(LifecycleRule[] value) 的 填充码</summary>
        </member>
        <member name="T:Aliyun.OSS.Model.Fakes.ShimLifecycleRule">
            <summary>Aliyun.OSS.Model.LifecycleRule 的填充码类型</summary>
        </member>
        <member name="M:Aliyun.OSS.Model.Fakes.ShimLifecycleRule.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Aliyun.OSS.Model.Fakes.ShimLifecycleRule.#ctor(Aliyun.OSS.Model.LifecycleRule)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Aliyun.OSS.Model.Fakes.ShimLifecycleRule.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Aliyun.OSS.Model.Fakes.ShimLifecycleRule.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.ShimLifecycleRule.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.ShimLifecycleRule.Constructor">
            <summary>设置 LifecycleRule.LifecycleRule() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.ShimLifecycleRule.ExpirationGet">
            <summary>设置 LifecycleRule.get_Expiration() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.ShimLifecycleRule.ExpirationSetExpiration">
            <summary>设置 LifecycleRule.set_Expiration(Expiration value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.ShimLifecycleRule.IDGet">
            <summary>设置 LifecycleRule.get_ID() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.ShimLifecycleRule.IDSetString">
            <summary>设置 LifecycleRule.set_ID(String value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.ShimLifecycleRule.PrefixGet">
            <summary>设置 LifecycleRule.get_Prefix() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.ShimLifecycleRule.PrefixSetString">
            <summary>设置 LifecycleRule.set_Prefix(String value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.ShimLifecycleRule.StatusGet">
            <summary>设置 LifecycleRule.get_Status() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.ShimLifecycleRule.StatusSetString">
            <summary>设置 LifecycleRule.set_Status(String value) 的 填充码</summary>
        </member>
        <member name="T:Aliyun.OSS.Model.Fakes.ShimLifecycleRule.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.ShimLifecycleRule.AllInstances.ExpirationGet">
            <summary>设置 LifecycleRule.get_Expiration() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.ShimLifecycleRule.AllInstances.ExpirationSetExpiration">
            <summary>设置 LifecycleRule.set_Expiration(Expiration value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.ShimLifecycleRule.AllInstances.IDGet">
            <summary>设置 LifecycleRule.get_ID() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.ShimLifecycleRule.AllInstances.IDSetString">
            <summary>设置 LifecycleRule.set_ID(String value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.ShimLifecycleRule.AllInstances.PrefixGet">
            <summary>设置 LifecycleRule.get_Prefix() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.ShimLifecycleRule.AllInstances.PrefixSetString">
            <summary>设置 LifecycleRule.set_Prefix(String value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.ShimLifecycleRule.AllInstances.StatusGet">
            <summary>设置 LifecycleRule.get_Status() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.ShimLifecycleRule.AllInstances.StatusSetString">
            <summary>设置 LifecycleRule.set_Status(String value) 的 填充码</summary>
        </member>
        <member name="T:Aliyun.OSS.Model.Fakes.ShimListAllMyBucketsResult">
            <summary>Aliyun.OSS.Model.ListAllMyBucketsResult 的填充码类型</summary>
        </member>
        <member name="M:Aliyun.OSS.Model.Fakes.ShimListAllMyBucketsResult.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Aliyun.OSS.Model.Fakes.ShimListAllMyBucketsResult.#ctor(Aliyun.OSS.Model.ListAllMyBucketsResult)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Aliyun.OSS.Model.Fakes.ShimListAllMyBucketsResult.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Aliyun.OSS.Model.Fakes.ShimListAllMyBucketsResult.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.ShimListAllMyBucketsResult.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.ShimListAllMyBucketsResult.BucketsGet">
            <summary>设置 ListAllMyBucketsResult.get_Buckets() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.ShimListAllMyBucketsResult.BucketsSetListOfBucketModel">
            <summary>设置 ListAllMyBucketsResult.set_Buckets(List`1&lt;BucketModel&gt; value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.ShimListAllMyBucketsResult.Constructor">
            <summary>设置 ListAllMyBucketsResult.ListAllMyBucketsResult() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.ShimListAllMyBucketsResult.IsTruncatedGet">
            <summary>设置 ListAllMyBucketsResult.get_IsTruncated() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.ShimListAllMyBucketsResult.IsTruncatedSetNullableOfBoolean">
            <summary>设置 ListAllMyBucketsResult.set_IsTruncated(Nullable`1&lt;Boolean&gt; value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.ShimListAllMyBucketsResult.MarkerGet">
            <summary>设置 ListAllMyBucketsResult.get_Marker() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.ShimListAllMyBucketsResult.MarkerSetString">
            <summary>设置 ListAllMyBucketsResult.set_Marker(String value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.ShimListAllMyBucketsResult.MaxKeysGet">
            <summary>设置 ListAllMyBucketsResult.get_MaxKeys() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.ShimListAllMyBucketsResult.MaxKeysSetNullableOfInt32">
            <summary>设置 ListAllMyBucketsResult.set_MaxKeys(Nullable`1&lt;Int32&gt; value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.ShimListAllMyBucketsResult.NextMarkerGet">
            <summary>设置 ListAllMyBucketsResult.get_NextMarker() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.ShimListAllMyBucketsResult.NextMarkerSetString">
            <summary>设置 ListAllMyBucketsResult.set_NextMarker(String value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.ShimListAllMyBucketsResult.OwnerGet">
            <summary>设置 ListAllMyBucketsResult.get_Owner() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.ShimListAllMyBucketsResult.OwnerSetOwner">
            <summary>设置 ListAllMyBucketsResult.set_Owner(Owner value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.ShimListAllMyBucketsResult.PrefixGet">
            <summary>设置 ListAllMyBucketsResult.get_Prefix() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.ShimListAllMyBucketsResult.PrefixSetString">
            <summary>设置 ListAllMyBucketsResult.set_Prefix(String value) 的 填充码</summary>
        </member>
        <member name="T:Aliyun.OSS.Model.Fakes.ShimListAllMyBucketsResult.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.ShimListAllMyBucketsResult.AllInstances.BucketsGet">
            <summary>设置 ListAllMyBucketsResult.get_Buckets() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.ShimListAllMyBucketsResult.AllInstances.BucketsSetListOfBucketModel">
            <summary>设置 ListAllMyBucketsResult.set_Buckets(List`1&lt;BucketModel&gt; value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.ShimListAllMyBucketsResult.AllInstances.IsTruncatedGet">
            <summary>设置 ListAllMyBucketsResult.get_IsTruncated() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.ShimListAllMyBucketsResult.AllInstances.IsTruncatedSetNullableOfBoolean">
            <summary>设置 ListAllMyBucketsResult.set_IsTruncated(Nullable`1&lt;Boolean&gt; value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.ShimListAllMyBucketsResult.AllInstances.MarkerGet">
            <summary>设置 ListAllMyBucketsResult.get_Marker() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.ShimListAllMyBucketsResult.AllInstances.MarkerSetString">
            <summary>设置 ListAllMyBucketsResult.set_Marker(String value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.ShimListAllMyBucketsResult.AllInstances.MaxKeysGet">
            <summary>设置 ListAllMyBucketsResult.get_MaxKeys() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.ShimListAllMyBucketsResult.AllInstances.MaxKeysSetNullableOfInt32">
            <summary>设置 ListAllMyBucketsResult.set_MaxKeys(Nullable`1&lt;Int32&gt; value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.ShimListAllMyBucketsResult.AllInstances.NextMarkerGet">
            <summary>设置 ListAllMyBucketsResult.get_NextMarker() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.ShimListAllMyBucketsResult.AllInstances.NextMarkerSetString">
            <summary>设置 ListAllMyBucketsResult.set_NextMarker(String value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.ShimListAllMyBucketsResult.AllInstances.OwnerGet">
            <summary>设置 ListAllMyBucketsResult.get_Owner() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.ShimListAllMyBucketsResult.AllInstances.OwnerSetOwner">
            <summary>设置 ListAllMyBucketsResult.set_Owner(Owner value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.ShimListAllMyBucketsResult.AllInstances.PrefixGet">
            <summary>设置 ListAllMyBucketsResult.get_Prefix() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.ShimListAllMyBucketsResult.AllInstances.PrefixSetString">
            <summary>设置 ListAllMyBucketsResult.set_Prefix(String value) 的 填充码</summary>
        </member>
        <member name="T:Aliyun.OSS.Model.Fakes.ShimListBucketResult">
            <summary>Aliyun.OSS.Model.ListBucketResult 的填充码类型</summary>
        </member>
        <member name="M:Aliyun.OSS.Model.Fakes.ShimListBucketResult.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Aliyun.OSS.Model.Fakes.ShimListBucketResult.#ctor(Aliyun.OSS.Model.ListBucketResult)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Aliyun.OSS.Model.Fakes.ShimListBucketResult.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Aliyun.OSS.Model.Fakes.ShimListBucketResult.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.ShimListBucketResult.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.ShimListBucketResult.CommonPrefixesGet">
            <summary>设置 ListBucketResult.get_CommonPrefixes() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.ShimListBucketResult.CommonPrefixesSetListBucketResultCommonPrefixesArray">
            <summary>设置 ListBucketResult.set_CommonPrefixes(ListBucketResultCommonPrefixes[] value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.ShimListBucketResult.Constructor">
            <summary>设置 ListBucketResult.ListBucketResult() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.ShimListBucketResult.ContentsGet">
            <summary>设置 ListBucketResult.get_Contents() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.ShimListBucketResult.ContentsSetListBucketResultContentsArray">
            <summary>设置 ListBucketResult.set_Contents(ListBucketResultContents[] value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.ShimListBucketResult.DelimiterGet">
            <summary>设置 ListBucketResult.get_Delimiter() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.ShimListBucketResult.DelimiterSetString">
            <summary>设置 ListBucketResult.set_Delimiter(String value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.ShimListBucketResult.EncodingTypeGet">
            <summary>设置 ListBucketResult.get_EncodingType() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.ShimListBucketResult.EncodingTypeSetString">
            <summary>设置 ListBucketResult.set_EncodingType(String value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.ShimListBucketResult.IsTruncatedGet">
            <summary>设置 ListBucketResult.get_IsTruncated() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.ShimListBucketResult.IsTruncatedSetBoolean">
            <summary>设置 ListBucketResult.set_IsTruncated(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.ShimListBucketResult.MarkerGet">
            <summary>设置 ListBucketResult.get_Marker() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.ShimListBucketResult.MarkerSetString">
            <summary>设置 ListBucketResult.set_Marker(String value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.ShimListBucketResult.MaxKeysGet">
            <summary>设置 ListBucketResult.get_MaxKeys() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.ShimListBucketResult.MaxKeysSetInt32">
            <summary>设置 ListBucketResult.set_MaxKeys(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.ShimListBucketResult.NameGet">
            <summary>设置 ListBucketResult.get_Name() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.ShimListBucketResult.NameSetString">
            <summary>设置 ListBucketResult.set_Name(String value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.ShimListBucketResult.NextMarkerGet">
            <summary>设置 ListBucketResult.get_NextMarker() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.ShimListBucketResult.NextMarkerSetString">
            <summary>设置 ListBucketResult.set_NextMarker(String value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.ShimListBucketResult.PrefixGet">
            <summary>设置 ListBucketResult.get_Prefix() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.ShimListBucketResult.PrefixSetString">
            <summary>设置 ListBucketResult.set_Prefix(String value) 的 填充码</summary>
        </member>
        <member name="T:Aliyun.OSS.Model.Fakes.ShimListBucketResult.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.ShimListBucketResult.AllInstances.CommonPrefixesGet">
            <summary>设置 ListBucketResult.get_CommonPrefixes() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.ShimListBucketResult.AllInstances.CommonPrefixesSetListBucketResultCommonPrefixesArray">
            <summary>设置 ListBucketResult.set_CommonPrefixes(ListBucketResultCommonPrefixes[] value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.ShimListBucketResult.AllInstances.ContentsGet">
            <summary>设置 ListBucketResult.get_Contents() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.ShimListBucketResult.AllInstances.ContentsSetListBucketResultContentsArray">
            <summary>设置 ListBucketResult.set_Contents(ListBucketResultContents[] value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.ShimListBucketResult.AllInstances.DelimiterGet">
            <summary>设置 ListBucketResult.get_Delimiter() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.ShimListBucketResult.AllInstances.DelimiterSetString">
            <summary>设置 ListBucketResult.set_Delimiter(String value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.ShimListBucketResult.AllInstances.EncodingTypeGet">
            <summary>设置 ListBucketResult.get_EncodingType() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.ShimListBucketResult.AllInstances.EncodingTypeSetString">
            <summary>设置 ListBucketResult.set_EncodingType(String value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.ShimListBucketResult.AllInstances.IsTruncatedGet">
            <summary>设置 ListBucketResult.get_IsTruncated() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.ShimListBucketResult.AllInstances.IsTruncatedSetBoolean">
            <summary>设置 ListBucketResult.set_IsTruncated(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.ShimListBucketResult.AllInstances.MarkerGet">
            <summary>设置 ListBucketResult.get_Marker() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.ShimListBucketResult.AllInstances.MarkerSetString">
            <summary>设置 ListBucketResult.set_Marker(String value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.ShimListBucketResult.AllInstances.MaxKeysGet">
            <summary>设置 ListBucketResult.get_MaxKeys() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.ShimListBucketResult.AllInstances.MaxKeysSetInt32">
            <summary>设置 ListBucketResult.set_MaxKeys(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.ShimListBucketResult.AllInstances.NameGet">
            <summary>设置 ListBucketResult.get_Name() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.ShimListBucketResult.AllInstances.NameSetString">
            <summary>设置 ListBucketResult.set_Name(String value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.ShimListBucketResult.AllInstances.NextMarkerGet">
            <summary>设置 ListBucketResult.get_NextMarker() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.ShimListBucketResult.AllInstances.NextMarkerSetString">
            <summary>设置 ListBucketResult.set_NextMarker(String value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.ShimListBucketResult.AllInstances.PrefixGet">
            <summary>设置 ListBucketResult.get_Prefix() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.ShimListBucketResult.AllInstances.PrefixSetString">
            <summary>设置 ListBucketResult.set_Prefix(String value) 的 填充码</summary>
        </member>
        <member name="T:Aliyun.OSS.Model.Fakes.ShimListBucketResultCommonPrefixes">
            <summary>Aliyun.OSS.Model.ListBucketResultCommonPrefixes 的填充码类型</summary>
        </member>
        <member name="M:Aliyun.OSS.Model.Fakes.ShimListBucketResultCommonPrefixes.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Aliyun.OSS.Model.Fakes.ShimListBucketResultCommonPrefixes.#ctor(Aliyun.OSS.Model.ListBucketResultCommonPrefixes)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Aliyun.OSS.Model.Fakes.ShimListBucketResultCommonPrefixes.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Aliyun.OSS.Model.Fakes.ShimListBucketResultCommonPrefixes.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.ShimListBucketResultCommonPrefixes.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.ShimListBucketResultCommonPrefixes.Constructor">
            <summary>设置 ListBucketResultCommonPrefixes.ListBucketResultCommonPrefixes() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.ShimListBucketResultCommonPrefixes.PrefixGet">
            <summary>设置 ListBucketResultCommonPrefixes.get_Prefix() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.ShimListBucketResultCommonPrefixes.PrefixSetStringArray">
            <summary>设置 ListBucketResultCommonPrefixes.set_Prefix(String[] value) 的 填充码</summary>
        </member>
        <member name="T:Aliyun.OSS.Model.Fakes.ShimListBucketResultCommonPrefixes.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.ShimListBucketResultCommonPrefixes.AllInstances.PrefixGet">
            <summary>设置 ListBucketResultCommonPrefixes.get_Prefix() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.ShimListBucketResultCommonPrefixes.AllInstances.PrefixSetStringArray">
            <summary>设置 ListBucketResultCommonPrefixes.set_Prefix(String[] value) 的 填充码</summary>
        </member>
        <member name="T:Aliyun.OSS.Model.Fakes.ShimListBucketResultContents">
            <summary>Aliyun.OSS.Model.ListBucketResultContents 的填充码类型</summary>
        </member>
        <member name="M:Aliyun.OSS.Model.Fakes.ShimListBucketResultContents.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Aliyun.OSS.Model.Fakes.ShimListBucketResultContents.#ctor(Aliyun.OSS.Model.ListBucketResultContents)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Aliyun.OSS.Model.Fakes.ShimListBucketResultContents.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Aliyun.OSS.Model.Fakes.ShimListBucketResultContents.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.ShimListBucketResultContents.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.ShimListBucketResultContents.Constructor">
            <summary>设置 ListBucketResultContents.ListBucketResultContents() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.ShimListBucketResultContents.ETagGet">
            <summary>设置 ListBucketResultContents.get_ETag() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.ShimListBucketResultContents.ETagSetString">
            <summary>设置 ListBucketResultContents.set_ETag(String value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.ShimListBucketResultContents.KeyGet">
            <summary>设置 ListBucketResultContents.get_Key() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.ShimListBucketResultContents.KeySetString">
            <summary>设置 ListBucketResultContents.set_Key(String value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.ShimListBucketResultContents.LastModifiedGet">
            <summary>设置 ListBucketResultContents.get_LastModified() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.ShimListBucketResultContents.LastModifiedSetDateTime">
            <summary>设置 ListBucketResultContents.set_LastModified(DateTime value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.ShimListBucketResultContents.OwnerGet">
            <summary>设置 ListBucketResultContents.get_Owner() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.ShimListBucketResultContents.OwnerSetOwner">
            <summary>设置 ListBucketResultContents.set_Owner(Owner value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.ShimListBucketResultContents.SizeGet">
            <summary>设置 ListBucketResultContents.get_Size() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.ShimListBucketResultContents.SizeSetInt64">
            <summary>设置 ListBucketResultContents.set_Size(Int64 value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.ShimListBucketResultContents.StorageClassGet">
            <summary>设置 ListBucketResultContents.get_StorageClass() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.ShimListBucketResultContents.StorageClassSetString">
            <summary>设置 ListBucketResultContents.set_StorageClass(String value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.ShimListBucketResultContents.TypeGet">
            <summary>设置 ListBucketResultContents.get_Type() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.ShimListBucketResultContents.TypeSetString">
            <summary>设置 ListBucketResultContents.set_Type(String value) 的 填充码</summary>
        </member>
        <member name="T:Aliyun.OSS.Model.Fakes.ShimListBucketResultContents.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.ShimListBucketResultContents.AllInstances.ETagGet">
            <summary>设置 ListBucketResultContents.get_ETag() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.ShimListBucketResultContents.AllInstances.ETagSetString">
            <summary>设置 ListBucketResultContents.set_ETag(String value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.ShimListBucketResultContents.AllInstances.KeyGet">
            <summary>设置 ListBucketResultContents.get_Key() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.ShimListBucketResultContents.AllInstances.KeySetString">
            <summary>设置 ListBucketResultContents.set_Key(String value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.ShimListBucketResultContents.AllInstances.LastModifiedGet">
            <summary>设置 ListBucketResultContents.get_LastModified() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.ShimListBucketResultContents.AllInstances.LastModifiedSetDateTime">
            <summary>设置 ListBucketResultContents.set_LastModified(DateTime value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.ShimListBucketResultContents.AllInstances.OwnerGet">
            <summary>设置 ListBucketResultContents.get_Owner() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.ShimListBucketResultContents.AllInstances.OwnerSetOwner">
            <summary>设置 ListBucketResultContents.set_Owner(Owner value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.ShimListBucketResultContents.AllInstances.SizeGet">
            <summary>设置 ListBucketResultContents.get_Size() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.ShimListBucketResultContents.AllInstances.SizeSetInt64">
            <summary>设置 ListBucketResultContents.set_Size(Int64 value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.ShimListBucketResultContents.AllInstances.StorageClassGet">
            <summary>设置 ListBucketResultContents.get_StorageClass() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.ShimListBucketResultContents.AllInstances.StorageClassSetString">
            <summary>设置 ListBucketResultContents.set_StorageClass(String value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.ShimListBucketResultContents.AllInstances.TypeGet">
            <summary>设置 ListBucketResultContents.get_Type() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.ShimListBucketResultContents.AllInstances.TypeSetString">
            <summary>设置 ListBucketResultContents.set_Type(String value) 的 填充码</summary>
        </member>
        <member name="T:Aliyun.OSS.Model.Fakes.ShimListMultipartUploadsResult">
            <summary>Aliyun.OSS.Model.ListMultipartUploadsResult 的填充码类型</summary>
        </member>
        <member name="M:Aliyun.OSS.Model.Fakes.ShimListMultipartUploadsResult.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Aliyun.OSS.Model.Fakes.ShimListMultipartUploadsResult.#ctor(Aliyun.OSS.Model.ListMultipartUploadsResult)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Aliyun.OSS.Model.Fakes.ShimListMultipartUploadsResult.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Aliyun.OSS.Model.Fakes.ShimListMultipartUploadsResult.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.ShimListMultipartUploadsResult.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.ShimListMultipartUploadsResult.BucketGet">
            <summary>设置 ListMultipartUploadsResult.get_Bucket() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.ShimListMultipartUploadsResult.BucketSetString">
            <summary>设置 ListMultipartUploadsResult.set_Bucket(String value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.ShimListMultipartUploadsResult.CommonPrefixGet">
            <summary>设置 ListMultipartUploadsResult.get_CommonPrefix() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.ShimListMultipartUploadsResult.CommonPrefixSetListMultipartUploadsResultCommonPrefixs">
            <summary>设置 ListMultipartUploadsResult.set_CommonPrefix(CommonPrefixs value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.ShimListMultipartUploadsResult.Constructor">
            <summary>设置 ListMultipartUploadsResult.ListMultipartUploadsResult() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.ShimListMultipartUploadsResult.DelimiterGet">
            <summary>设置 ListMultipartUploadsResult.get_Delimiter() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.ShimListMultipartUploadsResult.DelimiterSetString">
            <summary>设置 ListMultipartUploadsResult.set_Delimiter(String value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.ShimListMultipartUploadsResult.EncodingTypeGet">
            <summary>设置 ListMultipartUploadsResult.get_EncodingType() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.ShimListMultipartUploadsResult.EncodingTypeSetString">
            <summary>设置 ListMultipartUploadsResult.set_EncodingType(String value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.ShimListMultipartUploadsResult.IsTruncatedGet">
            <summary>设置 ListMultipartUploadsResult.get_IsTruncated() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.ShimListMultipartUploadsResult.IsTruncatedSetBoolean">
            <summary>设置 ListMultipartUploadsResult.set_IsTruncated(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.ShimListMultipartUploadsResult.KeyMarkerGet">
            <summary>设置 ListMultipartUploadsResult.get_KeyMarker() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.ShimListMultipartUploadsResult.KeyMarkerSetString">
            <summary>设置 ListMultipartUploadsResult.set_KeyMarker(String value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.ShimListMultipartUploadsResult.MaxUploadsGet">
            <summary>设置 ListMultipartUploadsResult.get_MaxUploads() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.ShimListMultipartUploadsResult.MaxUploadsSetInt32">
            <summary>设置 ListMultipartUploadsResult.set_MaxUploads(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.ShimListMultipartUploadsResult.NextKeyMarkerGet">
            <summary>设置 ListMultipartUploadsResult.get_NextKeyMarker() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.ShimListMultipartUploadsResult.NextKeyMarkerSetString">
            <summary>设置 ListMultipartUploadsResult.set_NextKeyMarker(String value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.ShimListMultipartUploadsResult.NextUploadIdMarkerGet">
            <summary>设置 ListMultipartUploadsResult.get_NextUploadIdMarker() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.ShimListMultipartUploadsResult.NextUploadIdMarkerSetString">
            <summary>设置 ListMultipartUploadsResult.set_NextUploadIdMarker(String value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.ShimListMultipartUploadsResult.PrefixGet">
            <summary>设置 ListMultipartUploadsResult.get_Prefix() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.ShimListMultipartUploadsResult.PrefixSetString">
            <summary>设置 ListMultipartUploadsResult.set_Prefix(String value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.ShimListMultipartUploadsResult.UploadIdMarkerGet">
            <summary>设置 ListMultipartUploadsResult.get_UploadIdMarker() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.ShimListMultipartUploadsResult.UploadIdMarkerSetString">
            <summary>设置 ListMultipartUploadsResult.set_UploadIdMarker(String value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.ShimListMultipartUploadsResult.UploadsGet">
            <summary>设置 ListMultipartUploadsResult.get_Uploads() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.ShimListMultipartUploadsResult.UploadsSetListMultipartUploadsResultUploadArray">
            <summary>设置 ListMultipartUploadsResult.set_Uploads(Upload[] value) 的 填充码</summary>
        </member>
        <member name="T:Aliyun.OSS.Model.Fakes.ShimListMultipartUploadsResult.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.ShimListMultipartUploadsResult.AllInstances.BucketGet">
            <summary>设置 ListMultipartUploadsResult.get_Bucket() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.ShimListMultipartUploadsResult.AllInstances.BucketSetString">
            <summary>设置 ListMultipartUploadsResult.set_Bucket(String value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.ShimListMultipartUploadsResult.AllInstances.CommonPrefixGet">
            <summary>设置 ListMultipartUploadsResult.get_CommonPrefix() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.ShimListMultipartUploadsResult.AllInstances.CommonPrefixSetListMultipartUploadsResultCommonPrefixs">
            <summary>设置 ListMultipartUploadsResult.set_CommonPrefix(CommonPrefixs value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.ShimListMultipartUploadsResult.AllInstances.DelimiterGet">
            <summary>设置 ListMultipartUploadsResult.get_Delimiter() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.ShimListMultipartUploadsResult.AllInstances.DelimiterSetString">
            <summary>设置 ListMultipartUploadsResult.set_Delimiter(String value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.ShimListMultipartUploadsResult.AllInstances.EncodingTypeGet">
            <summary>设置 ListMultipartUploadsResult.get_EncodingType() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.ShimListMultipartUploadsResult.AllInstances.EncodingTypeSetString">
            <summary>设置 ListMultipartUploadsResult.set_EncodingType(String value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.ShimListMultipartUploadsResult.AllInstances.IsTruncatedGet">
            <summary>设置 ListMultipartUploadsResult.get_IsTruncated() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.ShimListMultipartUploadsResult.AllInstances.IsTruncatedSetBoolean">
            <summary>设置 ListMultipartUploadsResult.set_IsTruncated(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.ShimListMultipartUploadsResult.AllInstances.KeyMarkerGet">
            <summary>设置 ListMultipartUploadsResult.get_KeyMarker() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.ShimListMultipartUploadsResult.AllInstances.KeyMarkerSetString">
            <summary>设置 ListMultipartUploadsResult.set_KeyMarker(String value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.ShimListMultipartUploadsResult.AllInstances.MaxUploadsGet">
            <summary>设置 ListMultipartUploadsResult.get_MaxUploads() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.ShimListMultipartUploadsResult.AllInstances.MaxUploadsSetInt32">
            <summary>设置 ListMultipartUploadsResult.set_MaxUploads(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.ShimListMultipartUploadsResult.AllInstances.NextKeyMarkerGet">
            <summary>设置 ListMultipartUploadsResult.get_NextKeyMarker() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.ShimListMultipartUploadsResult.AllInstances.NextKeyMarkerSetString">
            <summary>设置 ListMultipartUploadsResult.set_NextKeyMarker(String value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.ShimListMultipartUploadsResult.AllInstances.NextUploadIdMarkerGet">
            <summary>设置 ListMultipartUploadsResult.get_NextUploadIdMarker() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.ShimListMultipartUploadsResult.AllInstances.NextUploadIdMarkerSetString">
            <summary>设置 ListMultipartUploadsResult.set_NextUploadIdMarker(String value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.ShimListMultipartUploadsResult.AllInstances.PrefixGet">
            <summary>设置 ListMultipartUploadsResult.get_Prefix() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.ShimListMultipartUploadsResult.AllInstances.PrefixSetString">
            <summary>设置 ListMultipartUploadsResult.set_Prefix(String value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.ShimListMultipartUploadsResult.AllInstances.UploadIdMarkerGet">
            <summary>设置 ListMultipartUploadsResult.get_UploadIdMarker() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.ShimListMultipartUploadsResult.AllInstances.UploadIdMarkerSetString">
            <summary>设置 ListMultipartUploadsResult.set_UploadIdMarker(String value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.ShimListMultipartUploadsResult.AllInstances.UploadsGet">
            <summary>设置 ListMultipartUploadsResult.get_Uploads() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.ShimListMultipartUploadsResult.AllInstances.UploadsSetListMultipartUploadsResultUploadArray">
            <summary>设置 ListMultipartUploadsResult.set_Uploads(Upload[] value) 的 填充码</summary>
        </member>
        <member name="T:Aliyun.OSS.Model.Fakes.ShimListMultipartUploadsResult.ShimCommonPrefixs">
            <summary>Aliyun.OSS.Model.ListMultipartUploadsResult+CommonPrefixs 的填充码类型</summary>
        </member>
        <member name="M:Aliyun.OSS.Model.Fakes.ShimListMultipartUploadsResult.ShimCommonPrefixs.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Aliyun.OSS.Model.Fakes.ShimListMultipartUploadsResult.ShimCommonPrefixs.#ctor(Aliyun.OSS.Model.ListMultipartUploadsResult.CommonPrefixs)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Aliyun.OSS.Model.Fakes.ShimListMultipartUploadsResult.ShimCommonPrefixs.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Aliyun.OSS.Model.Fakes.ShimListMultipartUploadsResult.ShimCommonPrefixs.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.ShimListMultipartUploadsResult.ShimCommonPrefixs.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.ShimListMultipartUploadsResult.ShimCommonPrefixs.Constructor">
            <summary>设置 CommonPrefixs.CommonPrefixs() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.ShimListMultipartUploadsResult.ShimCommonPrefixs.PrefixsGet">
            <summary>设置 CommonPrefixs.get_Prefixs() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.ShimListMultipartUploadsResult.ShimCommonPrefixs.PrefixsSetStringArray">
            <summary>设置 CommonPrefixs.set_Prefixs(String[] value) 的 填充码</summary>
        </member>
        <member name="T:Aliyun.OSS.Model.Fakes.ShimListMultipartUploadsResult.ShimCommonPrefixs.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.ShimListMultipartUploadsResult.ShimCommonPrefixs.AllInstances.PrefixsGet">
            <summary>设置 CommonPrefixs.get_Prefixs() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.ShimListMultipartUploadsResult.ShimCommonPrefixs.AllInstances.PrefixsSetStringArray">
            <summary>设置 CommonPrefixs.set_Prefixs(String[] value) 的 填充码</summary>
        </member>
        <member name="T:Aliyun.OSS.Model.Fakes.ShimListMultipartUploadsResult.ShimUpload">
            <summary>Aliyun.OSS.Model.ListMultipartUploadsResult+Upload 的填充码类型</summary>
        </member>
        <member name="M:Aliyun.OSS.Model.Fakes.ShimListMultipartUploadsResult.ShimUpload.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Aliyun.OSS.Model.Fakes.ShimListMultipartUploadsResult.ShimUpload.#ctor(Aliyun.OSS.Model.ListMultipartUploadsResult.Upload)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Aliyun.OSS.Model.Fakes.ShimListMultipartUploadsResult.ShimUpload.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Aliyun.OSS.Model.Fakes.ShimListMultipartUploadsResult.ShimUpload.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.ShimListMultipartUploadsResult.ShimUpload.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.ShimListMultipartUploadsResult.ShimUpload.Constructor">
            <summary>设置 Upload.Upload() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.ShimListMultipartUploadsResult.ShimUpload.InitiatedGet">
            <summary>设置 Upload.get_Initiated() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.ShimListMultipartUploadsResult.ShimUpload.InitiatedSetDateTime">
            <summary>设置 Upload.set_Initiated(DateTime value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.ShimListMultipartUploadsResult.ShimUpload.KeyGet">
            <summary>设置 Upload.get_Key() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.ShimListMultipartUploadsResult.ShimUpload.KeySetString">
            <summary>设置 Upload.set_Key(String value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.ShimListMultipartUploadsResult.ShimUpload.StorageClassGet">
            <summary>设置 Upload.get_StorageClass() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.ShimListMultipartUploadsResult.ShimUpload.StorageClassSetString">
            <summary>设置 Upload.set_StorageClass(String value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.ShimListMultipartUploadsResult.ShimUpload.UploadIdGet">
            <summary>设置 Upload.get_UploadId() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.ShimListMultipartUploadsResult.ShimUpload.UploadIdSetString">
            <summary>设置 Upload.set_UploadId(String value) 的 填充码</summary>
        </member>
        <member name="T:Aliyun.OSS.Model.Fakes.ShimListMultipartUploadsResult.ShimUpload.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.ShimListMultipartUploadsResult.ShimUpload.AllInstances.InitiatedGet">
            <summary>设置 Upload.get_Initiated() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.ShimListMultipartUploadsResult.ShimUpload.AllInstances.InitiatedSetDateTime">
            <summary>设置 Upload.set_Initiated(DateTime value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.ShimListMultipartUploadsResult.ShimUpload.AllInstances.KeyGet">
            <summary>设置 Upload.get_Key() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.ShimListMultipartUploadsResult.ShimUpload.AllInstances.KeySetString">
            <summary>设置 Upload.set_Key(String value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.ShimListMultipartUploadsResult.ShimUpload.AllInstances.StorageClassGet">
            <summary>设置 Upload.get_StorageClass() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.ShimListMultipartUploadsResult.ShimUpload.AllInstances.StorageClassSetString">
            <summary>设置 Upload.set_StorageClass(String value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.ShimListMultipartUploadsResult.ShimUpload.AllInstances.UploadIdGet">
            <summary>设置 Upload.get_UploadId() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.ShimListMultipartUploadsResult.ShimUpload.AllInstances.UploadIdSetString">
            <summary>设置 Upload.set_UploadId(String value) 的 填充码</summary>
        </member>
        <member name="T:Aliyun.OSS.Model.Fakes.ShimListPartsResult">
            <summary>Aliyun.OSS.Model.ListPartsResult 的填充码类型</summary>
        </member>
        <member name="M:Aliyun.OSS.Model.Fakes.ShimListPartsResult.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Aliyun.OSS.Model.Fakes.ShimListPartsResult.#ctor(Aliyun.OSS.Model.ListPartsResult)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Aliyun.OSS.Model.Fakes.ShimListPartsResult.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Aliyun.OSS.Model.Fakes.ShimListPartsResult.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.ShimListPartsResult.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.ShimListPartsResult.BucketGet">
            <summary>设置 ListPartsResult.get_Bucket() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.ShimListPartsResult.BucketSetString">
            <summary>设置 ListPartsResult.set_Bucket(String value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.ShimListPartsResult.Constructor">
            <summary>设置 ListPartsResult.ListPartsResult() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.ShimListPartsResult.EncodingTypeGet">
            <summary>设置 ListPartsResult.get_EncodingType() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.ShimListPartsResult.EncodingTypeSetString">
            <summary>设置 ListPartsResult.set_EncodingType(String value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.ShimListPartsResult.IsTruncatedGet">
            <summary>设置 ListPartsResult.get_IsTruncated() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.ShimListPartsResult.IsTruncatedSetBoolean">
            <summary>设置 ListPartsResult.set_IsTruncated(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.ShimListPartsResult.KeyGet">
            <summary>设置 ListPartsResult.get_Key() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.ShimListPartsResult.KeySetString">
            <summary>设置 ListPartsResult.set_Key(String value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.ShimListPartsResult.MaxPartsGet">
            <summary>设置 ListPartsResult.get_MaxParts() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.ShimListPartsResult.MaxPartsSetInt32">
            <summary>设置 ListPartsResult.set_MaxParts(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.ShimListPartsResult.NextPartNumberMarkerGet">
            <summary>设置 ListPartsResult.get_NextPartNumberMarker() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.ShimListPartsResult.NextPartNumberMarkerSetString">
            <summary>设置 ListPartsResult.set_NextPartNumberMarker(String value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.ShimListPartsResult.PartNumberMarkerGet">
            <summary>设置 ListPartsResult.get_PartNumberMarker() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.ShimListPartsResult.PartNumberMarkerSetInt32">
            <summary>设置 ListPartsResult.set_PartNumberMarker(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.ShimListPartsResult.PartResultsGet">
            <summary>设置 ListPartsResult.get_PartResults() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.ShimListPartsResult.PartResultsSetListPartsResultPartResultArray">
            <summary>设置 ListPartsResult.set_PartResults(PartResult[] value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.ShimListPartsResult.UploadIdGet">
            <summary>设置 ListPartsResult.get_UploadId() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.ShimListPartsResult.UploadIdSetString">
            <summary>设置 ListPartsResult.set_UploadId(String value) 的 填充码</summary>
        </member>
        <member name="T:Aliyun.OSS.Model.Fakes.ShimListPartsResult.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.ShimListPartsResult.AllInstances.BucketGet">
            <summary>设置 ListPartsResult.get_Bucket() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.ShimListPartsResult.AllInstances.BucketSetString">
            <summary>设置 ListPartsResult.set_Bucket(String value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.ShimListPartsResult.AllInstances.EncodingTypeGet">
            <summary>设置 ListPartsResult.get_EncodingType() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.ShimListPartsResult.AllInstances.EncodingTypeSetString">
            <summary>设置 ListPartsResult.set_EncodingType(String value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.ShimListPartsResult.AllInstances.IsTruncatedGet">
            <summary>设置 ListPartsResult.get_IsTruncated() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.ShimListPartsResult.AllInstances.IsTruncatedSetBoolean">
            <summary>设置 ListPartsResult.set_IsTruncated(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.ShimListPartsResult.AllInstances.KeyGet">
            <summary>设置 ListPartsResult.get_Key() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.ShimListPartsResult.AllInstances.KeySetString">
            <summary>设置 ListPartsResult.set_Key(String value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.ShimListPartsResult.AllInstances.MaxPartsGet">
            <summary>设置 ListPartsResult.get_MaxParts() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.ShimListPartsResult.AllInstances.MaxPartsSetInt32">
            <summary>设置 ListPartsResult.set_MaxParts(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.ShimListPartsResult.AllInstances.NextPartNumberMarkerGet">
            <summary>设置 ListPartsResult.get_NextPartNumberMarker() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.ShimListPartsResult.AllInstances.NextPartNumberMarkerSetString">
            <summary>设置 ListPartsResult.set_NextPartNumberMarker(String value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.ShimListPartsResult.AllInstances.PartNumberMarkerGet">
            <summary>设置 ListPartsResult.get_PartNumberMarker() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.ShimListPartsResult.AllInstances.PartNumberMarkerSetInt32">
            <summary>设置 ListPartsResult.set_PartNumberMarker(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.ShimListPartsResult.AllInstances.PartResultsGet">
            <summary>设置 ListPartsResult.get_PartResults() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.ShimListPartsResult.AllInstances.PartResultsSetListPartsResultPartResultArray">
            <summary>设置 ListPartsResult.set_PartResults(PartResult[] value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.ShimListPartsResult.AllInstances.UploadIdGet">
            <summary>设置 ListPartsResult.get_UploadId() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.ShimListPartsResult.AllInstances.UploadIdSetString">
            <summary>设置 ListPartsResult.set_UploadId(String value) 的 填充码</summary>
        </member>
        <member name="T:Aliyun.OSS.Model.Fakes.ShimListPartsResult.ShimPartResult">
            <summary>Aliyun.OSS.Model.ListPartsResult+PartResult 的填充码类型</summary>
        </member>
        <member name="M:Aliyun.OSS.Model.Fakes.ShimListPartsResult.ShimPartResult.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Aliyun.OSS.Model.Fakes.ShimListPartsResult.ShimPartResult.#ctor(Aliyun.OSS.Model.ListPartsResult.PartResult)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Aliyun.OSS.Model.Fakes.ShimListPartsResult.ShimPartResult.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Aliyun.OSS.Model.Fakes.ShimListPartsResult.ShimPartResult.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.ShimListPartsResult.ShimPartResult.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.ShimListPartsResult.ShimPartResult.Constructor">
            <summary>设置 PartResult.PartResult() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.ShimListPartsResult.ShimPartResult.ETagGet">
            <summary>设置 PartResult.get_ETag() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.ShimListPartsResult.ShimPartResult.ETagSetString">
            <summary>设置 PartResult.set_ETag(String value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.ShimListPartsResult.ShimPartResult.LastModifiedGet">
            <summary>设置 PartResult.get_LastModified() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.ShimListPartsResult.ShimPartResult.LastModifiedSetDateTime">
            <summary>设置 PartResult.set_LastModified(DateTime value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.ShimListPartsResult.ShimPartResult.PartNumberGet">
            <summary>设置 PartResult.get_PartNumber() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.ShimListPartsResult.ShimPartResult.PartNumberSetInt32">
            <summary>设置 PartResult.set_PartNumber(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.ShimListPartsResult.ShimPartResult.SizeGet">
            <summary>设置 PartResult.get_Size() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.ShimListPartsResult.ShimPartResult.SizeSetInt64">
            <summary>设置 PartResult.set_Size(Int64 value) 的 填充码</summary>
        </member>
        <member name="T:Aliyun.OSS.Model.Fakes.ShimListPartsResult.ShimPartResult.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.ShimListPartsResult.ShimPartResult.AllInstances.ETagGet">
            <summary>设置 PartResult.get_ETag() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.ShimListPartsResult.ShimPartResult.AllInstances.ETagSetString">
            <summary>设置 PartResult.set_ETag(String value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.ShimListPartsResult.ShimPartResult.AllInstances.LastModifiedGet">
            <summary>设置 PartResult.get_LastModified() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.ShimListPartsResult.ShimPartResult.AllInstances.LastModifiedSetDateTime">
            <summary>设置 PartResult.set_LastModified(DateTime value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.ShimListPartsResult.ShimPartResult.AllInstances.PartNumberGet">
            <summary>设置 PartResult.get_PartNumber() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.ShimListPartsResult.ShimPartResult.AllInstances.PartNumberSetInt32">
            <summary>设置 PartResult.set_PartNumber(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.ShimListPartsResult.ShimPartResult.AllInstances.SizeGet">
            <summary>设置 PartResult.get_Size() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.ShimListPartsResult.ShimPartResult.AllInstances.SizeSetInt64">
            <summary>设置 PartResult.set_Size(Int64 value) 的 填充码</summary>
        </member>
        <member name="T:Aliyun.OSS.Model.Fakes.ShimSetBucketCorsRequestModel">
            <summary>Aliyun.OSS.Model.SetBucketCorsRequestModel 的填充码类型</summary>
        </member>
        <member name="M:Aliyun.OSS.Model.Fakes.ShimSetBucketCorsRequestModel.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Aliyun.OSS.Model.Fakes.ShimSetBucketCorsRequestModel.#ctor(Aliyun.OSS.Model.SetBucketCorsRequestModel)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Aliyun.OSS.Model.Fakes.ShimSetBucketCorsRequestModel.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Aliyun.OSS.Model.Fakes.ShimSetBucketCorsRequestModel.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.ShimSetBucketCorsRequestModel.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.ShimSetBucketCorsRequestModel.CORSRuleModelsGet">
            <summary>设置 SetBucketCorsRequestModel.get_CORSRuleModels() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.ShimSetBucketCorsRequestModel.CORSRuleModelsSetSetBucketCorsRequestModelCORSRuleModelArray">
            <summary>设置 SetBucketCorsRequestModel.set_CORSRuleModels(CORSRuleModel[] value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.ShimSetBucketCorsRequestModel.Constructor">
            <summary>设置 SetBucketCorsRequestModel.SetBucketCorsRequestModel() 的 填充码</summary>
        </member>
        <member name="T:Aliyun.OSS.Model.Fakes.ShimSetBucketCorsRequestModel.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.ShimSetBucketCorsRequestModel.AllInstances.CORSRuleModelsGet">
            <summary>设置 SetBucketCorsRequestModel.get_CORSRuleModels() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.ShimSetBucketCorsRequestModel.AllInstances.CORSRuleModelsSetSetBucketCorsRequestModelCORSRuleModelArray">
            <summary>设置 SetBucketCorsRequestModel.set_CORSRuleModels(CORSRuleModel[] value) 的 填充码</summary>
        </member>
        <member name="T:Aliyun.OSS.Model.Fakes.ShimSetBucketCorsRequestModel.ShimCORSRuleModel">
            <summary>Aliyun.OSS.Model.SetBucketCorsRequestModel+CORSRuleModel 的填充码类型</summary>
        </member>
        <member name="M:Aliyun.OSS.Model.Fakes.ShimSetBucketCorsRequestModel.ShimCORSRuleModel.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Aliyun.OSS.Model.Fakes.ShimSetBucketCorsRequestModel.ShimCORSRuleModel.#ctor(Aliyun.OSS.Model.SetBucketCorsRequestModel.CORSRuleModel)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Aliyun.OSS.Model.Fakes.ShimSetBucketCorsRequestModel.ShimCORSRuleModel.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Aliyun.OSS.Model.Fakes.ShimSetBucketCorsRequestModel.ShimCORSRuleModel.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.ShimSetBucketCorsRequestModel.ShimCORSRuleModel.AllowedHeadersGet">
            <summary>设置 CORSRuleModel.get_AllowedHeaders() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.ShimSetBucketCorsRequestModel.ShimCORSRuleModel.AllowedHeadersSetStringArray">
            <summary>设置 CORSRuleModel.set_AllowedHeaders(String[] value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.ShimSetBucketCorsRequestModel.ShimCORSRuleModel.AllowedMethodsGet">
            <summary>设置 CORSRuleModel.get_AllowedMethods() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.ShimSetBucketCorsRequestModel.ShimCORSRuleModel.AllowedMethodsSetStringArray">
            <summary>设置 CORSRuleModel.set_AllowedMethods(String[] value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.ShimSetBucketCorsRequestModel.ShimCORSRuleModel.AllowedOriginsGet">
            <summary>设置 CORSRuleModel.get_AllowedOrigins() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.ShimSetBucketCorsRequestModel.ShimCORSRuleModel.AllowedOriginsSetStringArray">
            <summary>设置 CORSRuleModel.set_AllowedOrigins(String[] value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.ShimSetBucketCorsRequestModel.ShimCORSRuleModel.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.ShimSetBucketCorsRequestModel.ShimCORSRuleModel.Constructor">
            <summary>设置 CORSRuleModel.CORSRuleModel() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.ShimSetBucketCorsRequestModel.ShimCORSRuleModel.ExposeHeadersGet">
            <summary>设置 CORSRuleModel.get_ExposeHeaders() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.ShimSetBucketCorsRequestModel.ShimCORSRuleModel.ExposeHeadersSetStringArray">
            <summary>设置 CORSRuleModel.set_ExposeHeaders(String[] value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.ShimSetBucketCorsRequestModel.ShimCORSRuleModel.MaxAgeSecondsGet">
            <summary>设置 CORSRuleModel.get_MaxAgeSeconds() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.ShimSetBucketCorsRequestModel.ShimCORSRuleModel.MaxAgeSecondsSetInt32">
            <summary>设置 CORSRuleModel.set_MaxAgeSeconds(Int32 value) 的 填充码</summary>
        </member>
        <member name="T:Aliyun.OSS.Model.Fakes.ShimSetBucketCorsRequestModel.ShimCORSRuleModel.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.ShimSetBucketCorsRequestModel.ShimCORSRuleModel.AllInstances.AllowedHeadersGet">
            <summary>设置 CORSRuleModel.get_AllowedHeaders() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.ShimSetBucketCorsRequestModel.ShimCORSRuleModel.AllInstances.AllowedHeadersSetStringArray">
            <summary>设置 CORSRuleModel.set_AllowedHeaders(String[] value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.ShimSetBucketCorsRequestModel.ShimCORSRuleModel.AllInstances.AllowedMethodsGet">
            <summary>设置 CORSRuleModel.get_AllowedMethods() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.ShimSetBucketCorsRequestModel.ShimCORSRuleModel.AllInstances.AllowedMethodsSetStringArray">
            <summary>设置 CORSRuleModel.set_AllowedMethods(String[] value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.ShimSetBucketCorsRequestModel.ShimCORSRuleModel.AllInstances.AllowedOriginsGet">
            <summary>设置 CORSRuleModel.get_AllowedOrigins() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.ShimSetBucketCorsRequestModel.ShimCORSRuleModel.AllInstances.AllowedOriginsSetStringArray">
            <summary>设置 CORSRuleModel.set_AllowedOrigins(String[] value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.ShimSetBucketCorsRequestModel.ShimCORSRuleModel.AllInstances.ExposeHeadersGet">
            <summary>设置 CORSRuleModel.get_ExposeHeaders() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.ShimSetBucketCorsRequestModel.ShimCORSRuleModel.AllInstances.ExposeHeadersSetStringArray">
            <summary>设置 CORSRuleModel.set_ExposeHeaders(String[] value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.ShimSetBucketCorsRequestModel.ShimCORSRuleModel.AllInstances.MaxAgeSecondsGet">
            <summary>设置 CORSRuleModel.get_MaxAgeSeconds() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.ShimSetBucketCorsRequestModel.ShimCORSRuleModel.AllInstances.MaxAgeSecondsSetInt32">
            <summary>设置 CORSRuleModel.set_MaxAgeSeconds(Int32 value) 的 填充码</summary>
        </member>
        <member name="T:Aliyun.OSS.Model.Fakes.ShimSetBucketLoggingRequestModel">
            <summary>Aliyun.OSS.Model.SetBucketLoggingRequestModel 的填充码类型</summary>
        </member>
        <member name="M:Aliyun.OSS.Model.Fakes.ShimSetBucketLoggingRequestModel.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Aliyun.OSS.Model.Fakes.ShimSetBucketLoggingRequestModel.#ctor(Aliyun.OSS.Model.SetBucketLoggingRequestModel)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Aliyun.OSS.Model.Fakes.ShimSetBucketLoggingRequestModel.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Aliyun.OSS.Model.Fakes.ShimSetBucketLoggingRequestModel.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.ShimSetBucketLoggingRequestModel.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.ShimSetBucketLoggingRequestModel.Constructor">
            <summary>设置 SetBucketLoggingRequestModel.SetBucketLoggingRequestModel() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.ShimSetBucketLoggingRequestModel.LoggingEnabledGet">
            <summary>设置 SetBucketLoggingRequestModel.get_LoggingEnabled() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.ShimSetBucketLoggingRequestModel.LoggingEnabledSetSetBucketLoggingRequestModelSetBucketLoggingEnabled">
            <summary>设置 SetBucketLoggingRequestModel.set_LoggingEnabled(SetBucketLoggingEnabled value) 的 填充码</summary>
        </member>
        <member name="T:Aliyun.OSS.Model.Fakes.ShimSetBucketLoggingRequestModel.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.ShimSetBucketLoggingRequestModel.AllInstances.LoggingEnabledGet">
            <summary>设置 SetBucketLoggingRequestModel.get_LoggingEnabled() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.ShimSetBucketLoggingRequestModel.AllInstances.LoggingEnabledSetSetBucketLoggingRequestModelSetBucketLoggingEnabled">
            <summary>设置 SetBucketLoggingRequestModel.set_LoggingEnabled(SetBucketLoggingEnabled value) 的 填充码</summary>
        </member>
        <member name="T:Aliyun.OSS.Model.Fakes.ShimSetBucketLoggingRequestModel.ShimSetBucketLoggingEnabled">
            <summary>Aliyun.OSS.Model.SetBucketLoggingRequestModel+SetBucketLoggingEnabled 的填充码类型</summary>
        </member>
        <member name="M:Aliyun.OSS.Model.Fakes.ShimSetBucketLoggingRequestModel.ShimSetBucketLoggingEnabled.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Aliyun.OSS.Model.Fakes.ShimSetBucketLoggingRequestModel.ShimSetBucketLoggingEnabled.#ctor(Aliyun.OSS.Model.SetBucketLoggingRequestModel.SetBucketLoggingEnabled)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Aliyun.OSS.Model.Fakes.ShimSetBucketLoggingRequestModel.ShimSetBucketLoggingEnabled.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Aliyun.OSS.Model.Fakes.ShimSetBucketLoggingRequestModel.ShimSetBucketLoggingEnabled.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.ShimSetBucketLoggingRequestModel.ShimSetBucketLoggingEnabled.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.ShimSetBucketLoggingRequestModel.ShimSetBucketLoggingEnabled.Constructor">
            <summary>设置 SetBucketLoggingEnabled.SetBucketLoggingEnabled() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.ShimSetBucketLoggingRequestModel.ShimSetBucketLoggingEnabled.TargetBucketGet">
            <summary>设置 SetBucketLoggingEnabled.get_TargetBucket() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.ShimSetBucketLoggingRequestModel.ShimSetBucketLoggingEnabled.TargetBucketSetString">
            <summary>设置 SetBucketLoggingEnabled.set_TargetBucket(String value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.ShimSetBucketLoggingRequestModel.ShimSetBucketLoggingEnabled.TargetPrefixGet">
            <summary>设置 SetBucketLoggingEnabled.get_TargetPrefix() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.ShimSetBucketLoggingRequestModel.ShimSetBucketLoggingEnabled.TargetPrefixSetString">
            <summary>设置 SetBucketLoggingEnabled.set_TargetPrefix(String value) 的 填充码</summary>
        </member>
        <member name="T:Aliyun.OSS.Model.Fakes.ShimSetBucketLoggingRequestModel.ShimSetBucketLoggingEnabled.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.ShimSetBucketLoggingRequestModel.ShimSetBucketLoggingEnabled.AllInstances.TargetBucketGet">
            <summary>设置 SetBucketLoggingEnabled.get_TargetBucket() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.ShimSetBucketLoggingRequestModel.ShimSetBucketLoggingEnabled.AllInstances.TargetBucketSetString">
            <summary>设置 SetBucketLoggingEnabled.set_TargetBucket(String value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.ShimSetBucketLoggingRequestModel.ShimSetBucketLoggingEnabled.AllInstances.TargetPrefixGet">
            <summary>设置 SetBucketLoggingEnabled.get_TargetPrefix() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.ShimSetBucketLoggingRequestModel.ShimSetBucketLoggingEnabled.AllInstances.TargetPrefixSetString">
            <summary>设置 SetBucketLoggingEnabled.set_TargetPrefix(String value) 的 填充码</summary>
        </member>
        <member name="T:Aliyun.OSS.Model.Fakes.ShimSetBucketWebsiteRequestModel">
            <summary>Aliyun.OSS.Model.SetBucketWebsiteRequestModel 的填充码类型</summary>
        </member>
        <member name="M:Aliyun.OSS.Model.Fakes.ShimSetBucketWebsiteRequestModel.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Aliyun.OSS.Model.Fakes.ShimSetBucketWebsiteRequestModel.#ctor(Aliyun.OSS.Model.SetBucketWebsiteRequestModel)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Aliyun.OSS.Model.Fakes.ShimSetBucketWebsiteRequestModel.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Aliyun.OSS.Model.Fakes.ShimSetBucketWebsiteRequestModel.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.ShimSetBucketWebsiteRequestModel.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.ShimSetBucketWebsiteRequestModel.Constructor">
            <summary>设置 SetBucketWebsiteRequestModel.SetBucketWebsiteRequestModel() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.ShimSetBucketWebsiteRequestModel.ErrorDocumentGet">
            <summary>设置 SetBucketWebsiteRequestModel.get_ErrorDocument() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.ShimSetBucketWebsiteRequestModel.ErrorDocumentSetSetBucketWebsiteRequestModelErrorDocumentModel">
            <summary>设置 SetBucketWebsiteRequestModel.set_ErrorDocument(ErrorDocumentModel value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.ShimSetBucketWebsiteRequestModel.IndexDocumentGet">
            <summary>设置 SetBucketWebsiteRequestModel.get_IndexDocument() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.ShimSetBucketWebsiteRequestModel.IndexDocumentSetSetBucketWebsiteRequestModelIndexDocumentModel">
            <summary>设置 SetBucketWebsiteRequestModel.set_IndexDocument(IndexDocumentModel value) 的 填充码</summary>
        </member>
        <member name="T:Aliyun.OSS.Model.Fakes.ShimSetBucketWebsiteRequestModel.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.ShimSetBucketWebsiteRequestModel.AllInstances.ErrorDocumentGet">
            <summary>设置 SetBucketWebsiteRequestModel.get_ErrorDocument() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.ShimSetBucketWebsiteRequestModel.AllInstances.ErrorDocumentSetSetBucketWebsiteRequestModelErrorDocumentModel">
            <summary>设置 SetBucketWebsiteRequestModel.set_ErrorDocument(ErrorDocumentModel value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.ShimSetBucketWebsiteRequestModel.AllInstances.IndexDocumentGet">
            <summary>设置 SetBucketWebsiteRequestModel.get_IndexDocument() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.ShimSetBucketWebsiteRequestModel.AllInstances.IndexDocumentSetSetBucketWebsiteRequestModelIndexDocumentModel">
            <summary>设置 SetBucketWebsiteRequestModel.set_IndexDocument(IndexDocumentModel value) 的 填充码</summary>
        </member>
        <member name="T:Aliyun.OSS.Model.Fakes.ShimSetBucketWebsiteRequestModel.ShimErrorDocumentModel">
            <summary>Aliyun.OSS.Model.SetBucketWebsiteRequestModel+ErrorDocumentModel 的填充码类型</summary>
        </member>
        <member name="M:Aliyun.OSS.Model.Fakes.ShimSetBucketWebsiteRequestModel.ShimErrorDocumentModel.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Aliyun.OSS.Model.Fakes.ShimSetBucketWebsiteRequestModel.ShimErrorDocumentModel.#ctor(Aliyun.OSS.Model.SetBucketWebsiteRequestModel.ErrorDocumentModel)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Aliyun.OSS.Model.Fakes.ShimSetBucketWebsiteRequestModel.ShimErrorDocumentModel.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Aliyun.OSS.Model.Fakes.ShimSetBucketWebsiteRequestModel.ShimErrorDocumentModel.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.ShimSetBucketWebsiteRequestModel.ShimErrorDocumentModel.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.ShimSetBucketWebsiteRequestModel.ShimErrorDocumentModel.Constructor">
            <summary>设置 ErrorDocumentModel.ErrorDocumentModel() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.ShimSetBucketWebsiteRequestModel.ShimErrorDocumentModel.KeyGet">
            <summary>设置 ErrorDocumentModel.get_Key() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.ShimSetBucketWebsiteRequestModel.ShimErrorDocumentModel.KeySetString">
            <summary>设置 ErrorDocumentModel.set_Key(String value) 的 填充码</summary>
        </member>
        <member name="T:Aliyun.OSS.Model.Fakes.ShimSetBucketWebsiteRequestModel.ShimErrorDocumentModel.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.ShimSetBucketWebsiteRequestModel.ShimErrorDocumentModel.AllInstances.KeyGet">
            <summary>设置 ErrorDocumentModel.get_Key() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.ShimSetBucketWebsiteRequestModel.ShimErrorDocumentModel.AllInstances.KeySetString">
            <summary>设置 ErrorDocumentModel.set_Key(String value) 的 填充码</summary>
        </member>
        <member name="T:Aliyun.OSS.Model.Fakes.ShimSetBucketWebsiteRequestModel.ShimIndexDocumentModel">
            <summary>Aliyun.OSS.Model.SetBucketWebsiteRequestModel+IndexDocumentModel 的填充码类型</summary>
        </member>
        <member name="M:Aliyun.OSS.Model.Fakes.ShimSetBucketWebsiteRequestModel.ShimIndexDocumentModel.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Aliyun.OSS.Model.Fakes.ShimSetBucketWebsiteRequestModel.ShimIndexDocumentModel.#ctor(Aliyun.OSS.Model.SetBucketWebsiteRequestModel.IndexDocumentModel)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Aliyun.OSS.Model.Fakes.ShimSetBucketWebsiteRequestModel.ShimIndexDocumentModel.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Aliyun.OSS.Model.Fakes.ShimSetBucketWebsiteRequestModel.ShimIndexDocumentModel.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.ShimSetBucketWebsiteRequestModel.ShimIndexDocumentModel.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.ShimSetBucketWebsiteRequestModel.ShimIndexDocumentModel.Constructor">
            <summary>设置 IndexDocumentModel.IndexDocumentModel() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.ShimSetBucketWebsiteRequestModel.ShimIndexDocumentModel.SuffixGet">
            <summary>设置 IndexDocumentModel.get_Suffix() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.ShimSetBucketWebsiteRequestModel.ShimIndexDocumentModel.SuffixSetString">
            <summary>设置 IndexDocumentModel.set_Suffix(String value) 的 填充码</summary>
        </member>
        <member name="T:Aliyun.OSS.Model.Fakes.ShimSetBucketWebsiteRequestModel.ShimIndexDocumentModel.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.ShimSetBucketWebsiteRequestModel.ShimIndexDocumentModel.AllInstances.SuffixGet">
            <summary>设置 IndexDocumentModel.get_Suffix() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.ShimSetBucketWebsiteRequestModel.ShimIndexDocumentModel.AllInstances.SuffixSetString">
            <summary>设置 IndexDocumentModel.set_Suffix(String value) 的 填充码</summary>
        </member>
        <member name="T:Aliyun.OSS.Model.Fakes.ShimStreamResult">
            <summary>Aliyun.OSS.Model.StreamResult 的填充码类型</summary>
        </member>
        <member name="M:Aliyun.OSS.Model.Fakes.ShimStreamResult.#ctor(Aliyun.OSS.Model.StreamResult)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Aliyun.OSS.Model.Fakes.ShimStreamResult.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Aliyun.OSS.Model.Fakes.ShimStreamResult.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:Aliyun.OSS.Model.Fakes.ShimStreamResult.Bind(System.IDisposable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.ShimStreamResult.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.ShimStreamResult.Constructor">
            <summary>设置 StreamResult.StreamResult() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.ShimStreamResult.Dispose">
            <summary>设置 StreamResult.Dispose() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.ShimStreamResult.DisposeBoolean">
            <summary>设置 StreamResult.Dispose(Boolean disposing) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.ShimStreamResult.IsSetResponseStream">
            <summary>设置 StreamResult.IsSetResponseStream() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.ShimStreamResult.ResponseStreamGet">
            <summary>设置 StreamResult.get_ResponseStream() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.ShimStreamResult.ResponseStreamSetStream">
            <summary>设置 StreamResult.set_ResponseStream(Stream value) 的 填充码</summary>
        </member>
        <member name="T:Aliyun.OSS.Model.Fakes.ShimStreamResult.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.ShimStreamResult.AllInstances.Dispose">
            <summary>设置 StreamResult.Dispose() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.ShimStreamResult.AllInstances.DisposeBoolean">
            <summary>设置 StreamResult.Dispose(Boolean disposing) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.ShimStreamResult.AllInstances.IsSetResponseStream">
            <summary>设置 StreamResult.IsSetResponseStream() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.ShimStreamResult.AllInstances.ResponseStreamGet">
            <summary>设置 StreamResult.get_ResponseStream() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.ShimStreamResult.AllInstances.ResponseStreamSetStream">
            <summary>设置 StreamResult.set_ResponseStream(Stream value) 的 填充码</summary>
        </member>
        <member name="T:Aliyun.OSS.Model.Fakes.ShimUploadPartCopyRequestModel">
            <summary>Aliyun.OSS.Model.UploadPartCopyRequestModel 的填充码类型</summary>
        </member>
        <member name="M:Aliyun.OSS.Model.Fakes.ShimUploadPartCopyRequestModel.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Aliyun.OSS.Model.Fakes.ShimUploadPartCopyRequestModel.#ctor(Aliyun.OSS.Model.UploadPartCopyRequestModel)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Aliyun.OSS.Model.Fakes.ShimUploadPartCopyRequestModel.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Aliyun.OSS.Model.Fakes.ShimUploadPartCopyRequestModel.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.ShimUploadPartCopyRequestModel.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.ShimUploadPartCopyRequestModel.Constructor">
            <summary>设置 UploadPartCopyRequestModel.UploadPartCopyRequestModel() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.ShimUploadPartCopyRequestModel.ETagGet">
            <summary>设置 UploadPartCopyRequestModel.get_ETag() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.ShimUploadPartCopyRequestModel.ETagSetString">
            <summary>设置 UploadPartCopyRequestModel.set_ETag(String value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.ShimUploadPartCopyRequestModel.LastModifiedGet">
            <summary>设置 UploadPartCopyRequestModel.get_LastModified() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.ShimUploadPartCopyRequestModel.LastModifiedSetDateTime">
            <summary>设置 UploadPartCopyRequestModel.set_LastModified(DateTime value) 的 填充码</summary>
        </member>
        <member name="T:Aliyun.OSS.Model.Fakes.ShimUploadPartCopyRequestModel.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.ShimUploadPartCopyRequestModel.AllInstances.ETagGet">
            <summary>设置 UploadPartCopyRequestModel.get_ETag() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.ShimUploadPartCopyRequestModel.AllInstances.ETagSetString">
            <summary>设置 UploadPartCopyRequestModel.set_ETag(String value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.ShimUploadPartCopyRequestModel.AllInstances.LastModifiedGet">
            <summary>设置 UploadPartCopyRequestModel.get_LastModified() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.ShimUploadPartCopyRequestModel.AllInstances.LastModifiedSetDateTime">
            <summary>设置 UploadPartCopyRequestModel.set_LastModified(DateTime value) 的 填充码</summary>
        </member>
        <member name="T:Aliyun.OSS.Model.Fakes.StubAccessControlPolicy">
            <summary>Aliyun.OSS.Model.AccessControlPolicy 的存根类型</summary>
        </member>
        <member name="M:Aliyun.OSS.Model.Fakes.StubAccessControlPolicy.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Aliyun.OSS.Model.Fakes.StubAccessControlPolicy.InitializeStub">
            <summary>初始化 type StubAccessControlPolicy 的新实例</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.StubAccessControlPolicy.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.StubAccessControlPolicy.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.StubAccessControlPolicy.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Aliyun.OSS.Model.Fakes.StubBucketModel">
            <summary>Aliyun.OSS.Model.BucketModel 的存根类型</summary>
        </member>
        <member name="M:Aliyun.OSS.Model.Fakes.StubBucketModel.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Aliyun.OSS.Model.Fakes.StubBucketModel.InitializeStub">
            <summary>初始化 type StubBucketModel 的新实例</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.StubBucketModel.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.StubBucketModel.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.StubBucketModel.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Aliyun.OSS.Model.Fakes.StubCompleteMultipartUploadRequestModel">
            <summary>Aliyun.OSS.Model.CompleteMultipartUploadRequestModel 的存根类型</summary>
        </member>
        <member name="M:Aliyun.OSS.Model.Fakes.StubCompleteMultipartUploadRequestModel.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Aliyun.OSS.Model.Fakes.StubCompleteMultipartUploadRequestModel.InitializeStub">
            <summary>初始化 type StubCompleteMultipartUploadRequestModel 的新实例</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.StubCompleteMultipartUploadRequestModel.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.StubCompleteMultipartUploadRequestModel.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.StubCompleteMultipartUploadRequestModel.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Aliyun.OSS.Model.Fakes.StubCompleteMultipartUploadResultModel">
            <summary>Aliyun.OSS.Model.CompleteMultipartUploadResultModel 的存根类型</summary>
        </member>
        <member name="M:Aliyun.OSS.Model.Fakes.StubCompleteMultipartUploadResultModel.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Aliyun.OSS.Model.Fakes.StubCompleteMultipartUploadResultModel.InitializeStub">
            <summary>初始化 type StubCompleteMultipartUploadResultModel 的新实例</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.StubCompleteMultipartUploadResultModel.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.StubCompleteMultipartUploadResultModel.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.StubCompleteMultipartUploadResultModel.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Aliyun.OSS.Model.Fakes.StubCopyObjectResultModel">
            <summary>Aliyun.OSS.Model.CopyObjectResultModel 的存根类型</summary>
        </member>
        <member name="M:Aliyun.OSS.Model.Fakes.StubCopyObjectResultModel.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Aliyun.OSS.Model.Fakes.StubCopyObjectResultModel.InitializeStub">
            <summary>初始化 type StubCopyObjectResultModel 的新实例</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.StubCopyObjectResultModel.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.StubCopyObjectResultModel.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.StubCopyObjectResultModel.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Aliyun.OSS.Model.Fakes.StubDeleteObjectsRequestModel">
            <summary>Aliyun.OSS.Model.DeleteObjectsRequestModel 的存根类型</summary>
        </member>
        <member name="M:Aliyun.OSS.Model.Fakes.StubDeleteObjectsRequestModel.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Aliyun.OSS.Model.Fakes.StubDeleteObjectsRequestModel.InitializeStub">
            <summary>初始化 type StubDeleteObjectsRequestModel 的新实例</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.StubDeleteObjectsRequestModel.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.StubDeleteObjectsRequestModel.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.StubDeleteObjectsRequestModel.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Aliyun.OSS.Model.Fakes.StubErrorResult">
            <summary>Aliyun.OSS.Model.ErrorResult 的存根类型</summary>
        </member>
        <member name="M:Aliyun.OSS.Model.Fakes.StubErrorResult.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Aliyun.OSS.Model.Fakes.StubErrorResult.InitializeStub">
            <summary>初始化 type StubErrorResult 的新实例</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.StubErrorResult.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.StubErrorResult.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.StubErrorResult.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Aliyun.OSS.Model.Fakes.StubExpiration">
            <summary>Aliyun.OSS.Model.Expiration 的存根类型</summary>
        </member>
        <member name="M:Aliyun.OSS.Model.Fakes.StubExpiration.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Aliyun.OSS.Model.Fakes.StubExpiration.InitializeStub">
            <summary>初始化 type StubExpiration 的新实例</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.StubExpiration.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.StubExpiration.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.StubExpiration.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Aliyun.OSS.Model.Fakes.StubGenericResult">
            <summary>Aliyun.OSS.Model.GenericResult 的存根类型</summary>
        </member>
        <member name="M:Aliyun.OSS.Model.Fakes.StubGenericResult.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Aliyun.OSS.Model.Fakes.StubGenericResult.InitializeStub">
            <summary>初始化 type StubGenericResult 的新实例</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.StubGenericResult.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.StubGenericResult.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.StubGenericResult.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Aliyun.OSS.Model.Fakes.StubInitiateMultipartResult">
            <summary>Aliyun.OSS.Model.InitiateMultipartResult 的存根类型</summary>
        </member>
        <member name="M:Aliyun.OSS.Model.Fakes.StubInitiateMultipartResult.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Aliyun.OSS.Model.Fakes.StubInitiateMultipartResult.InitializeStub">
            <summary>初始化 type StubInitiateMultipartResult 的新实例</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.StubInitiateMultipartResult.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.StubInitiateMultipartResult.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.StubInitiateMultipartResult.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Aliyun.OSS.Model.Fakes.StubLifecycleConfiguration">
            <summary>Aliyun.OSS.Model.LifecycleConfiguration 的存根类型</summary>
        </member>
        <member name="M:Aliyun.OSS.Model.Fakes.StubLifecycleConfiguration.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Aliyun.OSS.Model.Fakes.StubLifecycleConfiguration.InitializeStub">
            <summary>初始化 type StubLifecycleConfiguration 的新实例</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.StubLifecycleConfiguration.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.StubLifecycleConfiguration.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.StubLifecycleConfiguration.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Aliyun.OSS.Model.Fakes.StubLifecycleRule">
            <summary>Aliyun.OSS.Model.LifecycleRule 的存根类型</summary>
        </member>
        <member name="M:Aliyun.OSS.Model.Fakes.StubLifecycleRule.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Aliyun.OSS.Model.Fakes.StubLifecycleRule.InitializeStub">
            <summary>初始化 type StubLifecycleRule 的新实例</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.StubLifecycleRule.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.StubLifecycleRule.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.StubLifecycleRule.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Aliyun.OSS.Model.Fakes.StubListAllMyBucketsResult">
            <summary>Aliyun.OSS.Model.ListAllMyBucketsResult 的存根类型</summary>
        </member>
        <member name="M:Aliyun.OSS.Model.Fakes.StubListAllMyBucketsResult.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Aliyun.OSS.Model.Fakes.StubListAllMyBucketsResult.InitializeStub">
            <summary>初始化 type StubListAllMyBucketsResult 的新实例</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.StubListAllMyBucketsResult.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.StubListAllMyBucketsResult.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.StubListAllMyBucketsResult.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Aliyun.OSS.Model.Fakes.StubListBucketResult">
            <summary>Aliyun.OSS.Model.ListBucketResult 的存根类型</summary>
        </member>
        <member name="M:Aliyun.OSS.Model.Fakes.StubListBucketResult.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Aliyun.OSS.Model.Fakes.StubListBucketResult.InitializeStub">
            <summary>初始化 type StubListBucketResult 的新实例</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.StubListBucketResult.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.StubListBucketResult.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.StubListBucketResult.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Aliyun.OSS.Model.Fakes.StubListBucketResultCommonPrefixes">
            <summary>Aliyun.OSS.Model.ListBucketResultCommonPrefixes 的存根类型</summary>
        </member>
        <member name="M:Aliyun.OSS.Model.Fakes.StubListBucketResultCommonPrefixes.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Aliyun.OSS.Model.Fakes.StubListBucketResultCommonPrefixes.InitializeStub">
            <summary>初始化 type StubListBucketResultCommonPrefixes 的新实例</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.StubListBucketResultCommonPrefixes.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.StubListBucketResultCommonPrefixes.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.StubListBucketResultCommonPrefixes.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Aliyun.OSS.Model.Fakes.StubListBucketResultContents">
            <summary>Aliyun.OSS.Model.ListBucketResultContents 的存根类型</summary>
        </member>
        <member name="M:Aliyun.OSS.Model.Fakes.StubListBucketResultContents.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Aliyun.OSS.Model.Fakes.StubListBucketResultContents.InitializeStub">
            <summary>初始化 type StubListBucketResultContents 的新实例</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.StubListBucketResultContents.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.StubListBucketResultContents.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.StubListBucketResultContents.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Aliyun.OSS.Model.Fakes.StubListMultipartUploadsResult">
            <summary>Aliyun.OSS.Model.ListMultipartUploadsResult 的存根类型</summary>
        </member>
        <member name="M:Aliyun.OSS.Model.Fakes.StubListMultipartUploadsResult.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Aliyun.OSS.Model.Fakes.StubListMultipartUploadsResult.InitializeStub">
            <summary>初始化 type StubListMultipartUploadsResult 的新实例</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.StubListMultipartUploadsResult.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.StubListMultipartUploadsResult.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.StubListMultipartUploadsResult.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Aliyun.OSS.Model.Fakes.StubListPartsResult">
            <summary>Aliyun.OSS.Model.ListPartsResult 的存根类型</summary>
        </member>
        <member name="M:Aliyun.OSS.Model.Fakes.StubListPartsResult.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Aliyun.OSS.Model.Fakes.StubListPartsResult.InitializeStub">
            <summary>初始化 type StubListPartsResult 的新实例</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.StubListPartsResult.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.StubListPartsResult.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.StubListPartsResult.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Aliyun.OSS.Model.Fakes.StubSetBucketCorsRequestModel">
            <summary>Aliyun.OSS.Model.SetBucketCorsRequestModel 的存根类型</summary>
        </member>
        <member name="M:Aliyun.OSS.Model.Fakes.StubSetBucketCorsRequestModel.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Aliyun.OSS.Model.Fakes.StubSetBucketCorsRequestModel.InitializeStub">
            <summary>初始化 type StubSetBucketCorsRequestModel 的新实例</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.StubSetBucketCorsRequestModel.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.StubSetBucketCorsRequestModel.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.StubSetBucketCorsRequestModel.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Aliyun.OSS.Model.Fakes.StubSetBucketLoggingRequestModel">
            <summary>Aliyun.OSS.Model.SetBucketLoggingRequestModel 的存根类型</summary>
        </member>
        <member name="M:Aliyun.OSS.Model.Fakes.StubSetBucketLoggingRequestModel.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Aliyun.OSS.Model.Fakes.StubSetBucketLoggingRequestModel.InitializeStub">
            <summary>初始化 type StubSetBucketLoggingRequestModel 的新实例</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.StubSetBucketLoggingRequestModel.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.StubSetBucketLoggingRequestModel.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.StubSetBucketLoggingRequestModel.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Aliyun.OSS.Model.Fakes.StubSetBucketWebsiteRequestModel">
            <summary>Aliyun.OSS.Model.SetBucketWebsiteRequestModel 的存根类型</summary>
        </member>
        <member name="M:Aliyun.OSS.Model.Fakes.StubSetBucketWebsiteRequestModel.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Aliyun.OSS.Model.Fakes.StubSetBucketWebsiteRequestModel.InitializeStub">
            <summary>初始化 type StubSetBucketWebsiteRequestModel 的新实例</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.StubSetBucketWebsiteRequestModel.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.StubSetBucketWebsiteRequestModel.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.StubSetBucketWebsiteRequestModel.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Aliyun.OSS.Model.Fakes.StubStreamResult">
            <summary>Aliyun.OSS.Model.StreamResult 的存根类型</summary>
        </member>
        <member name="M:Aliyun.OSS.Model.Fakes.StubStreamResult.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Aliyun.OSS.Model.Fakes.StubStreamResult.InitializeStub">
            <summary>初始化 type StubStreamResult 的新实例</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.StubStreamResult.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.StubStreamResult.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.StubStreamResult.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Aliyun.OSS.Model.Fakes.StubUploadPartCopyRequestModel">
            <summary>Aliyun.OSS.Model.UploadPartCopyRequestModel 的存根类型</summary>
        </member>
        <member name="M:Aliyun.OSS.Model.Fakes.StubUploadPartCopyRequestModel.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Aliyun.OSS.Model.Fakes.StubUploadPartCopyRequestModel.InitializeStub">
            <summary>初始化 type StubUploadPartCopyRequestModel 的新实例</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.StubUploadPartCopyRequestModel.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.StubUploadPartCopyRequestModel.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Aliyun.OSS.Model.Fakes.StubUploadPartCopyRequestModel.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Aliyun.OSS.Util.Fakes.ShimCallbackHeaderBuilder">
            <summary>Aliyun.OSS.Util.CallbackHeaderBuilder 的填充码类型</summary>
        </member>
        <member name="M:Aliyun.OSS.Util.Fakes.ShimCallbackHeaderBuilder.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Aliyun.OSS.Util.Fakes.ShimCallbackHeaderBuilder.#ctor(Aliyun.OSS.Util.CallbackHeaderBuilder)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Aliyun.OSS.Util.Fakes.ShimCallbackHeaderBuilder.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Aliyun.OSS.Util.Fakes.ShimCallbackHeaderBuilder.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Aliyun.OSS.Util.Fakes.ShimCallbackHeaderBuilder.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Aliyun.OSS.Util.Fakes.ShimCallbackHeaderBuilder.Build">
            <summary>设置 CallbackHeaderBuilder.Build() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Util.Fakes.ShimCallbackHeaderBuilder.CallbackBodyGet">
            <summary>设置 CallbackHeaderBuilder.get_CallbackBody() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Util.Fakes.ShimCallbackHeaderBuilder.CallbackBodySetString">
            <summary>设置 CallbackHeaderBuilder.set_CallbackBody(String value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Util.Fakes.ShimCallbackHeaderBuilder.CallbackBodyTypeGet">
            <summary>设置 CallbackHeaderBuilder.get_CallbackBodyType() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Util.Fakes.ShimCallbackHeaderBuilder.CallbackBodyTypeSetCallbackBodyType">
            <summary>设置 CallbackHeaderBuilder.set_CallbackBodyType(CallbackBodyType value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Util.Fakes.ShimCallbackHeaderBuilder.CallbackHostGet">
            <summary>设置 CallbackHeaderBuilder.get_CallbackHost() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Util.Fakes.ShimCallbackHeaderBuilder.CallbackHostSetString">
            <summary>设置 CallbackHeaderBuilder.set_CallbackHost(String value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Util.Fakes.ShimCallbackHeaderBuilder.CallbackUrlGet">
            <summary>设置 CallbackHeaderBuilder.get_CallbackUrl() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Util.Fakes.ShimCallbackHeaderBuilder.CallbackUrlSetString">
            <summary>设置 CallbackHeaderBuilder.set_CallbackUrl(String value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Util.Fakes.ShimCallbackHeaderBuilder.ConstructorStringString">
            <summary>设置 CallbackHeaderBuilder.CallbackHeaderBuilder(String callbackUrl, String callbackBody) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Util.Fakes.ShimCallbackHeaderBuilder.ConstructorStringStringStringCallbackBodyType">
            <summary>设置 CallbackHeaderBuilder.CallbackHeaderBuilder(String callbackUrl, String callbackHost, String callbackBody, CallbackBodyType callbackBodyType) 的 填充码</summary>
        </member>
        <member name="T:Aliyun.OSS.Util.Fakes.ShimCallbackHeaderBuilder.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Util.Fakes.ShimCallbackHeaderBuilder.AllInstances.Build">
            <summary>设置 CallbackHeaderBuilder.Build() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Util.Fakes.ShimCallbackHeaderBuilder.AllInstances.CallbackBodyGet">
            <summary>设置 CallbackHeaderBuilder.get_CallbackBody() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Util.Fakes.ShimCallbackHeaderBuilder.AllInstances.CallbackBodySetString">
            <summary>设置 CallbackHeaderBuilder.set_CallbackBody(String value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Util.Fakes.ShimCallbackHeaderBuilder.AllInstances.CallbackBodyTypeGet">
            <summary>设置 CallbackHeaderBuilder.get_CallbackBodyType() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Util.Fakes.ShimCallbackHeaderBuilder.AllInstances.CallbackBodyTypeSetCallbackBodyType">
            <summary>设置 CallbackHeaderBuilder.set_CallbackBodyType(CallbackBodyType value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Util.Fakes.ShimCallbackHeaderBuilder.AllInstances.CallbackHostGet">
            <summary>设置 CallbackHeaderBuilder.get_CallbackHost() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Util.Fakes.ShimCallbackHeaderBuilder.AllInstances.CallbackHostSetString">
            <summary>设置 CallbackHeaderBuilder.set_CallbackHost(String value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Util.Fakes.ShimCallbackHeaderBuilder.AllInstances.CallbackUrlGet">
            <summary>设置 CallbackHeaderBuilder.get_CallbackUrl() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Util.Fakes.ShimCallbackHeaderBuilder.AllInstances.CallbackUrlSetString">
            <summary>设置 CallbackHeaderBuilder.set_CallbackUrl(String value) 的 填充码</summary>
        </member>
        <member name="T:Aliyun.OSS.Util.Fakes.ShimCallbackVariableHeaderBuilder">
            <summary>Aliyun.OSS.Util.CallbackVariableHeaderBuilder 的填充码类型</summary>
        </member>
        <member name="M:Aliyun.OSS.Util.Fakes.ShimCallbackVariableHeaderBuilder.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Aliyun.OSS.Util.Fakes.ShimCallbackVariableHeaderBuilder.#ctor(Aliyun.OSS.Util.CallbackVariableHeaderBuilder)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Aliyun.OSS.Util.Fakes.ShimCallbackVariableHeaderBuilder.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Aliyun.OSS.Util.Fakes.ShimCallbackVariableHeaderBuilder.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Aliyun.OSS.Util.Fakes.ShimCallbackVariableHeaderBuilder.AddCallbackVariableStringString">
            <summary>设置 CallbackVariableHeaderBuilder.AddCallbackVariable(String key, String value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Util.Fakes.ShimCallbackVariableHeaderBuilder.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Aliyun.OSS.Util.Fakes.ShimCallbackVariableHeaderBuilder.Build">
            <summary>设置 CallbackVariableHeaderBuilder.Build() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Util.Fakes.ShimCallbackVariableHeaderBuilder.CallbackVariableGet">
            <summary>设置 CallbackVariableHeaderBuilder.get_CallbackVariable() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Util.Fakes.ShimCallbackVariableHeaderBuilder.Constructor">
            <summary>设置 CallbackVariableHeaderBuilder.CallbackVariableHeaderBuilder() 的 填充码</summary>
        </member>
        <member name="T:Aliyun.OSS.Util.Fakes.ShimCallbackVariableHeaderBuilder.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Util.Fakes.ShimCallbackVariableHeaderBuilder.AllInstances.AddCallbackVariableStringString">
            <summary>设置 CallbackVariableHeaderBuilder.AddCallbackVariable(String key, String value) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Util.Fakes.ShimCallbackVariableHeaderBuilder.AllInstances.Build">
            <summary>设置 CallbackVariableHeaderBuilder.Build() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Util.Fakes.ShimCallbackVariableHeaderBuilder.AllInstances.CallbackVariableGet">
            <summary>设置 CallbackVariableHeaderBuilder.get_CallbackVariable() 的 填充码</summary>
        </member>
        <member name="T:Aliyun.OSS.Util.Fakes.ShimHttpHeaders">
            <summary>Aliyun.OSS.Util.HttpHeaders 的填充码类型</summary>
        </member>
        <member name="M:Aliyun.OSS.Util.Fakes.ShimHttpHeaders.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Aliyun.OSS.Util.Fakes.ShimHttpHeaders.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Aliyun.OSS.Util.Fakes.ShimHttpHeaders.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Aliyun.OSS.Util.Fakes.ShimHttpHeaders.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="T:Aliyun.OSS.Util.Fakes.ShimHttpUtils">
            <summary>Aliyun.OSS.Util.HttpUtils 的填充码类型</summary>
        </member>
        <member name="M:Aliyun.OSS.Util.Fakes.ShimHttpUtils.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Aliyun.OSS.Util.Fakes.ShimHttpUtils.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Aliyun.OSS.Util.Fakes.ShimHttpUtils.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Aliyun.OSS.Util.Fakes.ShimHttpUtils.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Aliyun.OSS.Util.Fakes.ShimHttpUtils.ConbineQueryStringIEnumerableOfKeyValuePairOfStringString">
            <summary>设置 HttpUtils.ConbineQueryString(IEnumerable`1&lt;KeyValuePair`2&lt;String,String&gt;&gt; parameters) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Util.Fakes.ShimHttpUtils.DecodeUriString">
            <summary>设置 HttpUtils.DecodeUri(String uriToDecode) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Util.Fakes.ShimHttpUtils.EncodeUriStringString">
            <summary>设置 HttpUtils.EncodeUri(String uriToEncode, String charset) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Util.Fakes.ShimHttpUtils.GetContentTypeStringString">
            <summary>设置 HttpUtils.GetContentType(String key, String file) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Util.Fakes.ShimHttpUtils.ReencodeStringStringString">
            <summary>设置 HttpUtils.Reencode(String data, String fromCharset, String toCharset) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Util.Fakes.ShimHttpUtils.StaticConstructor">
            <summary>设置 HttpUtils.HttpUtils() 的 填充码</summary>
        </member>
        <member name="T:Aliyun.OSS.Util.Fakes.ShimIoUtils">
            <summary>Aliyun.OSS.Util.IoUtils 的填充码类型</summary>
        </member>
        <member name="M:Aliyun.OSS.Util.Fakes.ShimIoUtils.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Aliyun.OSS.Util.Fakes.ShimIoUtils.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Aliyun.OSS.Util.Fakes.ShimIoUtils.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Aliyun.OSS.Util.Fakes.ShimIoUtils.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Aliyun.OSS.Util.Fakes.ShimIoUtils.WriteToStreamStream">
            <summary>设置 IoUtils.WriteTo(Stream src, Stream dest) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Util.Fakes.ShimIoUtils.WriteToStreamStreamInt64">
            <summary>设置 IoUtils.WriteTo(Stream orignStream, Stream destStream, Int64 totalSize) 的 填充码</summary>
        </member>
        <member name="T:Aliyun.OSS.Util.Fakes.ShimOssUtils">
            <summary>Aliyun.OSS.Util.OssUtils 的填充码类型</summary>
        </member>
        <member name="M:Aliyun.OSS.Util.Fakes.ShimOssUtils.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Aliyun.OSS.Util.Fakes.ShimOssUtils.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Aliyun.OSS.Util.Fakes.ShimOssUtils.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:Aliyun.OSS.Util.Fakes.ShimOssUtils.InvokeInBackgroundOf1EventHandlerOfM0M0Object``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{System.EventHandler{``0},``0,System.Object})">
            <summary>设置 OssUtils.InvokeInBackground(EventHandler`1&lt;!!0&gt; handler, !!0 args, Object sender) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Util.Fakes.ShimOssUtils.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Aliyun.OSS.Util.Fakes.ShimOssUtils.BuildCopyObjectSourceStringString">
            <summary>设置 OssUtils.BuildCopyObjectSource(String bucketName, String objectKey) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Util.Fakes.ShimOssUtils.BuildPartCopySourceStringString">
            <summary>设置 OssUtils.BuildPartCopySource(String bucketName, String objectKey) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Util.Fakes.ShimOssUtils.CheckBucketNameString">
            <summary>设置 OssUtils.CheckBucketName(String bucketName) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Util.Fakes.ShimOssUtils.CheckCredentialsStringString">
            <summary>设置 OssUtils.CheckCredentials(String accessKeyId, String accessKeySecret) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Util.Fakes.ShimOssUtils.CheckObjectKeyString">
            <summary>设置 OssUtils.CheckObjectKey(String key) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Util.Fakes.ShimOssUtils.ComputeContentMd5StreamInt64">
            <summary>设置 OssUtils.ComputeContentMd5(Stream input, Int64 partSize) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Util.Fakes.ShimOssUtils.DetermineOsVersion">
            <summary>设置 OssUtils.DetermineOsVersion() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Util.Fakes.ShimOssUtils.DetermineSystemArchitecture">
            <summary>设置 OssUtils.DetermineSystemArchitecture() 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Util.Fakes.ShimOssUtils.IsBucketNameValidString">
            <summary>设置 OssUtils.IsBucketNameValid(String bucketName) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Util.Fakes.ShimOssUtils.IsIpUri">
            <summary>设置 OssUtils.IsIp(Uri endpoint) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Util.Fakes.ShimOssUtils.IsLoggingPrefixValidString">
            <summary>设置 OssUtils.IsLoggingPrefixValid(String loggingPrefix) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Util.Fakes.ShimOssUtils.IsObjectKeyValidString">
            <summary>设置 OssUtils.IsObjectKeyValid(String key) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Util.Fakes.ShimOssUtils.IsPartNumberInRangeNullableOfInt32">
            <summary>设置 OssUtils.IsPartNumberInRange(Nullable`1&lt;Int32&gt; partNumber) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Util.Fakes.ShimOssUtils.IsWebpageValidString">
            <summary>设置 OssUtils.IsWebpageValid(String webpage) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Util.Fakes.ShimOssUtils.JoinETagIEnumerableOfString">
            <summary>设置 OssUtils.JoinETag(IEnumerable`1&lt;String&gt; etags) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Util.Fakes.ShimOssUtils.MakeBucketEndpointUriStringClientConfiguration">
            <summary>设置 OssUtils.MakeBucketEndpoint(Uri endpoint, String bucket, ClientConfiguration conf) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Util.Fakes.ShimOssUtils.MakeResourcePathUriStringString">
            <summary>设置 OssUtils.MakeResourcePath(Uri endpoint, String bucket, String key) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Util.Fakes.ShimOssUtils.SetupProgressListenersStreamInt64Int64Int64ObjectEventHandlerOfStreamTransferProgressArgs">
            <summary>设置 OssUtils.SetupProgressListeners(Stream originalStream, Int64 contentLength, Int64 totalBytesRead, Int64 progressUpdateInterval, Object sender, EventHandler`1&lt;StreamTransferProgressArgs&gt; callback) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Util.Fakes.ShimOssUtils.SetupProgressListenersStreamInt64Int64ObjectEventHandlerOfStreamTransferProgressArgs">
            <summary>设置 OssUtils.SetupProgressListeners(Stream originalStream, Int64 contentLength, Int64 progressUpdateInterval, Object sender, EventHandler`1&lt;StreamTransferProgressArgs&gt; callback) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Util.Fakes.ShimOssUtils.SetupProgressListenersStreamInt64ObjectEventHandlerOfStreamTransferProgressArgs">
            <summary>设置 OssUtils.SetupProgressListeners(Stream originalStream, Int64 progressUpdateInterval, Object sender, EventHandler`1&lt;StreamTransferProgressArgs&gt; callback) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Util.Fakes.ShimOssUtils.TrimQuotesString">
            <summary>设置 OssUtils.TrimQuotes(String eTag) 的 填充码</summary>
        </member>
        <member name="P:Aliyun.OSS.Util.Fakes.ShimOssUtils.UrlEncodeKeyString">
            <summary>设置 OssUtils.UrlEncodeKey(String key) 的 填充码</summary>
        </member>
        <member name="T:Aliyun.OSS.Util.Fakes.StubCallbackHeaderBuilder">
            <summary>Aliyun.OSS.Util.CallbackHeaderBuilder 的存根类型</summary>
        </member>
        <member name="M:Aliyun.OSS.Util.Fakes.StubCallbackHeaderBuilder.#ctor(System.String,System.String)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Aliyun.OSS.Util.Fakes.StubCallbackHeaderBuilder.#ctor(System.String,System.String,System.String,Aliyun.OSS.Util.CallbackBodyType)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Aliyun.OSS.Util.Fakes.StubCallbackHeaderBuilder.InitializeStub">
            <summary>初始化 type StubCallbackHeaderBuilder 的新实例</summary>
        </member>
        <member name="P:Aliyun.OSS.Util.Fakes.StubCallbackHeaderBuilder.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Aliyun.OSS.Util.Fakes.StubCallbackHeaderBuilder.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Aliyun.OSS.Util.Fakes.StubCallbackHeaderBuilder.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Aliyun.OSS.Util.Fakes.StubCallbackVariableHeaderBuilder">
            <summary>Aliyun.OSS.Util.CallbackVariableHeaderBuilder 的存根类型</summary>
        </member>
        <member name="M:Aliyun.OSS.Util.Fakes.StubCallbackVariableHeaderBuilder.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Aliyun.OSS.Util.Fakes.StubCallbackVariableHeaderBuilder.InitializeStub">
            <summary>初始化 type StubCallbackVariableHeaderBuilder 的新实例</summary>
        </member>
        <member name="P:Aliyun.OSS.Util.Fakes.StubCallbackVariableHeaderBuilder.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Aliyun.OSS.Util.Fakes.StubCallbackVariableHeaderBuilder.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Aliyun.OSS.Util.Fakes.StubCallbackVariableHeaderBuilder.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
    </members>
</doc>
